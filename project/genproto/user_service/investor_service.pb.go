// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.6.1
// source: investor_service.proto

package user_service

import (
	empty "github.com/golang/protobuf/ptypes/empty"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ExanteAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvestorId string `protobuf:"bytes,1,opt,name=investor_id,json=investorId,proto3" json:"investor_id,omitempty"`
}

func (x *ExanteAccountRequest) Reset() {
	*x = ExanteAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExanteAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExanteAccountRequest) ProtoMessage() {}

func (x *ExanteAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExanteAccountRequest.ProtoReflect.Descriptor instead.
func (*ExanteAccountRequest) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{0}
}

func (x *ExanteAccountRequest) GetInvestorId() string {
	if x != nil {
		return x.InvestorId
	}
	return ""
}

type ExanteAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExanteAccountId string `protobuf:"bytes,1,opt,name=exante_account_id,json=exanteAccountId,proto3" json:"exante_account_id,omitempty"`
}

func (x *ExanteAccountResponse) Reset() {
	*x = ExanteAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExanteAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExanteAccountResponse) ProtoMessage() {}

func (x *ExanteAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExanteAccountResponse.ProtoReflect.Descriptor instead.
func (*ExanteAccountResponse) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{1}
}

func (x *ExanteAccountResponse) GetExanteAccountId() string {
	if x != nil {
		return x.ExanteAccountId
	}
	return ""
}

type GetInvestorPlatformRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetInvestorPlatformRequest) Reset() {
	*x = GetInvestorPlatformRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInvestorPlatformRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInvestorPlatformRequest) ProtoMessage() {}

func (x *GetInvestorPlatformRequest) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInvestorPlatformRequest.ProtoReflect.Descriptor instead.
func (*GetInvestorPlatformRequest) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetInvestorPlatformRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetInvestorPlatformResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Platform string `protobuf:"bytes,2,opt,name=platform,proto3" json:"platform,omitempty"`
}

func (x *GetInvestorPlatformResponse) Reset() {
	*x = GetInvestorPlatformResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInvestorPlatformResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInvestorPlatformResponse) ProtoMessage() {}

func (x *GetInvestorPlatformResponse) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInvestorPlatformResponse.ProtoReflect.Descriptor instead.
func (*GetInvestorPlatformResponse) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetInvestorPlatformResponse) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

type GetInvestorRegistrationStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetInvestorRegistrationStatusRequest) Reset() {
	*x = GetInvestorRegistrationStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInvestorRegistrationStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInvestorRegistrationStatusRequest) ProtoMessage() {}

func (x *GetInvestorRegistrationStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInvestorRegistrationStatusRequest.ProtoReflect.Descriptor instead.
func (*GetInvestorRegistrationStatusRequest) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetInvestorRegistrationStatusRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetInvestorRegistrationStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegistrationStatus string `protobuf:"bytes,2,opt,name=registration_status,json=registrationStatus,proto3" json:"registration_status,omitempty"`
	Residence          string `protobuf:"bytes,3,opt,name=residence,proto3" json:"residence,omitempty"`
}

func (x *GetInvestorRegistrationStatusResponse) Reset() {
	*x = GetInvestorRegistrationStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInvestorRegistrationStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInvestorRegistrationStatusResponse) ProtoMessage() {}

func (x *GetInvestorRegistrationStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInvestorRegistrationStatusResponse.ProtoReflect.Descriptor instead.
func (*GetInvestorRegistrationStatusResponse) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetInvestorRegistrationStatusResponse) GetRegistrationStatus() string {
	if x != nil {
		return x.RegistrationStatus
	}
	return ""
}

func (x *GetInvestorRegistrationStatusResponse) GetResidence() string {
	if x != nil {
		return x.Residence
	}
	return ""
}

type UserDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *UserDetail) Reset() {
	*x = UserDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDetail) ProtoMessage() {}

func (x *UserDetail) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDetail.ProtoReflect.Descriptor instead.
func (*UserDetail) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{6}
}

func (x *UserDetail) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type SendGmailNotificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gmail   string `protobuf:"bytes,1,opt,name=gmail,proto3" json:"gmail,omitempty"`
	Body    string `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	Date    string `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`
	Subject string `protobuf:"bytes,4,opt,name=subject,proto3" json:"subject,omitempty"`
}

func (x *SendGmailNotificationRequest) Reset() {
	*x = SendGmailNotificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendGmailNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendGmailNotificationRequest) ProtoMessage() {}

func (x *SendGmailNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendGmailNotificationRequest.ProtoReflect.Descriptor instead.
func (*SendGmailNotificationRequest) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{7}
}

func (x *SendGmailNotificationRequest) GetGmail() string {
	if x != nil {
		return x.Gmail
	}
	return ""
}

func (x *SendGmailNotificationRequest) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *SendGmailNotificationRequest) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *SendGmailNotificationRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

type SumsubCommentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ButtonId      string `protobuf:"bytes,1,opt,name=button_id,json=buttonId,proto3" json:"button_id,omitempty"`
	RejectReason  string `protobuf:"bytes,2,opt,name=reject_reason,json=rejectReason,proto3" json:"reject_reason,omitempty"`
	RejectType    string `protobuf:"bytes,3,opt,name=reject_type,json=rejectType,proto3" json:"reject_type,omitempty"`
	Comment       string `protobuf:"bytes,4,opt,name=comment,proto3" json:"comment,omitempty"`
	ClientComment string `protobuf:"bytes,5,opt,name=client_comment,json=clientComment,proto3" json:"client_comment,omitempty"`
}

func (x *SumsubCommentRequest) Reset() {
	*x = SumsubCommentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SumsubCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SumsubCommentRequest) ProtoMessage() {}

func (x *SumsubCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SumsubCommentRequest.ProtoReflect.Descriptor instead.
func (*SumsubCommentRequest) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{8}
}

func (x *SumsubCommentRequest) GetButtonId() string {
	if x != nil {
		return x.ButtonId
	}
	return ""
}

func (x *SumsubCommentRequest) GetRejectReason() string {
	if x != nil {
		return x.RejectReason
	}
	return ""
}

func (x *SumsubCommentRequest) GetRejectType() string {
	if x != nil {
		return x.RejectType
	}
	return ""
}

func (x *SumsubCommentRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *SumsubCommentRequest) GetClientComment() string {
	if x != nil {
		return x.ClientComment
	}
	return ""
}

type SumsubCommentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SumsubCommentResponse) Reset() {
	*x = SumsubCommentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SumsubCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SumsubCommentResponse) ProtoMessage() {}

func (x *SumsubCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SumsubCommentResponse.ProtoReflect.Descriptor instead.
func (*SumsubCommentResponse) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{9}
}

type GetSumsubRejectCommentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ButtonId string `protobuf:"bytes,1,opt,name=button_id,json=buttonId,proto3" json:"button_id,omitempty"`
}

func (x *GetSumsubRejectCommentRequest) Reset() {
	*x = GetSumsubRejectCommentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSumsubRejectCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSumsubRejectCommentRequest) ProtoMessage() {}

func (x *GetSumsubRejectCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSumsubRejectCommentRequest.ProtoReflect.Descriptor instead.
func (*GetSumsubRejectCommentRequest) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{10}
}

func (x *GetSumsubRejectCommentRequest) GetButtonId() string {
	if x != nil {
		return x.ButtonId
	}
	return ""
}

type GetSumsubRejectCommentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ButtonId string `protobuf:"bytes,1,opt,name=button_id,json=buttonId,proto3" json:"button_id,omitempty"`
	Comment  string `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *GetSumsubRejectCommentResponse) Reset() {
	*x = GetSumsubRejectCommentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSumsubRejectCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSumsubRejectCommentResponse) ProtoMessage() {}

func (x *GetSumsubRejectCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSumsubRejectCommentResponse.ProtoReflect.Descriptor instead.
func (*GetSumsubRejectCommentResponse) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{11}
}

func (x *GetSumsubRejectCommentResponse) GetButtonId() string {
	if x != nil {
		return x.ButtonId
	}
	return ""
}

func (x *GetSumsubRejectCommentResponse) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type GetKycStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
}

func (x *GetKycStatusRequest) Reset() {
	*x = GetKycStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKycStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKycStatusRequest) ProtoMessage() {}

func (x *GetKycStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKycStatusRequest.ProtoReflect.Descriptor instead.
func (*GetKycStatusRequest) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{12}
}

func (x *GetKycStatusRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

type GetKycStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status           string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	ReasonCode       string `protobuf:"bytes,2,opt,name=reason_code,json=reasonCode,proto3" json:"reason_code,omitempty"`
	RejectComment    string `protobuf:"bytes,3,opt,name=reject_comment,json=rejectComment,proto3" json:"reject_comment,omitempty"`
	RegistrationStep string `protobuf:"bytes,4,opt,name=registration_step,json=registrationStep,proto3" json:"registration_step,omitempty"`
}

func (x *GetKycStatusResponse) Reset() {
	*x = GetKycStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKycStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKycStatusResponse) ProtoMessage() {}

func (x *GetKycStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKycStatusResponse.ProtoReflect.Descriptor instead.
func (*GetKycStatusResponse) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{13}
}

func (x *GetKycStatusResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetKycStatusResponse) GetReasonCode() string {
	if x != nil {
		return x.ReasonCode
	}
	return ""
}

func (x *GetKycStatusResponse) GetRejectComment() string {
	if x != nil {
		return x.RejectComment
	}
	return ""
}

func (x *GetKycStatusResponse) GetRegistrationStep() string {
	if x != nil {
		return x.RegistrationStep
	}
	return ""
}

type InvestorSearchWithUsernameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *InvestorSearchWithUsernameRequest) Reset() {
	*x = InvestorSearchWithUsernameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvestorSearchWithUsernameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvestorSearchWithUsernameRequest) ProtoMessage() {}

func (x *InvestorSearchWithUsernameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvestorSearchWithUsernameRequest.ProtoReflect.Descriptor instead.
func (*InvestorSearchWithUsernameRequest) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{14}
}

func (x *InvestorSearchWithUsernameRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type InvestorSearchWithUsernameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Investors []*Investors `protobuf:"bytes,1,rep,name=investors,proto3" json:"investors,omitempty"`
}

func (x *InvestorSearchWithUsernameResponse) Reset() {
	*x = InvestorSearchWithUsernameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvestorSearchWithUsernameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvestorSearchWithUsernameResponse) ProtoMessage() {}

func (x *InvestorSearchWithUsernameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvestorSearchWithUsernameResponse.ProtoReflect.Descriptor instead.
func (*InvestorSearchWithUsernameResponse) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{15}
}

func (x *InvestorSearchWithUsernameResponse) GetInvestors() []*Investors {
	if x != nil {
		return x.Investors
	}
	return nil
}

type Investors struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvestorId    string `protobuf:"bytes,1,opt,name=investor_id,json=investorId,proto3" json:"investor_id,omitempty"`
	FirstName     string `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName      string `protobuf:"bytes,3,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	PhoneNumber   string `protobuf:"bytes,4,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	PersonalEmail string `protobuf:"bytes,5,opt,name=personal_email,json=personalEmail,proto3" json:"personal_email,omitempty"`
	Description   string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Img           string `protobuf:"bytes,7,opt,name=img,proto3" json:"img,omitempty"`
	Name          string `protobuf:"bytes,8,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Investors) Reset() {
	*x = Investors{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Investors) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Investors) ProtoMessage() {}

func (x *Investors) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Investors.ProtoReflect.Descriptor instead.
func (*Investors) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{16}
}

func (x *Investors) GetInvestorId() string {
	if x != nil {
		return x.InvestorId
	}
	return ""
}

func (x *Investors) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *Investors) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *Investors) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *Investors) GetPersonalEmail() string {
	if x != nil {
		return x.PersonalEmail
	}
	return ""
}

func (x *Investors) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Investors) GetImg() string {
	if x != nil {
		return x.Img
	}
	return ""
}

func (x *Investors) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UserPassport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number     string `protobuf:"bytes,1,opt,name=number,proto3" json:"number,omitempty"`
	ExpiresAt  string `protobuf:"bytes,2,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	ProvidedAt string `protobuf:"bytes,3,opt,name=provided_at,json=providedAt,proto3" json:"provided_at,omitempty"`
}

func (x *UserPassport) Reset() {
	*x = UserPassport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPassport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPassport) ProtoMessage() {}

func (x *UserPassport) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPassport.ProtoReflect.Descriptor instead.
func (*UserPassport) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{17}
}

func (x *UserPassport) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *UserPassport) GetExpiresAt() string {
	if x != nil {
		return x.ExpiresAt
	}
	return ""
}

func (x *UserPassport) GetProvidedAt() string {
	if x != nil {
		return x.ProvidedAt
	}
	return ""
}

type UserProofOfResidence struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostCode   string `protobuf:"bytes,1,opt,name=post_code,json=postCode,proto3" json:"post_code,omitempty"`
	ProvidedAt string `protobuf:"bytes,2,opt,name=provided_at,json=providedAt,proto3" json:"provided_at,omitempty"`
	ExpiresAt  string `protobuf:"bytes,3,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	Address    string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *UserProofOfResidence) Reset() {
	*x = UserProofOfResidence{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserProofOfResidence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserProofOfResidence) ProtoMessage() {}

func (x *UserProofOfResidence) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserProofOfResidence.ProtoReflect.Descriptor instead.
func (*UserProofOfResidence) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{18}
}

func (x *UserProofOfResidence) GetPostCode() string {
	if x != nil {
		return x.PostCode
	}
	return ""
}

func (x *UserProofOfResidence) GetProvidedAt() string {
	if x != nil {
		return x.ProvidedAt
	}
	return ""
}

func (x *UserProofOfResidence) GetExpiresAt() string {
	if x != nil {
		return x.ExpiresAt
	}
	return ""
}

func (x *UserProofOfResidence) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type UserKYC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CountryOfResidence   string `protobuf:"bytes,1,opt,name=country_of_residence,json=countryOfResidence,proto3" json:"country_of_residence,omitempty"`
	CountryOfCitizenship string `protobuf:"bytes,2,opt,name=country_of_citizenship,json=countryOfCitizenship,proto3" json:"country_of_citizenship,omitempty"`
	Status               string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	ApplicantId          string `protobuf:"bytes,4,opt,name=applicantId,proto3" json:"applicantId,omitempty"`
	ApplicationType      string `protobuf:"bytes,5,opt,name=applicationType,proto3" json:"applicationType,omitempty"`
	RejectComment        string `protobuf:"bytes,6,opt,name=reject_comment,json=rejectComment,proto3" json:"reject_comment,omitempty"`
}

func (x *UserKYC) Reset() {
	*x = UserKYC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserKYC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserKYC) ProtoMessage() {}

func (x *UserKYC) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserKYC.ProtoReflect.Descriptor instead.
func (*UserKYC) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{19}
}

func (x *UserKYC) GetCountryOfResidence() string {
	if x != nil {
		return x.CountryOfResidence
	}
	return ""
}

func (x *UserKYC) GetCountryOfCitizenship() string {
	if x != nil {
		return x.CountryOfCitizenship
	}
	return ""
}

func (x *UserKYC) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UserKYC) GetApplicantId() string {
	if x != nil {
		return x.ApplicantId
	}
	return ""
}

func (x *UserKYC) GetApplicationType() string {
	if x != nil {
		return x.ApplicationType
	}
	return ""
}

func (x *UserKYC) GetRejectComment() string {
	if x != nil {
		return x.RejectComment
	}
	return ""
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Email      string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Phone      string `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	FirstName  string `protobuf:"bytes,4,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName   string `protobuf:"bytes,5,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	MiddleName string `protobuf:"bytes,6,opt,name=middle_name,json=middleName,proto3" json:"middle_name,omitempty"`
	Gender     string `protobuf:"bytes,7,opt,name=gender,proto3" json:"gender,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{20}
}

func (x *User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *User) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *User) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *User) GetMiddleName() string {
	if x != nil {
		return x.MiddleName
	}
	return ""
}

func (x *User) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

type UpdateUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// string applicantId = 1;
	// string inspectionId = 2;
	// string applicationType = 3;
	// string correlationId = 4;
	// string levelName = 5;
	// bool sandboxMode = 6;
	// string externalUserId = 7;
	// string type = 8;
	// ReviewResult reviewResult = 9;
	// string reviewStatus = 10;
	// string createdAt = 11;
	// string clientId = 12;
	User             *User                 `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Kyc              *UserKYC              `protobuf:"bytes,2,opt,name=kyc,proto3" json:"kyc,omitempty"`
	ProofOfResidence *UserProofOfResidence `protobuf:"bytes,3,opt,name=proof_of_residence,json=proofOfResidence,proto3" json:"proof_of_residence,omitempty"`
	Passport         *UserPassport         `protobuf:"bytes,4,opt,name=passport,proto3" json:"passport,omitempty"`
}

func (x *UpdateUserRequest) Reset() {
	*x = UpdateUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRequest) ProtoMessage() {}

func (x *UpdateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserRequest) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{21}
}

func (x *UpdateUserRequest) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *UpdateUserRequest) GetKyc() *UserKYC {
	if x != nil {
		return x.Kyc
	}
	return nil
}

func (x *UpdateUserRequest) GetProofOfResidence() *UserProofOfResidence {
	if x != nil {
		return x.ProofOfResidence
	}
	return nil
}

func (x *UpdateUserRequest) GetPassport() *UserPassport {
	if x != nil {
		return x.Passport
	}
	return nil
}

type SendTwilioPhoneNumberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PhoneNumber string `protobuf:"bytes,2,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	Tag         string `protobuf:"bytes,3,opt,name=tag,proto3" json:"tag,omitempty"`
}

func (x *SendTwilioPhoneNumberRequest) Reset() {
	*x = SendTwilioPhoneNumberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendTwilioPhoneNumberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendTwilioPhoneNumberRequest) ProtoMessage() {}

func (x *SendTwilioPhoneNumberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendTwilioPhoneNumberRequest.ProtoReflect.Descriptor instead.
func (*SendTwilioPhoneNumberRequest) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{22}
}

func (x *SendTwilioPhoneNumberRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SendTwilioPhoneNumberRequest) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *SendTwilioPhoneNumberRequest) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

type SaveCountryFlagRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Flag string `protobuf:"bytes,2,opt,name=flag,proto3" json:"flag,omitempty"`
}

func (x *SaveCountryFlagRequest) Reset() {
	*x = SaveCountryFlagRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveCountryFlagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveCountryFlagRequest) ProtoMessage() {}

func (x *SaveCountryFlagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveCountryFlagRequest.ProtoReflect.Descriptor instead.
func (*SaveCountryFlagRequest) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{23}
}

func (x *SaveCountryFlagRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SaveCountryFlagRequest) GetFlag() string {
	if x != nil {
		return x.Flag
	}
	return ""
}

type GetCountryPhoneNumberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Search string `protobuf:"bytes,1,opt,name=search,proto3" json:"search,omitempty"`
}

func (x *GetCountryPhoneNumberRequest) Reset() {
	*x = GetCountryPhoneNumberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCountryPhoneNumberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCountryPhoneNumberRequest) ProtoMessage() {}

func (x *GetCountryPhoneNumberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCountryPhoneNumberRequest.ProtoReflect.Descriptor instead.
func (*GetCountryPhoneNumberRequest) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{24}
}

func (x *GetCountryPhoneNumberRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

type GetCountryPhoneNumberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GetPhoneNumber []*GetPhoneNumber `protobuf:"bytes,1,rep,name=get_phone_number,json=getPhoneNumber,proto3" json:"get_phone_number,omitempty"`
}

func (x *GetCountryPhoneNumberResponse) Reset() {
	*x = GetCountryPhoneNumberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCountryPhoneNumberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCountryPhoneNumberResponse) ProtoMessage() {}

func (x *GetCountryPhoneNumberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCountryPhoneNumberResponse.ProtoReflect.Descriptor instead.
func (*GetCountryPhoneNumberResponse) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{25}
}

func (x *GetCountryPhoneNumberResponse) GetGetPhoneNumber() []*GetPhoneNumber {
	if x != nil {
		return x.GetPhoneNumber
	}
	return nil
}

type GetPhoneNumber struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Nicename  string `protobuf:"bytes,2,opt,name=nicename,proto3" json:"nicename,omitempty"`
	Iso3      string `protobuf:"bytes,3,opt,name=iso3,proto3" json:"iso3,omitempty"`
	Numcode   int64  `protobuf:"varint,4,opt,name=numcode,proto3" json:"numcode,omitempty"`
	Phonecode int64  `protobuf:"varint,5,opt,name=phonecode,proto3" json:"phonecode,omitempty"`
	Flag      string `protobuf:"bytes,6,opt,name=flag,proto3" json:"flag,omitempty"`
}

func (x *GetPhoneNumber) Reset() {
	*x = GetPhoneNumber{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPhoneNumber) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPhoneNumber) ProtoMessage() {}

func (x *GetPhoneNumber) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPhoneNumber.ProtoReflect.Descriptor instead.
func (*GetPhoneNumber) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{26}
}

func (x *GetPhoneNumber) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetPhoneNumber) GetNicename() string {
	if x != nil {
		return x.Nicename
	}
	return ""
}

func (x *GetPhoneNumber) GetIso3() string {
	if x != nil {
		return x.Iso3
	}
	return ""
}

func (x *GetPhoneNumber) GetNumcode() int64 {
	if x != nil {
		return x.Numcode
	}
	return 0
}

func (x *GetPhoneNumber) GetPhonecode() int64 {
	if x != nil {
		return x.Phonecode
	}
	return 0
}

func (x *GetPhoneNumber) GetFlag() string {
	if x != nil {
		return x.Flag
	}
	return ""
}

type SendTwilioPhoneNumberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response string `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *SendTwilioPhoneNumberResponse) Reset() {
	*x = SendTwilioPhoneNumberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendTwilioPhoneNumberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendTwilioPhoneNumberResponse) ProtoMessage() {}

func (x *SendTwilioPhoneNumberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendTwilioPhoneNumberResponse.ProtoReflect.Descriptor instead.
func (*SendTwilioPhoneNumberResponse) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{27}
}

func (x *SendTwilioPhoneNumberResponse) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

type CheckVerifivationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PhoneNumber  string `protobuf:"bytes,2,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	Code         string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	TwilioStatus string `protobuf:"bytes,4,opt,name=twilio_status,json=twilioStatus,proto3" json:"twilio_status,omitempty"`
}

func (x *CheckVerifivationRequest) Reset() {
	*x = CheckVerifivationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckVerifivationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckVerifivationRequest) ProtoMessage() {}

func (x *CheckVerifivationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckVerifivationRequest.ProtoReflect.Descriptor instead.
func (*CheckVerifivationRequest) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{28}
}

func (x *CheckVerifivationRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CheckVerifivationRequest) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *CheckVerifivationRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CheckVerifivationRequest) GetTwilioStatus() string {
	if x != nil {
		return x.TwilioStatus
	}
	return ""
}

type CheckVerifivationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TwilioStatus string `protobuf:"bytes,2,opt,name=twilio_status,json=twilioStatus,proto3" json:"twilio_status,omitempty"`
	PhoneNumber  string `protobuf:"bytes,3,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
}

func (x *CheckVerifivationResponse) Reset() {
	*x = CheckVerifivationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckVerifivationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckVerifivationResponse) ProtoMessage() {}

func (x *CheckVerifivationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckVerifivationResponse.ProtoReflect.Descriptor instead.
func (*CheckVerifivationResponse) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{29}
}

func (x *CheckVerifivationResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CheckVerifivationResponse) GetTwilioStatus() string {
	if x != nil {
		return x.TwilioStatus
	}
	return ""
}

func (x *CheckVerifivationResponse) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

type SaveInvestorIdentityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicantId  string  `protobuf:"bytes,1,opt,name=applicantId,proto3" json:"applicantId,omitempty"`
	InspevtionId string  `protobuf:"bytes,2,opt,name=inspevtionId,proto3" json:"inspevtionId,omitempty"`
	DocId        []int64 `protobuf:"varint,3,rep,packed,name=docId,proto3" json:"docId,omitempty"`
	DocumentType string  `protobuf:"bytes,4,opt,name=documentType,proto3" json:"documentType,omitempty"`
}

func (x *SaveInvestorIdentityRequest) Reset() {
	*x = SaveInvestorIdentityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveInvestorIdentityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveInvestorIdentityRequest) ProtoMessage() {}

func (x *SaveInvestorIdentityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveInvestorIdentityRequest.ProtoReflect.Descriptor instead.
func (*SaveInvestorIdentityRequest) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{30}
}

func (x *SaveInvestorIdentityRequest) GetApplicantId() string {
	if x != nil {
		return x.ApplicantId
	}
	return ""
}

func (x *SaveInvestorIdentityRequest) GetInspevtionId() string {
	if x != nil {
		return x.InspevtionId
	}
	return ""
}

func (x *SaveInvestorIdentityRequest) GetDocId() []int64 {
	if x != nil {
		return x.DocId
	}
	return nil
}

func (x *SaveInvestorIdentityRequest) GetDocumentType() string {
	if x != nil {
		return x.DocumentType
	}
	return ""
}

type UpdateProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicantId string `protobuf:"bytes,1,opt,name=applicantId,proto3" json:"applicantId,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Username    string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	FullName    string `protobuf:"bytes,4,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	Language    string `protobuf:"bytes,5,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *UpdateProfileRequest) Reset() {
	*x = UpdateProfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProfileRequest) ProtoMessage() {}

func (x *UpdateProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProfileRequest.ProtoReflect.Descriptor instead.
func (*UpdateProfileRequest) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{31}
}

func (x *UpdateProfileRequest) GetApplicantId() string {
	if x != nil {
		return x.ApplicantId
	}
	return ""
}

func (x *UpdateProfileRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateProfileRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UpdateProfileRequest) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *UpdateProfileRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type GetAllInvestorTokensResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tokens []*InvestorToken `protobuf:"bytes,1,rep,name=tokens,proto3" json:"tokens,omitempty"`
}

func (x *GetAllInvestorTokensResponse) Reset() {
	*x = GetAllInvestorTokensResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllInvestorTokensResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllInvestorTokensResponse) ProtoMessage() {}

func (x *GetAllInvestorTokensResponse) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllInvestorTokensResponse.ProtoReflect.Descriptor instead.
func (*GetAllInvestorTokensResponse) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{32}
}

func (x *GetAllInvestorTokensResponse) GetTokens() []*InvestorToken {
	if x != nil {
		return x.Tokens
	}
	return nil
}

type InvestorToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvestorId string   `protobuf:"bytes,1,opt,name=investor_id,json=investorId,proto3" json:"investor_id,omitempty"`
	Tokens     []string `protobuf:"bytes,2,rep,name=tokens,proto3" json:"tokens,omitempty"`
}

func (x *InvestorToken) Reset() {
	*x = InvestorToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvestorToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvestorToken) ProtoMessage() {}

func (x *InvestorToken) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvestorToken.ProtoReflect.Descriptor instead.
func (*InvestorToken) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{33}
}

func (x *InvestorToken) GetInvestorId() string {
	if x != nil {
		return x.InvestorId
	}
	return ""
}

func (x *InvestorToken) GetTokens() []string {
	if x != nil {
		return x.Tokens
	}
	return nil
}

type GetApplicantInfoByExternalIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdDocType        string               `protobuf:"bytes,1,opt,name=id_doc_type,json=idDocType,proto3" json:"id_doc_type,omitempty"`
	Country          string               `protobuf:"bytes,2,opt,name=country,proto3" json:"country,omitempty"`
	FirstName        string               `protobuf:"bytes,3,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	FirstNameEn      string               `protobuf:"bytes,4,opt,name=first_name_en,json=firstNameEn,proto3" json:"first_name_en,omitempty"`
	LastName         string               `protobuf:"bytes,5,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	LastNameEn       string               `protobuf:"bytes,6,opt,name=last_name_en,json=lastNameEn,proto3" json:"last_name_en,omitempty"`
	IssuedDate       string               `protobuf:"bytes,7,opt,name=issued_date,json=issuedDate,proto3" json:"issued_date,omitempty"`
	ValidUntil       string               `protobuf:"bytes,8,opt,name=valid_until,json=validUntil,proto3" json:"valid_until,omitempty"`
	Number           string               `protobuf:"bytes,9,opt,name=number,proto3" json:"number,omitempty"`
	AdditionalNumber string               `protobuf:"bytes,10,opt,name=additional_number,json=additionalNumber,proto3" json:"additional_number,omitempty"`
	DateOfBirth      string               `protobuf:"bytes,11,opt,name=date_of_birth,json=dateOfBirth,proto3" json:"date_of_birth,omitempty"`
	PlaceOfBirthEn   string               `protobuf:"bytes,12,opt,name=place_of_birth_en,json=placeOfBirthEn,proto3" json:"place_of_birth_en,omitempty"`
	PersonalInfo     *PersonalInfo        `protobuf:"bytes,13,opt,name=personal_info,json=personalInfo,proto3" json:"personal_info,omitempty"`
	Address          *Address             `protobuf:"bytes,14,opt,name=address,proto3" json:"address,omitempty"`
	InvestorInfo     *GetInvestorResponse `protobuf:"bytes,15,opt,name=investor_info,json=investorInfo,proto3" json:"investor_info,omitempty"`
}

func (x *GetApplicantInfoByExternalIdResponse) Reset() {
	*x = GetApplicantInfoByExternalIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApplicantInfoByExternalIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApplicantInfoByExternalIdResponse) ProtoMessage() {}

func (x *GetApplicantInfoByExternalIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApplicantInfoByExternalIdResponse.ProtoReflect.Descriptor instead.
func (*GetApplicantInfoByExternalIdResponse) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{34}
}

func (x *GetApplicantInfoByExternalIdResponse) GetIdDocType() string {
	if x != nil {
		return x.IdDocType
	}
	return ""
}

func (x *GetApplicantInfoByExternalIdResponse) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *GetApplicantInfoByExternalIdResponse) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *GetApplicantInfoByExternalIdResponse) GetFirstNameEn() string {
	if x != nil {
		return x.FirstNameEn
	}
	return ""
}

func (x *GetApplicantInfoByExternalIdResponse) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *GetApplicantInfoByExternalIdResponse) GetLastNameEn() string {
	if x != nil {
		return x.LastNameEn
	}
	return ""
}

func (x *GetApplicantInfoByExternalIdResponse) GetIssuedDate() string {
	if x != nil {
		return x.IssuedDate
	}
	return ""
}

func (x *GetApplicantInfoByExternalIdResponse) GetValidUntil() string {
	if x != nil {
		return x.ValidUntil
	}
	return ""
}

func (x *GetApplicantInfoByExternalIdResponse) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *GetApplicantInfoByExternalIdResponse) GetAdditionalNumber() string {
	if x != nil {
		return x.AdditionalNumber
	}
	return ""
}

func (x *GetApplicantInfoByExternalIdResponse) GetDateOfBirth() string {
	if x != nil {
		return x.DateOfBirth
	}
	return ""
}

func (x *GetApplicantInfoByExternalIdResponse) GetPlaceOfBirthEn() string {
	if x != nil {
		return x.PlaceOfBirthEn
	}
	return ""
}

func (x *GetApplicantInfoByExternalIdResponse) GetPersonalInfo() *PersonalInfo {
	if x != nil {
		return x.PersonalInfo
	}
	return nil
}

func (x *GetApplicantInfoByExternalIdResponse) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *GetApplicantInfoByExternalIdResponse) GetInvestorInfo() *GetInvestorResponse {
	if x != nil {
		return x.InvestorInfo
	}
	return nil
}

type GetInvestorDocumentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvestorId string `protobuf:"bytes,1,opt,name=investor_id,json=investorId,proto3" json:"investor_id,omitempty"`
}

func (x *GetInvestorDocumentsRequest) Reset() {
	*x = GetInvestorDocumentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInvestorDocumentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInvestorDocumentsRequest) ProtoMessage() {}

func (x *GetInvestorDocumentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInvestorDocumentsRequest.ProtoReflect.Descriptor instead.
func (*GetInvestorDocumentsRequest) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{35}
}

func (x *GetInvestorDocumentsRequest) GetInvestorId() string {
	if x != nil {
		return x.InvestorId
	}
	return ""
}

type GetInvestorDocumentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Documents []*DocumentMetadata `protobuf:"bytes,1,rep,name=documents,proto3" json:"documents,omitempty"`
}

func (x *GetInvestorDocumentsResponse) Reset() {
	*x = GetInvestorDocumentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInvestorDocumentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInvestorDocumentsResponse) ProtoMessage() {}

func (x *GetInvestorDocumentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInvestorDocumentsResponse.ProtoReflect.Descriptor instead.
func (*GetInvestorDocumentsResponse) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{36}
}

func (x *GetInvestorDocumentsResponse) GetDocuments() []*DocumentMetadata {
	if x != nil {
		return x.Documents
	}
	return nil
}

type AccountID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
}

func (x *AccountID) Reset() {
	*x = AccountID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountID) ProtoMessage() {}

func (x *AccountID) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountID.ProtoReflect.Descriptor instead.
func (*AccountID) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{37}
}

func (x *AccountID) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

type ApplicantID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicantId string `protobuf:"bytes,1,opt,name=applicant_id,json=applicantId,proto3" json:"applicant_id,omitempty"`
	ValidUntil  string `protobuf:"bytes,2,opt,name=valid_until,json=validUntil,proto3" json:"valid_until,omitempty"`
	IssuetDate  string `protobuf:"bytes,3,opt,name=issuet_date,json=issuetDate,proto3" json:"issuet_date,omitempty"`
	Number      string `protobuf:"bytes,4,opt,name=number,proto3" json:"number,omitempty"`
}

func (x *ApplicantID) Reset() {
	*x = ApplicantID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicantID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicantID) ProtoMessage() {}

func (x *ApplicantID) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicantID.ProtoReflect.Descriptor instead.
func (*ApplicantID) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{38}
}

func (x *ApplicantID) GetApplicantId() string {
	if x != nil {
		return x.ApplicantId
	}
	return ""
}

func (x *ApplicantID) GetValidUntil() string {
	if x != nil {
		return x.ValidUntil
	}
	return ""
}

func (x *ApplicantID) GetIssuetDate() string {
	if x != nil {
		return x.IssuetDate
	}
	return ""
}

func (x *ApplicantID) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

type GetInvestorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvestorId             string        `protobuf:"bytes,1,opt,name=investor_id,json=investorId,proto3" json:"investor_id,omitempty"`
	Email                  string        `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Phone                  string        `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	Stage                  string        `protobuf:"bytes,4,opt,name=stage,proto3" json:"stage,omitempty"`
	PersonalInfo           *PersonalInfo `protobuf:"bytes,5,opt,name=personal_info,json=personalInfo,proto3" json:"personal_info,omitempty"`
	Address                *Address      `protobuf:"bytes,6,opt,name=address,proto3" json:"address,omitempty"`
	ApplicantId            string        `protobuf:"bytes,7,opt,name=applicant_id,json=applicantId,proto3" json:"applicant_id,omitempty"`
	FinancialAccountId     string        `protobuf:"bytes,8,opt,name=financial_account_id,json=financialAccountId,proto3" json:"financial_account_id,omitempty"`
	Status                 string        `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`
	TradeEnabled           bool          `protobuf:"varint,10,opt,name=trade_enabled,json=tradeEnabled,proto3" json:"trade_enabled,omitempty"`
	DepositWithdrawEnabled bool          `protobuf:"varint,11,opt,name=deposit_withdraw_enabled,json=depositWithdrawEnabled,proto3" json:"deposit_withdraw_enabled,omitempty"`
	ManualKycCompleted     bool          `protobuf:"varint,14,opt,name=manual_kyc_completed,json=manualKycCompleted,proto3" json:"manual_kyc_completed,omitempty"`
	AccountStatus          string        `protobuf:"bytes,15,opt,name=account_status,json=accountStatus,proto3" json:"account_status,omitempty"`
	Deleted                bool          `protobuf:"varint,16,opt,name=deleted,proto3" json:"deleted,omitempty"`
	Invisible              bool          `protobuf:"varint,17,opt,name=invisible,proto3" json:"invisible,omitempty"`
	Id                     int64         `protobuf:"varint,18,opt,name=id,proto3" json:"id,omitempty"`
	BlockToPost            bool          `protobuf:"varint,19,opt,name=block_to_post,json=blockToPost,proto3" json:"block_to_post,omitempty"`
}

func (x *GetInvestorResponse) Reset() {
	*x = GetInvestorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInvestorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInvestorResponse) ProtoMessage() {}

func (x *GetInvestorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInvestorResponse.ProtoReflect.Descriptor instead.
func (*GetInvestorResponse) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{39}
}

func (x *GetInvestorResponse) GetInvestorId() string {
	if x != nil {
		return x.InvestorId
	}
	return ""
}

func (x *GetInvestorResponse) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GetInvestorResponse) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *GetInvestorResponse) GetStage() string {
	if x != nil {
		return x.Stage
	}
	return ""
}

func (x *GetInvestorResponse) GetPersonalInfo() *PersonalInfo {
	if x != nil {
		return x.PersonalInfo
	}
	return nil
}

func (x *GetInvestorResponse) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *GetInvestorResponse) GetApplicantId() string {
	if x != nil {
		return x.ApplicantId
	}
	return ""
}

func (x *GetInvestorResponse) GetFinancialAccountId() string {
	if x != nil {
		return x.FinancialAccountId
	}
	return ""
}

func (x *GetInvestorResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetInvestorResponse) GetTradeEnabled() bool {
	if x != nil {
		return x.TradeEnabled
	}
	return false
}

func (x *GetInvestorResponse) GetDepositWithdrawEnabled() bool {
	if x != nil {
		return x.DepositWithdrawEnabled
	}
	return false
}

func (x *GetInvestorResponse) GetManualKycCompleted() bool {
	if x != nil {
		return x.ManualKycCompleted
	}
	return false
}

func (x *GetInvestorResponse) GetAccountStatus() string {
	if x != nil {
		return x.AccountStatus
	}
	return ""
}

func (x *GetInvestorResponse) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

func (x *GetInvestorResponse) GetInvisible() bool {
	if x != nil {
		return x.Invisible
	}
	return false
}

func (x *GetInvestorResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetInvestorResponse) GetBlockToPost() bool {
	if x != nil {
		return x.BlockToPost
	}
	return false
}

type CreateInvestorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvestorId string `protobuf:"bytes,1,opt,name=investor_id,json=investorId,proto3" json:"investor_id,omitempty"`
}

func (x *CreateInvestorResponse) Reset() {
	*x = CreateInvestorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateInvestorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInvestorResponse) ProtoMessage() {}

func (x *CreateInvestorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInvestorResponse.ProtoReflect.Descriptor instead.
func (*CreateInvestorResponse) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{40}
}

func (x *CreateInvestorResponse) GetInvestorId() string {
	if x != nil {
		return x.InvestorId
	}
	return ""
}

type ReviewResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReviewAnswer string `protobuf:"bytes,1,opt,name=reviewAnswer,proto3" json:"reviewAnswer,omitempty"`
}

func (x *ReviewResult) Reset() {
	*x = ReviewResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReviewResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReviewResult) ProtoMessage() {}

func (x *ReviewResult) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReviewResult.ProtoReflect.Descriptor instead.
func (*ReviewResult) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{41}
}

func (x *ReviewResult) GetReviewAnswer() string {
	if x != nil {
		return x.ReviewAnswer
	}
	return ""
}

type GetKycDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvestorId string `protobuf:"bytes,1,opt,name=investor_id,json=investorId,proto3" json:"investor_id,omitempty"`
}

func (x *GetKycDataRequest) Reset() {
	*x = GetKycDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKycDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKycDataRequest) ProtoMessage() {}

func (x *GetKycDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKycDataRequest.ProtoReflect.Descriptor instead.
func (*GetKycDataRequest) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{42}
}

func (x *GetKycDataRequest) GetInvestorId() string {
	if x != nil {
		return x.InvestorId
	}
	return ""
}

type GetKycDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicantId      string `protobuf:"bytes,1,opt,name=applicant_id,json=applicantId,proto3" json:"applicant_id,omitempty"`
	CountryResidence string `protobuf:"bytes,2,opt,name=country_residence,json=countryResidence,proto3" json:"country_residence,omitempty"`
	Status           string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Step             string `protobuf:"bytes,4,opt,name=step,proto3" json:"step,omitempty"`
}

func (x *GetKycDataResponse) Reset() {
	*x = GetKycDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKycDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKycDataResponse) ProtoMessage() {}

func (x *GetKycDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKycDataResponse.ProtoReflect.Descriptor instead.
func (*GetKycDataResponse) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{43}
}

func (x *GetKycDataResponse) GetApplicantId() string {
	if x != nil {
		return x.ApplicantId
	}
	return ""
}

func (x *GetKycDataResponse) GetCountryResidence() string {
	if x != nil {
		return x.CountryResidence
	}
	return ""
}

func (x *GetKycDataResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetKycDataResponse) GetStep() string {
	if x != nil {
		return x.Step
	}
	return ""
}

type SaveKycDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvestorId   string        `protobuf:"bytes,1,opt,name=investor_id,json=investorId,proto3" json:"investor_id,omitempty"`
	Email        string        `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Phone        string        `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	FcmToken     string        `protobuf:"bytes,4,opt,name=fcm_token,json=fcmToken,proto3" json:"fcm_token,omitempty"`
	PersonalInfo *PersonalInfo `protobuf:"bytes,5,opt,name=personal_info,json=personalInfo,proto3" json:"personal_info,omitempty"`
	Address      *Address      `protobuf:"bytes,6,opt,name=address,proto3" json:"address,omitempty"`
	ApplicantId  string        `protobuf:"bytes,7,opt,name=applicant_id,json=applicantId,proto3" json:"applicant_id,omitempty"`
}

func (x *SaveKycDataRequest) Reset() {
	*x = SaveKycDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveKycDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveKycDataRequest) ProtoMessage() {}

func (x *SaveKycDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveKycDataRequest.ProtoReflect.Descriptor instead.
func (*SaveKycDataRequest) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{44}
}

func (x *SaveKycDataRequest) GetInvestorId() string {
	if x != nil {
		return x.InvestorId
	}
	return ""
}

func (x *SaveKycDataRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SaveKycDataRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *SaveKycDataRequest) GetFcmToken() string {
	if x != nil {
		return x.FcmToken
	}
	return ""
}

func (x *SaveKycDataRequest) GetPersonalInfo() *PersonalInfo {
	if x != nil {
		return x.PersonalInfo
	}
	return nil
}

func (x *SaveKycDataRequest) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *SaveKycDataRequest) GetApplicantId() string {
	if x != nil {
		return x.ApplicantId
	}
	return ""
}

type PersonalInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstName      string `protobuf:"bytes,1,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName       string `protobuf:"bytes,2,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	MiddleName     string `protobuf:"bytes,3,opt,name=middle_name,json=middleName,proto3" json:"middle_name,omitempty"`
	Gender         string `protobuf:"bytes,4,opt,name=gender,proto3" json:"gender,omitempty"`
	DateOfBirth    string `protobuf:"bytes,5,opt,name=date_of_birth,json=dateOfBirth,proto3" json:"date_of_birth,omitempty"`
	PlaceOfBirth   string `protobuf:"bytes,6,opt,name=place_of_birth,json=placeOfBirth,proto3" json:"place_of_birth,omitempty"`
	Nationality    string `protobuf:"bytes,7,opt,name=nationality,proto3" json:"nationality,omitempty"`
	Description    string `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	MinioName      string `protobuf:"bytes,9,opt,name=minio_name,json=minioName,proto3" json:"minio_name,omitempty"`
	Username       string `protobuf:"bytes,10,opt,name=username,proto3" json:"username,omitempty"`
	FullName       string `protobuf:"bytes,11,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	CountryOfBirth string `protobuf:"bytes,12,opt,name=country_of_birth,json=countryOfBirth,proto3" json:"country_of_birth,omitempty"`
	DateOfIssue    string `protobuf:"bytes,13,opt,name=date_of_issue,json=dateOfIssue,proto3" json:"date_of_issue,omitempty"`
	DateOfExpiry   string `protobuf:"bytes,14,opt,name=date_of_expiry,json=dateOfExpiry,proto3" json:"date_of_expiry,omitempty"`
	IssueBy        string `protobuf:"bytes,15,opt,name=issue_by,json=issueBy,proto3" json:"issue_by,omitempty"`
	PassportNumber string `protobuf:"bytes,16,opt,name=passport_number,json=passportNumber,proto3" json:"passport_number,omitempty"`
}

func (x *PersonalInfo) Reset() {
	*x = PersonalInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PersonalInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PersonalInfo) ProtoMessage() {}

func (x *PersonalInfo) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PersonalInfo.ProtoReflect.Descriptor instead.
func (*PersonalInfo) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{45}
}

func (x *PersonalInfo) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *PersonalInfo) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *PersonalInfo) GetMiddleName() string {
	if x != nil {
		return x.MiddleName
	}
	return ""
}

func (x *PersonalInfo) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *PersonalInfo) GetDateOfBirth() string {
	if x != nil {
		return x.DateOfBirth
	}
	return ""
}

func (x *PersonalInfo) GetPlaceOfBirth() string {
	if x != nil {
		return x.PlaceOfBirth
	}
	return ""
}

func (x *PersonalInfo) GetNationality() string {
	if x != nil {
		return x.Nationality
	}
	return ""
}

func (x *PersonalInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PersonalInfo) GetMinioName() string {
	if x != nil {
		return x.MinioName
	}
	return ""
}

func (x *PersonalInfo) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *PersonalInfo) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *PersonalInfo) GetCountryOfBirth() string {
	if x != nil {
		return x.CountryOfBirth
	}
	return ""
}

func (x *PersonalInfo) GetDateOfIssue() string {
	if x != nil {
		return x.DateOfIssue
	}
	return ""
}

func (x *PersonalInfo) GetDateOfExpiry() string {
	if x != nil {
		return x.DateOfExpiry
	}
	return ""
}

func (x *PersonalInfo) GetIssueBy() string {
	if x != nil {
		return x.IssueBy
	}
	return ""
}

func (x *PersonalInfo) GetPassportNumber() string {
	if x != nil {
		return x.PassportNumber
	}
	return ""
}

type Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CountryOfCitizenship string `protobuf:"bytes,1,opt,name=country_of_citizenship,json=countryOfCitizenship,proto3" json:"country_of_citizenship,omitempty"`
	CountryOfResidence   string `protobuf:"bytes,2,opt,name=country_of_residence,json=countryOfResidence,proto3" json:"country_of_residence,omitempty"`
	Postcode             string `protobuf:"bytes,4,opt,name=postcode,proto3" json:"postcode,omitempty"`
	Address              string `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *Address) Reset() {
	*x = Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Address) ProtoMessage() {}

func (x *Address) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Address.ProtoReflect.Descriptor instead.
func (*Address) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{46}
}

func (x *Address) GetCountryOfCitizenship() string {
	if x != nil {
		return x.CountryOfCitizenship
	}
	return ""
}

func (x *Address) GetCountryOfResidence() string {
	if x != nil {
		return x.CountryOfResidence
	}
	return ""
}

func (x *Address) GetPostcode() string {
	if x != nil {
		return x.Postcode
	}
	return ""
}

func (x *Address) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type IsInstrumentFavouriteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsFavourite bool `protobuf:"varint,1,opt,name=is_favourite,json=isFavourite,proto3" json:"is_favourite,omitempty"`
}

func (x *IsInstrumentFavouriteResponse) Reset() {
	*x = IsInstrumentFavouriteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsInstrumentFavouriteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsInstrumentFavouriteResponse) ProtoMessage() {}

func (x *IsInstrumentFavouriteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsInstrumentFavouriteResponse.ProtoReflect.Descriptor instead.
func (*IsInstrumentFavouriteResponse) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{47}
}

func (x *IsInstrumentFavouriteResponse) GetIsFavourite() bool {
	if x != nil {
		return x.IsFavourite
	}
	return false
}

type FavouriteInstrument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	InvestorId       string `protobuf:"bytes,2,opt,name=investor_id,json=investorId,proto3" json:"investor_id,omitempty"`
	InstrumentId     string `protobuf:"bytes,3,opt,name=instrument_id,json=instrumentId,proto3" json:"instrument_id,omitempty"`
	InstrumentTicker string `protobuf:"bytes,4,opt,name=instrument_ticker,json=instrumentTicker,proto3" json:"instrument_ticker,omitempty"`
	Name             string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Icon             string `protobuf:"bytes,6,opt,name=icon,proto3" json:"icon,omitempty"`
}

func (x *FavouriteInstrument) Reset() {
	*x = FavouriteInstrument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FavouriteInstrument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavouriteInstrument) ProtoMessage() {}

func (x *FavouriteInstrument) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavouriteInstrument.ProtoReflect.Descriptor instead.
func (*FavouriteInstrument) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{48}
}

func (x *FavouriteInstrument) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FavouriteInstrument) GetInvestorId() string {
	if x != nil {
		return x.InvestorId
	}
	return ""
}

func (x *FavouriteInstrument) GetInstrumentId() string {
	if x != nil {
		return x.InstrumentId
	}
	return ""
}

func (x *FavouriteInstrument) GetInstrumentTicker() string {
	if x != nil {
		return x.InstrumentTicker
	}
	return ""
}

func (x *FavouriteInstrument) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FavouriteInstrument) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

type FavouriteInstrumentList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instruments []*FavouriteInstrument `protobuf:"bytes,1,rep,name=instruments,proto3" json:"instruments,omitempty"`
}

func (x *FavouriteInstrumentList) Reset() {
	*x = FavouriteInstrumentList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FavouriteInstrumentList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavouriteInstrumentList) ProtoMessage() {}

func (x *FavouriteInstrumentList) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavouriteInstrumentList.ProtoReflect.Descriptor instead.
func (*FavouriteInstrumentList) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{49}
}

func (x *FavouriteInstrumentList) GetInstruments() []*FavouriteInstrument {
	if x != nil {
		return x.Instruments
	}
	return nil
}

type AddFavouriteInstrumentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvestorId       string `protobuf:"bytes,1,opt,name=investor_id,json=investorId,proto3" json:"investor_id,omitempty"`
	InstrumentId     string `protobuf:"bytes,2,opt,name=instrument_id,json=instrumentId,proto3" json:"instrument_id,omitempty"`
	InstrumentTicker string `protobuf:"bytes,3,opt,name=instrument_ticker,json=instrumentTicker,proto3" json:"instrument_ticker,omitempty"`
}

func (x *AddFavouriteInstrumentRequest) Reset() {
	*x = AddFavouriteInstrumentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFavouriteInstrumentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFavouriteInstrumentRequest) ProtoMessage() {}

func (x *AddFavouriteInstrumentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFavouriteInstrumentRequest.ProtoReflect.Descriptor instead.
func (*AddFavouriteInstrumentRequest) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{50}
}

func (x *AddFavouriteInstrumentRequest) GetInvestorId() string {
	if x != nil {
		return x.InvestorId
	}
	return ""
}

func (x *AddFavouriteInstrumentRequest) GetInstrumentId() string {
	if x != nil {
		return x.InstrumentId
	}
	return ""
}

func (x *AddFavouriteInstrumentRequest) GetInstrumentTicker() string {
	if x != nil {
		return x.InstrumentTicker
	}
	return ""
}

type InvestorId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvestorId string `protobuf:"bytes,1,opt,name=investor_id,json=investorId,proto3" json:"investor_id,omitempty"`
}

func (x *InvestorId) Reset() {
	*x = InvestorId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvestorId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvestorId) ProtoMessage() {}

func (x *InvestorId) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvestorId.ProtoReflect.Descriptor instead.
func (*InvestorId) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{51}
}

func (x *InvestorId) GetInvestorId() string {
	if x != nil {
		return x.InvestorId
	}
	return ""
}

type InvestorLoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email   string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *InvestorLoginRequest) Reset() {
	*x = InvestorLoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvestorLoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvestorLoginRequest) ProtoMessage() {}

func (x *InvestorLoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvestorLoginRequest.ProtoReflect.Descriptor instead.
func (*InvestorLoginRequest) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{52}
}

func (x *InvestorLoginRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *InvestorLoginRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type InvestorLoginWebRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email   string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *InvestorLoginWebRequest) Reset() {
	*x = InvestorLoginWebRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvestorLoginWebRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvestorLoginWebRequest) ProtoMessage() {}

func (x *InvestorLoginWebRequest) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvestorLoginWebRequest.ProtoReflect.Descriptor instead.
func (*InvestorLoginWebRequest) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{53}
}

func (x *InvestorLoginWebRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *InvestorLoginWebRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type TwoFactorAuthenticateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TwoFa bool   `protobuf:"varint,2,opt,name=two_fa,json=twoFa,proto3" json:"two_fa,omitempty"`
}

func (x *TwoFactorAuthenticateRequest) Reset() {
	*x = TwoFactorAuthenticateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TwoFactorAuthenticateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TwoFactorAuthenticateRequest) ProtoMessage() {}

func (x *TwoFactorAuthenticateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TwoFactorAuthenticateRequest.ProtoReflect.Descriptor instead.
func (*TwoFactorAuthenticateRequest) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{54}
}

func (x *TwoFactorAuthenticateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TwoFactorAuthenticateRequest) GetTwoFa() bool {
	if x != nil {
		return x.TwoFa
	}
	return false
}

type GetTwoFactorAuthenticateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetTwoFactorAuthenticateRequest) Reset() {
	*x = GetTwoFactorAuthenticateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTwoFactorAuthenticateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTwoFactorAuthenticateRequest) ProtoMessage() {}

func (x *GetTwoFactorAuthenticateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTwoFactorAuthenticateRequest.ProtoReflect.Descriptor instead.
func (*GetTwoFactorAuthenticateRequest) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{55}
}

func (x *GetTwoFactorAuthenticateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeactivateAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeactivateAccountRequest) Reset() {
	*x = DeactivateAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeactivateAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeactivateAccountRequest) ProtoMessage() {}

func (x *DeactivateAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeactivateAccountRequest.ProtoReflect.Descriptor instead.
func (*DeactivateAccountRequest) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{56}
}

func (x *DeactivateAccountRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CreateAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvestorId string `protobuf:"bytes,1,opt,name=investor_id,json=investorId,proto3" json:"investor_id,omitempty"`
	IbanId     string `protobuf:"bytes,2,opt,name=iban_id,json=ibanId,proto3" json:"iban_id,omitempty"`
}

func (x *CreateAccountRequest) Reset() {
	*x = CreateAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccountRequest) ProtoMessage() {}

func (x *CreateAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccountRequest.ProtoReflect.Descriptor instead.
func (*CreateAccountRequest) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{57}
}

func (x *CreateAccountRequest) GetInvestorId() string {
	if x != nil {
		return x.InvestorId
	}
	return ""
}

func (x *CreateAccountRequest) GetIbanId() string {
	if x != nil {
		return x.IbanId
	}
	return ""
}

type InvestorLoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ExpiresAfter       int32  `protobuf:"varint,2,opt,name=expires_after,json=expiresAfter,proto3" json:"expires_after,omitempty"`
	CreatedAt          string `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	ManualKycCompleted bool   `protobuf:"varint,4,opt,name=manual_kyc_completed,json=manualKycCompleted,proto3" json:"manual_kyc_completed,omitempty"`
}

func (x *InvestorLoginResponse) Reset() {
	*x = InvestorLoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvestorLoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvestorLoginResponse) ProtoMessage() {}

func (x *InvestorLoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvestorLoginResponse.ProtoReflect.Descriptor instead.
func (*InvestorLoginResponse) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{58}
}

func (x *InvestorLoginResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *InvestorLoginResponse) GetExpiresAfter() int32 {
	if x != nil {
		return x.ExpiresAfter
	}
	return 0
}

func (x *InvestorLoginResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *InvestorLoginResponse) GetManualKycCompleted() bool {
	if x != nil {
		return x.ManualKycCompleted
	}
	return false
}

type InvestorLoginWebResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ExpiresAfter int32  `protobuf:"varint,2,opt,name=expires_after,json=expiresAfter,proto3" json:"expires_after,omitempty"`
	CreatedAt    string `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *InvestorLoginWebResponse) Reset() {
	*x = InvestorLoginWebResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvestorLoginWebResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvestorLoginWebResponse) ProtoMessage() {}

func (x *InvestorLoginWebResponse) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvestorLoginWebResponse.ProtoReflect.Descriptor instead.
func (*InvestorLoginWebResponse) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{59}
}

func (x *InvestorLoginWebResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *InvestorLoginWebResponse) GetExpiresAfter() int32 {
	if x != nil {
		return x.ExpiresAfter
	}
	return 0
}

func (x *InvestorLoginWebResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type TwoFactorAuthenticateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TwoFa bool   `protobuf:"varint,2,opt,name=two_fa,json=twoFa,proto3" json:"two_fa,omitempty"`
}

func (x *TwoFactorAuthenticateResponse) Reset() {
	*x = TwoFactorAuthenticateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TwoFactorAuthenticateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TwoFactorAuthenticateResponse) ProtoMessage() {}

func (x *TwoFactorAuthenticateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TwoFactorAuthenticateResponse.ProtoReflect.Descriptor instead.
func (*TwoFactorAuthenticateResponse) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{60}
}

func (x *TwoFactorAuthenticateResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TwoFactorAuthenticateResponse) GetTwoFa() bool {
	if x != nil {
		return x.TwoFa
	}
	return false
}

type GetTwoFactorAuthenticateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TwoFa       bool   `protobuf:"varint,2,opt,name=two_fa,json=twoFa,proto3" json:"two_fa,omitempty"`
	PhoneNumber string `protobuf:"bytes,3,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
}

func (x *GetTwoFactorAuthenticateResponse) Reset() {
	*x = GetTwoFactorAuthenticateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTwoFactorAuthenticateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTwoFactorAuthenticateResponse) ProtoMessage() {}

func (x *GetTwoFactorAuthenticateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTwoFactorAuthenticateResponse.ProtoReflect.Descriptor instead.
func (*GetTwoFactorAuthenticateResponse) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{61}
}

func (x *GetTwoFactorAuthenticateResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetTwoFactorAuthenticateResponse) GetTwoFa() bool {
	if x != nil {
		return x.TwoFa
	}
	return false
}

func (x *GetTwoFactorAuthenticateResponse) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

type InvestorConfirmEmailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email     string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Otp       string `protobuf:"bytes,2,opt,name=otp,proto3" json:"otp,omitempty"`
	Id        string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	FcmToken  string `protobuf:"bytes,4,opt,name=fcm_token,json=fcmToken,proto3" json:"fcm_token,omitempty"`
	DeviceId  string `protobuf:"bytes,5,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Platform  string `protobuf:"bytes,6,opt,name=platform,proto3" json:"platform,omitempty"`
	FirstName string `protobuf:"bytes,7,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName  string `protobuf:"bytes,8,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
}

func (x *InvestorConfirmEmailRequest) Reset() {
	*x = InvestorConfirmEmailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvestorConfirmEmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvestorConfirmEmailRequest) ProtoMessage() {}

func (x *InvestorConfirmEmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvestorConfirmEmailRequest.ProtoReflect.Descriptor instead.
func (*InvestorConfirmEmailRequest) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{62}
}

func (x *InvestorConfirmEmailRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *InvestorConfirmEmailRequest) GetOtp() string {
	if x != nil {
		return x.Otp
	}
	return ""
}

func (x *InvestorConfirmEmailRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *InvestorConfirmEmailRequest) GetFcmToken() string {
	if x != nil {
		return x.FcmToken
	}
	return ""
}

func (x *InvestorConfirmEmailRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *InvestorConfirmEmailRequest) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *InvestorConfirmEmailRequest) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *InvestorConfirmEmailRequest) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

type InvestorConfirmEmailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId             string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	KycStatus          string `protobuf:"bytes,2,opt,name=kyc_status,json=kycStatus,proto3" json:"kyc_status,omitempty"`
	ManualKycCompleted bool   `protobuf:"varint,3,opt,name=manual_kyc_completed,json=manualKycCompleted,proto3" json:"manual_kyc_completed,omitempty"`
}

func (x *InvestorConfirmEmailResponse) Reset() {
	*x = InvestorConfirmEmailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvestorConfirmEmailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvestorConfirmEmailResponse) ProtoMessage() {}

func (x *InvestorConfirmEmailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvestorConfirmEmailResponse.ProtoReflect.Descriptor instead.
func (*InvestorConfirmEmailResponse) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{63}
}

func (x *InvestorConfirmEmailResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *InvestorConfirmEmailResponse) GetKycStatus() string {
	if x != nil {
		return x.KycStatus
	}
	return ""
}

func (x *InvestorConfirmEmailResponse) GetManualKycCompleted() bool {
	if x != nil {
		return x.ManualKycCompleted
	}
	return false
}

type InvestorConfirmEmailWebRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email     string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Otp       string `protobuf:"bytes,2,opt,name=otp,proto3" json:"otp,omitempty"`
	Id        string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	FirstName string `protobuf:"bytes,4,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName  string `protobuf:"bytes,5,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
}

func (x *InvestorConfirmEmailWebRequest) Reset() {
	*x = InvestorConfirmEmailWebRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvestorConfirmEmailWebRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvestorConfirmEmailWebRequest) ProtoMessage() {}

func (x *InvestorConfirmEmailWebRequest) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvestorConfirmEmailWebRequest.ProtoReflect.Descriptor instead.
func (*InvestorConfirmEmailWebRequest) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{64}
}

func (x *InvestorConfirmEmailWebRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *InvestorConfirmEmailWebRequest) GetOtp() string {
	if x != nil {
		return x.Otp
	}
	return ""
}

func (x *InvestorConfirmEmailWebRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *InvestorConfirmEmailWebRequest) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *InvestorConfirmEmailWebRequest) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

type InvestorConfirmEmailWebResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *InvestorConfirmEmailWebResponse) Reset() {
	*x = InvestorConfirmEmailWebResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvestorConfirmEmailWebResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvestorConfirmEmailWebResponse) ProtoMessage() {}

func (x *InvestorConfirmEmailWebResponse) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvestorConfirmEmailWebResponse.ProtoReflect.Descriptor instead.
func (*InvestorConfirmEmailWebResponse) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{65}
}

func (x *InvestorConfirmEmailWebResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type InvestorPersonalDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InvestorPersonalDataRequest) Reset() {
	*x = InvestorPersonalDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvestorPersonalDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvestorPersonalDataRequest) ProtoMessage() {}

func (x *InvestorPersonalDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvestorPersonalDataRequest.ProtoReflect.Descriptor instead.
func (*InvestorPersonalDataRequest) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{66}
}

type InvestorPersonalDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *InvestorPersonalDataResponse) Reset() {
	*x = InvestorPersonalDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvestorPersonalDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvestorPersonalDataResponse) ProtoMessage() {}

func (x *InvestorPersonalDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvestorPersonalDataResponse.ProtoReflect.Descriptor instead.
func (*InvestorPersonalDataResponse) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{67}
}

func (x *InvestorPersonalDataResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetInvestorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetInvestorRequest) Reset() {
	*x = GetInvestorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInvestorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInvestorRequest) ProtoMessage() {}

func (x *GetInvestorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInvestorRequest.ProtoReflect.Descriptor instead.
func (*GetInvestorRequest) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{68}
}

func (x *GetInvestorRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type FixOrderParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId      string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Instrument     string `protobuf:"bytes,2,opt,name=instrument,proto3" json:"instrument,omitempty"`
	SymbolId       string `protobuf:"bytes,3,opt,name=symbol_id,json=symbolId,proto3" json:"symbol_id,omitempty"`
	Side           string `protobuf:"bytes,4,opt,name=side,proto3" json:"side,omitempty"`
	Quantity       string `protobuf:"bytes,5,opt,name=quantity,proto3" json:"quantity,omitempty"`
	OrderType      string `protobuf:"bytes,6,opt,name=order_type,json=orderType,proto3" json:"order_type,omitempty"`
	StopPrice      string `protobuf:"bytes,7,opt,name=stop_price,json=stopPrice,proto3" json:"stop_price,omitempty"`
	LimitPrice     string `protobuf:"bytes,8,opt,name=limit_price,json=limitPrice,proto3" json:"limit_price,omitempty"`
	PartQuantity   string `protobuf:"bytes,9,opt,name=part_quantity,json=partQuantity,proto3" json:"part_quantity,omitempty"`
	PlaceInterval  string `protobuf:"bytes,10,opt,name=place_interval,json=placeInterval,proto3" json:"place_interval,omitempty"`
	PriceDistance  string `protobuf:"bytes,11,opt,name=price_distance,json=priceDistance,proto3" json:"price_distance,omitempty"`
	Duration       string `protobuf:"bytes,12,opt,name=duration,proto3" json:"duration,omitempty"`
	GttExpiration  string `protobuf:"bytes,13,opt,name=gtt_expiration,json=gttExpiration,proto3" json:"gtt_expiration,omitempty"`
	ClientTag      string `protobuf:"bytes,14,opt,name=client_tag,json=clientTag,proto3" json:"client_tag,omitempty"`
	TakeProfit     string `protobuf:"bytes,15,opt,name=take_profit,json=takeProfit,proto3" json:"take_profit,omitempty"`
	StopLoss       string `protobuf:"bytes,16,opt,name=stop_loss,json=stopLoss,proto3" json:"stop_loss,omitempty"`
	OcoGroup       string `protobuf:"bytes,17,opt,name=oco_group,json=ocoGroup,proto3" json:"oco_group,omitempty"`
	IfDoneParentId string `protobuf:"bytes,18,opt,name=if_done_parent_id,json=ifDoneParentId,proto3" json:"if_done_parent_id,omitempty"`
	UserId         string `protobuf:"bytes,19,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *FixOrderParameters) Reset() {
	*x = FixOrderParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FixOrderParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FixOrderParameters) ProtoMessage() {}

func (x *FixOrderParameters) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FixOrderParameters.ProtoReflect.Descriptor instead.
func (*FixOrderParameters) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{69}
}

func (x *FixOrderParameters) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *FixOrderParameters) GetInstrument() string {
	if x != nil {
		return x.Instrument
	}
	return ""
}

func (x *FixOrderParameters) GetSymbolId() string {
	if x != nil {
		return x.SymbolId
	}
	return ""
}

func (x *FixOrderParameters) GetSide() string {
	if x != nil {
		return x.Side
	}
	return ""
}

func (x *FixOrderParameters) GetQuantity() string {
	if x != nil {
		return x.Quantity
	}
	return ""
}

func (x *FixOrderParameters) GetOrderType() string {
	if x != nil {
		return x.OrderType
	}
	return ""
}

func (x *FixOrderParameters) GetStopPrice() string {
	if x != nil {
		return x.StopPrice
	}
	return ""
}

func (x *FixOrderParameters) GetLimitPrice() string {
	if x != nil {
		return x.LimitPrice
	}
	return ""
}

func (x *FixOrderParameters) GetPartQuantity() string {
	if x != nil {
		return x.PartQuantity
	}
	return ""
}

func (x *FixOrderParameters) GetPlaceInterval() string {
	if x != nil {
		return x.PlaceInterval
	}
	return ""
}

func (x *FixOrderParameters) GetPriceDistance() string {
	if x != nil {
		return x.PriceDistance
	}
	return ""
}

func (x *FixOrderParameters) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *FixOrderParameters) GetGttExpiration() string {
	if x != nil {
		return x.GttExpiration
	}
	return ""
}

func (x *FixOrderParameters) GetClientTag() string {
	if x != nil {
		return x.ClientTag
	}
	return ""
}

func (x *FixOrderParameters) GetTakeProfit() string {
	if x != nil {
		return x.TakeProfit
	}
	return ""
}

func (x *FixOrderParameters) GetStopLoss() string {
	if x != nil {
		return x.StopLoss
	}
	return ""
}

func (x *FixOrderParameters) GetOcoGroup() string {
	if x != nil {
		return x.OcoGroup
	}
	return ""
}

func (x *FixOrderParameters) GetIfDoneParentId() string {
	if x != nil {
		return x.IfDoneParentId
	}
	return ""
}

func (x *FixOrderParameters) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type FixOrderFills struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time      string `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	Timestamp string `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Quantity  string `protobuf:"bytes,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Price     string `protobuf:"bytes,4,opt,name=price,proto3" json:"price,omitempty"`
	Position  string `protobuf:"bytes,5,opt,name=position,proto3" json:"position,omitempty"`
}

func (x *FixOrderFills) Reset() {
	*x = FixOrderFills{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FixOrderFills) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FixOrderFills) ProtoMessage() {}

func (x *FixOrderFills) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FixOrderFills.ProtoReflect.Descriptor instead.
func (*FixOrderFills) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{70}
}

func (x *FixOrderFills) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *FixOrderFills) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *FixOrderFills) GetQuantity() string {
	if x != nil {
		return x.Quantity
	}
	return ""
}

func (x *FixOrderFills) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *FixOrderFills) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

type FixOrderState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status     string           `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	LastUpdate string           `protobuf:"bytes,2,opt,name=last_update,json=lastUpdate,proto3" json:"last_update,omitempty"`
	Fills      []*FixOrderFills `protobuf:"bytes,3,rep,name=fills,proto3" json:"fills,omitempty"`
	Reason     string           `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *FixOrderState) Reset() {
	*x = FixOrderState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FixOrderState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FixOrderState) ProtoMessage() {}

func (x *FixOrderState) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FixOrderState.ProtoReflect.Descriptor instead.
func (*FixOrderState) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{71}
}

func (x *FixOrderState) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *FixOrderState) GetLastUpdate() string {
	if x != nil {
		return x.LastUpdate
	}
	return ""
}

func (x *FixOrderState) GetFills() []*FixOrderFills {
	if x != nil {
		return x.Fills
	}
	return nil
}

func (x *FixOrderState) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type PlaceOrderData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	OrderId               string              `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	PlaceTime             string              `protobuf:"bytes,3,opt,name=place_time,json=placeTime,proto3" json:"place_time,omitempty"`
	CurrentModificationId string              `protobuf:"bytes,4,opt,name=current_modification_id,json=currentModificationId,proto3" json:"current_modification_id,omitempty"`
	AccountId             string              `protobuf:"bytes,5,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Username              string              `protobuf:"bytes,6,opt,name=username,proto3" json:"username,omitempty"`
	ClientTag             string              `protobuf:"bytes,7,opt,name=client_tag,json=clientTag,proto3" json:"client_tag,omitempty"`
	OrderType             string              `protobuf:"bytes,8,opt,name=order_type,json=orderType,proto3" json:"order_type,omitempty"`
	StopPrice             string              `protobuf:"bytes,9,opt,name=stop_price,json=stopPrice,proto3" json:"stop_price,omitempty"`
	OrderState            *FixOrderState      `protobuf:"bytes,10,opt,name=OrderState,proto3" json:"OrderState,omitempty"`
	OrderParameters       *FixOrderParameters `protobuf:"bytes,11,opt,name=OrderParameters,proto3" json:"OrderParameters,omitempty"`
	InvestorId            string              `protobuf:"bytes,12,opt,name=investor_id,json=investorId,proto3" json:"investor_id,omitempty"`
}

func (x *PlaceOrderData) Reset() {
	*x = PlaceOrderData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlaceOrderData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaceOrderData) ProtoMessage() {}

func (x *PlaceOrderData) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaceOrderData.ProtoReflect.Descriptor instead.
func (*PlaceOrderData) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{72}
}

func (x *PlaceOrderData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PlaceOrderData) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *PlaceOrderData) GetPlaceTime() string {
	if x != nil {
		return x.PlaceTime
	}
	return ""
}

func (x *PlaceOrderData) GetCurrentModificationId() string {
	if x != nil {
		return x.CurrentModificationId
	}
	return ""
}

func (x *PlaceOrderData) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *PlaceOrderData) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *PlaceOrderData) GetClientTag() string {
	if x != nil {
		return x.ClientTag
	}
	return ""
}

func (x *PlaceOrderData) GetOrderType() string {
	if x != nil {
		return x.OrderType
	}
	return ""
}

func (x *PlaceOrderData) GetStopPrice() string {
	if x != nil {
		return x.StopPrice
	}
	return ""
}

func (x *PlaceOrderData) GetOrderState() *FixOrderState {
	if x != nil {
		return x.OrderState
	}
	return nil
}

func (x *PlaceOrderData) GetOrderParameters() *FixOrderParameters {
	if x != nil {
		return x.OrderParameters
	}
	return nil
}

func (x *PlaceOrderData) GetInvestorId() string {
	if x != nil {
		return x.InvestorId
	}
	return ""
}

type InvestorPlaceOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Orders []*PlaceOrderData `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
}

func (x *InvestorPlaceOrderRequest) Reset() {
	*x = InvestorPlaceOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvestorPlaceOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvestorPlaceOrderRequest) ProtoMessage() {}

func (x *InvestorPlaceOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvestorPlaceOrderRequest.ProtoReflect.Descriptor instead.
func (*InvestorPlaceOrderRequest) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{73}
}

func (x *InvestorPlaceOrderRequest) GetOrders() []*PlaceOrderData {
	if x != nil {
		return x.Orders
	}
	return nil
}

type GetInvestStockByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvestorId string `protobuf:"bytes,1,opt,name=investor_id,json=investorId,proto3" json:"investor_id,omitempty"`
	SymbolId   string `protobuf:"bytes,2,opt,name=symbol_id,json=symbolId,proto3" json:"symbol_id,omitempty"`
}

func (x *GetInvestStockByIdRequest) Reset() {
	*x = GetInvestStockByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInvestStockByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInvestStockByIdRequest) ProtoMessage() {}

func (x *GetInvestStockByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInvestStockByIdRequest.ProtoReflect.Descriptor instead.
func (*GetInvestStockByIdRequest) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{74}
}

func (x *GetInvestStockByIdRequest) GetInvestorId() string {
	if x != nil {
		return x.InvestorId
	}
	return ""
}

func (x *GetInvestStockByIdRequest) GetSymbolId() string {
	if x != nil {
		return x.SymbolId
	}
	return ""
}

type GetInvestStockByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Quantity int32  `protobuf:"varint,1,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Value    string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetInvestStockByIdResponse) Reset() {
	*x = GetInvestStockByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInvestStockByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInvestStockByIdResponse) ProtoMessage() {}

func (x *GetInvestStockByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInvestStockByIdResponse.ProtoReflect.Descriptor instead.
func (*GetInvestStockByIdResponse) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{75}
}

func (x *GetInvestStockByIdResponse) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *GetInvestStockByIdResponse) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type GetInvestorBuyStocksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvestorId string `protobuf:"bytes,1,opt,name=investor_id,json=investorId,proto3" json:"investor_id,omitempty"`
}

func (x *GetInvestorBuyStocksRequest) Reset() {
	*x = GetInvestorBuyStocksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInvestorBuyStocksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInvestorBuyStocksRequest) ProtoMessage() {}

func (x *GetInvestorBuyStocksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInvestorBuyStocksRequest.ProtoReflect.Descriptor instead.
func (*GetInvestorBuyStocksRequest) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{76}
}

func (x *GetInvestorBuyStocksRequest) GetInvestorId() string {
	if x != nil {
		return x.InvestorId
	}
	return ""
}

type GetInvestorBuyStocksdata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Icon string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
}

func (x *GetInvestorBuyStocksdata) Reset() {
	*x = GetInvestorBuyStocksdata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInvestorBuyStocksdata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInvestorBuyStocksdata) ProtoMessage() {}

func (x *GetInvestorBuyStocksdata) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInvestorBuyStocksdata.ProtoReflect.Descriptor instead.
func (*GetInvestorBuyStocksdata) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{77}
}

func (x *GetInvestorBuyStocksdata) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetInvestorBuyStocksdata) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetInvestorBuyStocksdata) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

type GetInvestorBuyStocksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instruments []*GetInvestorBuyStocksdata `protobuf:"bytes,1,rep,name=instruments,proto3" json:"instruments,omitempty"`
}

func (x *GetInvestorBuyStocksResponse) Reset() {
	*x = GetInvestorBuyStocksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInvestorBuyStocksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInvestorBuyStocksResponse) ProtoMessage() {}

func (x *GetInvestorBuyStocksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInvestorBuyStocksResponse.ProtoReflect.Descriptor instead.
func (*GetInvestorBuyStocksResponse) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{78}
}

func (x *GetInvestorBuyStocksResponse) GetInstruments() []*GetInvestorBuyStocksdata {
	if x != nil {
		return x.Instruments
	}
	return nil
}

type GetInvestorTokensResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FcmToken []string `protobuf:"bytes,2,rep,name=fcm_token,json=fcmToken,proto3" json:"fcm_token,omitempty"`
}

func (x *GetInvestorTokensResponse) Reset() {
	*x = GetInvestorTokensResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInvestorTokensResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInvestorTokensResponse) ProtoMessage() {}

func (x *GetInvestorTokensResponse) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInvestorTokensResponse.ProtoReflect.Descriptor instead.
func (*GetInvestorTokensResponse) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{79}
}

func (x *GetInvestorTokensResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetInvestorTokensResponse) GetFcmToken() []string {
	if x != nil {
		return x.FcmToken
	}
	return nil
}

type GetInvestorTokensRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetInvestorTokensRequest) Reset() {
	*x = GetInvestorTokensRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInvestorTokensRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInvestorTokensRequest) ProtoMessage() {}

func (x *GetInvestorTokensRequest) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInvestorTokensRequest.ProtoReflect.Descriptor instead.
func (*GetInvestorTokensRequest) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{80}
}

func (x *GetInvestorTokensRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetApplicantInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicantId string `protobuf:"bytes,1,opt,name=applicant_id,json=applicantId,proto3" json:"applicant_id,omitempty"`
}

func (x *GetApplicantInfoRequest) Reset() {
	*x = GetApplicantInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApplicantInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApplicantInfoRequest) ProtoMessage() {}

func (x *GetApplicantInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApplicantInfoRequest.ProtoReflect.Descriptor instead.
func (*GetApplicantInfoRequest) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{81}
}

func (x *GetApplicantInfoRequest) GetApplicantId() string {
	if x != nil {
		return x.ApplicantId
	}
	return ""
}

type GetApplicantInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdDocType        string `protobuf:"bytes,1,opt,name=id_doc_type,json=idDocType,proto3" json:"id_doc_type,omitempty"`
	Country          string `protobuf:"bytes,2,opt,name=country,proto3" json:"country,omitempty"`
	FirstName        string `protobuf:"bytes,3,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	FirstNameEn      string `protobuf:"bytes,4,opt,name=first_name_en,json=firstNameEn,proto3" json:"first_name_en,omitempty"`
	LastName         string `protobuf:"bytes,5,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	LastNameEn       string `protobuf:"bytes,6,opt,name=last_name_en,json=lastNameEn,proto3" json:"last_name_en,omitempty"`
	IssuedDate       string `protobuf:"bytes,7,opt,name=issued_date,json=issuedDate,proto3" json:"issued_date,omitempty"`
	ValidUntil       string `protobuf:"bytes,8,opt,name=valid_until,json=validUntil,proto3" json:"valid_until,omitempty"`
	Number           string `protobuf:"bytes,9,opt,name=number,proto3" json:"number,omitempty"`
	AdditionalNumber string `protobuf:"bytes,10,opt,name=additional_number,json=additionalNumber,proto3" json:"additional_number,omitempty"`
	DateOfBirth      string `protobuf:"bytes,11,opt,name=date_of_birth,json=dateOfBirth,proto3" json:"date_of_birth,omitempty"`
	PlaceOfBirthEn   string `protobuf:"bytes,12,opt,name=place_of_birth_en,json=placeOfBirthEn,proto3" json:"place_of_birth_en,omitempty"`
}

func (x *GetApplicantInfoResponse) Reset() {
	*x = GetApplicantInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApplicantInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApplicantInfoResponse) ProtoMessage() {}

func (x *GetApplicantInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApplicantInfoResponse.ProtoReflect.Descriptor instead.
func (*GetApplicantInfoResponse) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{82}
}

func (x *GetApplicantInfoResponse) GetIdDocType() string {
	if x != nil {
		return x.IdDocType
	}
	return ""
}

func (x *GetApplicantInfoResponse) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *GetApplicantInfoResponse) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *GetApplicantInfoResponse) GetFirstNameEn() string {
	if x != nil {
		return x.FirstNameEn
	}
	return ""
}

func (x *GetApplicantInfoResponse) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *GetApplicantInfoResponse) GetLastNameEn() string {
	if x != nil {
		return x.LastNameEn
	}
	return ""
}

func (x *GetApplicantInfoResponse) GetIssuedDate() string {
	if x != nil {
		return x.IssuedDate
	}
	return ""
}

func (x *GetApplicantInfoResponse) GetValidUntil() string {
	if x != nil {
		return x.ValidUntil
	}
	return ""
}

func (x *GetApplicantInfoResponse) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *GetApplicantInfoResponse) GetAdditionalNumber() string {
	if x != nil {
		return x.AdditionalNumber
	}
	return ""
}

func (x *GetApplicantInfoResponse) GetDateOfBirth() string {
	if x != nil {
		return x.DateOfBirth
	}
	return ""
}

func (x *GetApplicantInfoResponse) GetPlaceOfBirthEn() string {
	if x != nil {
		return x.PlaceOfBirthEn
	}
	return ""
}

type UpdateAccountFromSalesforceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FirstName          string `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName           string `protobuf:"bytes,3,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	FullName           string `protobuf:"bytes,4,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	Username           string `protobuf:"bytes,5,opt,name=username,proto3" json:"username,omitempty"`
	Description        string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Email              string `protobuf:"bytes,7,opt,name=email,proto3" json:"email,omitempty"`
	PhoneNumber        string `protobuf:"bytes,8,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	MiddleName         string `protobuf:"bytes,9,opt,name=middle_name,json=middleName,proto3" json:"middle_name,omitempty"`
	Gender             string `protobuf:"bytes,10,opt,name=gender,proto3" json:"gender,omitempty"`
	DateOfBirth        string `protobuf:"bytes,11,opt,name=date_of_birth,json=dateOfBirth,proto3" json:"date_of_birth,omitempty"`
	CountryOfResidence string `protobuf:"bytes,12,opt,name=country_of_residence,json=countryOfResidence,proto3" json:"country_of_residence,omitempty"`
	PlaceOfBirth       string `protobuf:"bytes,13,opt,name=place_of_birth,json=placeOfBirth,proto3" json:"place_of_birth,omitempty"`
	PostCode           string `protobuf:"bytes,15,opt,name=post_code,json=postCode,proto3" json:"post_code,omitempty"`
	Town               string `protobuf:"bytes,16,opt,name=town,proto3" json:"town,omitempty"`
	Street             string `protobuf:"bytes,17,opt,name=street,proto3" json:"street,omitempty"`
	State              string `protobuf:"bytes,18,opt,name=state,proto3" json:"state,omitempty"`
	ValidUntil         string `protobuf:"bytes,19,opt,name=valid_until,json=validUntil,proto3" json:"valid_until,omitempty"`
	IssuetDate         string `protobuf:"bytes,20,opt,name=issuet_date,json=issuetDate,proto3" json:"issuet_date,omitempty"`
	Citizenship        string `protobuf:"bytes,21,opt,name=citizenship,proto3" json:"citizenship,omitempty"`
	DateOfIssue        string `protobuf:"bytes,22,opt,name=date_of_issue,json=dateOfIssue,proto3" json:"date_of_issue,omitempty"`
	DateOfExpiry       string `protobuf:"bytes,23,opt,name=date_of_expiry,json=dateOfExpiry,proto3" json:"date_of_expiry,omitempty"`
	IssueBy            string `protobuf:"bytes,24,opt,name=issue_by,json=issueBy,proto3" json:"issue_by,omitempty"`
	PassportNumber     string `protobuf:"bytes,25,opt,name=passport_number,json=passportNumber,proto3" json:"passport_number,omitempty"`
	Adress             string `protobuf:"bytes,26,opt,name=adress,proto3" json:"adress,omitempty"`
	InvestorStatus     string `protobuf:"bytes,27,opt,name=investor_status,json=investorStatus,proto3" json:"investor_status,omitempty"`
	TwoFa              bool   `protobuf:"varint,28,opt,name=two_fa,json=twoFa,proto3" json:"two_fa,omitempty"`
	Deleted            bool   `protobuf:"varint,29,opt,name=deleted,proto3" json:"deleted,omitempty"`
	RegistrationStatus string `protobuf:"bytes,30,opt,name=registration_status,json=registrationStatus,proto3" json:"registration_status,omitempty"`
	Residence          string `protobuf:"bytes,31,opt,name=residence,proto3" json:"residence,omitempty"`
}

func (x *UpdateAccountFromSalesforceRequest) Reset() {
	*x = UpdateAccountFromSalesforceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAccountFromSalesforceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAccountFromSalesforceRequest) ProtoMessage() {}

func (x *UpdateAccountFromSalesforceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAccountFromSalesforceRequest.ProtoReflect.Descriptor instead.
func (*UpdateAccountFromSalesforceRequest) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{83}
}

func (x *UpdateAccountFromSalesforceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateAccountFromSalesforceRequest) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *UpdateAccountFromSalesforceRequest) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *UpdateAccountFromSalesforceRequest) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *UpdateAccountFromSalesforceRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UpdateAccountFromSalesforceRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateAccountFromSalesforceRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UpdateAccountFromSalesforceRequest) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *UpdateAccountFromSalesforceRequest) GetMiddleName() string {
	if x != nil {
		return x.MiddleName
	}
	return ""
}

func (x *UpdateAccountFromSalesforceRequest) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *UpdateAccountFromSalesforceRequest) GetDateOfBirth() string {
	if x != nil {
		return x.DateOfBirth
	}
	return ""
}

func (x *UpdateAccountFromSalesforceRequest) GetCountryOfResidence() string {
	if x != nil {
		return x.CountryOfResidence
	}
	return ""
}

func (x *UpdateAccountFromSalesforceRequest) GetPlaceOfBirth() string {
	if x != nil {
		return x.PlaceOfBirth
	}
	return ""
}

func (x *UpdateAccountFromSalesforceRequest) GetPostCode() string {
	if x != nil {
		return x.PostCode
	}
	return ""
}

func (x *UpdateAccountFromSalesforceRequest) GetTown() string {
	if x != nil {
		return x.Town
	}
	return ""
}

func (x *UpdateAccountFromSalesforceRequest) GetStreet() string {
	if x != nil {
		return x.Street
	}
	return ""
}

func (x *UpdateAccountFromSalesforceRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *UpdateAccountFromSalesforceRequest) GetValidUntil() string {
	if x != nil {
		return x.ValidUntil
	}
	return ""
}

func (x *UpdateAccountFromSalesforceRequest) GetIssuetDate() string {
	if x != nil {
		return x.IssuetDate
	}
	return ""
}

func (x *UpdateAccountFromSalesforceRequest) GetCitizenship() string {
	if x != nil {
		return x.Citizenship
	}
	return ""
}

func (x *UpdateAccountFromSalesforceRequest) GetDateOfIssue() string {
	if x != nil {
		return x.DateOfIssue
	}
	return ""
}

func (x *UpdateAccountFromSalesforceRequest) GetDateOfExpiry() string {
	if x != nil {
		return x.DateOfExpiry
	}
	return ""
}

func (x *UpdateAccountFromSalesforceRequest) GetIssueBy() string {
	if x != nil {
		return x.IssueBy
	}
	return ""
}

func (x *UpdateAccountFromSalesforceRequest) GetPassportNumber() string {
	if x != nil {
		return x.PassportNumber
	}
	return ""
}

func (x *UpdateAccountFromSalesforceRequest) GetAdress() string {
	if x != nil {
		return x.Adress
	}
	return ""
}

func (x *UpdateAccountFromSalesforceRequest) GetInvestorStatus() string {
	if x != nil {
		return x.InvestorStatus
	}
	return ""
}

func (x *UpdateAccountFromSalesforceRequest) GetTwoFa() bool {
	if x != nil {
		return x.TwoFa
	}
	return false
}

func (x *UpdateAccountFromSalesforceRequest) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

func (x *UpdateAccountFromSalesforceRequest) GetRegistrationStatus() string {
	if x != nil {
		return x.RegistrationStatus
	}
	return ""
}

func (x *UpdateAccountFromSalesforceRequest) GetResidence() string {
	if x != nil {
		return x.Residence
	}
	return ""
}

type UpdateAccountFromSalesforceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UpdateAccountFromSalesforceResponse) Reset() {
	*x = UpdateAccountFromSalesforceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_investor_service_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAccountFromSalesforceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAccountFromSalesforceResponse) ProtoMessage() {}

func (x *UpdateAccountFromSalesforceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_investor_service_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAccountFromSalesforceResponse.ProtoReflect.Descriptor instead.
func (*UpdateAccountFromSalesforceResponse) Descriptor() ([]byte, []int) {
	return file_investor_service_proto_rawDescGZIP(), []int{84}
}

func (x *UpdateAccountFromSalesforceResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_investor_service_proto protoreflect.FileDescriptor

var file_investor_service_proto_rawDesc = []byte{
	0x0a, 0x16, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x37, 0x0a, 0x14, 0x45, 0x78, 0x61, 0x6e, 0x74, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69,
	0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x22, 0x43, 0x0a, 0x15,
	0x45, 0x78, 0x61, 0x6e, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x65, 0x78, 0x61, 0x6e, 0x74, 0x65, 0x5f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x65, 0x78, 0x61, 0x6e, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x22, 0x2c, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x39, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x22, 0x36, 0x0a, 0x24, 0x47, 0x65,
	0x74, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x76, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f,
	0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x13, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x28, 0x0a, 0x0a, 0x55, 0x73,
	0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x22, 0x76, 0x0a, 0x1c, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x6d, 0x61, 0x69,
	0x6c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f,
	0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0xba, 0x01, 0x0a,
	0x14, 0x53, 0x75, 0x6d, 0x73, 0x75, 0x62, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65,
	0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x17, 0x0a, 0x15, 0x53, 0x75, 0x6d,
	0x73, 0x75, 0x62, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x3c, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x53, 0x75, 0x6d, 0x73, 0x75, 0x62, 0x52,
	0x65, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x49, 0x64,
	0x22, 0x57, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x6d, 0x73, 0x75, 0x62, 0x52, 0x65, 0x6a,
	0x65, 0x63, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x34, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x4b, 0x79, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22,
	0xa3, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4b, 0x79, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x6a, 0x65, 0x63,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x65, 0x70, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x65, 0x70, 0x22, 0x3f, 0x0a, 0x21, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f,
	0x72, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x57, 0x69, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x5b, 0x0a, 0x22, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74,
	0x6f, 0x72, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x57, 0x69, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x09,
	0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49,
	0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74,
	0x6f, 0x72, 0x73, 0x22, 0xfa, 0x01, 0x0a, 0x09, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72,
	0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x61, 0x6c, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x6d,
	0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x6d, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x66, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x64, 0x41, 0x74, 0x22, 0x8d, 0x01, 0x0a, 0x14, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x4f, 0x66, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xfc, 0x01, 0x0a, 0x07, 0x55, 0x73, 0x65,
	0x72, 0x4b, 0x59, 0x43, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f,
	0x6f, 0x66, 0x5f, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x4f, 0x66, 0x52, 0x65, 0x73,
	0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x5f, 0x6f, 0x66, 0x5f, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x73, 0x68, 0x69, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x4f,
	0x66, 0x43, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xb7, 0x01, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x22, 0xee, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12,
	0x27, 0x0a, 0x03, 0x6b, 0x79, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x4b, 0x59, 0x43, 0x52, 0x03, 0x6b, 0x79, 0x63, 0x12, 0x50, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x6f,
	0x66, 0x5f, 0x6f, 0x66, 0x5f, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x4f, 0x66, 0x52,
	0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x4f,
	0x66, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x61, 0x73, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x70, 0x6f,
	0x72, 0x74, 0x22, 0x63, 0x0a, 0x1c, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x77, 0x69, 0x6c, 0x69, 0x6f,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x22, 0x3c, 0x0a, 0x16, 0x53, 0x61, 0x76, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x46, 0x6c, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x66, 0x6c, 0x61, 0x67, 0x22, 0x36, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x22, 0x67, 0x0a,
	0x1d, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46,
	0x0a, 0x10, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0e, 0x67, 0x65, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xa0, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x6e, 0x69, 0x63, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6e, 0x69, 0x63, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x73, 0x6f,
	0x33, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x73, 0x6f, 0x33, 0x12, 0x18, 0x0a,
	0x07, 0x6e, 0x75, 0x6d, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x6e, 0x75, 0x6d, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x22, 0x3b, 0x0a, 0x1d, 0x53, 0x65, 0x6e,
	0x64, 0x54, 0x77, 0x69, 0x6c, 0x69, 0x6f, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x86, 0x01, 0x0a, 0x18, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x77,
	0x69, 0x6c, 0x69, 0x6f, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x74, 0x77, 0x69, 0x6c, 0x69, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x73, 0x0a, 0x19, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d,
	0x74, 0x77, 0x69, 0x6c, 0x69, 0x6f, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x77, 0x69, 0x6c, 0x69, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x22, 0x9d, 0x01, 0x0a, 0x1b, 0x53, 0x61, 0x76, 0x65, 0x49, 0x6e, 0x76,
	0x65, 0x73, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x76,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e,
	0x73, 0x70, 0x65, 0x76, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x6f,
	0x63, 0x49, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x05, 0x64, 0x6f, 0x63, 0x49, 0x64,
	0x12, 0x22, 0x0a, 0x0c, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x22, 0xaf, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x53, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x22, 0x48, 0x0a, 0x0d, 0x49,
	0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1f, 0x0a, 0x0b,
	0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x22, 0xf2, 0x04, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x45, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e,
	0x0a, 0x0b, 0x69, 0x64, 0x5f, 0x64, 0x6f, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x64, 0x44, 0x6f, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73,
	0x73, 0x75, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x22, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x62, 0x69, 0x72,
	0x74, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x66,
	0x42, 0x69, 0x72, 0x74, 0x68, 0x12, 0x29, 0x0a, 0x11, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f, 0x6f,
	0x66, 0x5f, 0x62, 0x69, 0x72, 0x74, 0x68, 0x5f, 0x65, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x66, 0x42, 0x69, 0x72, 0x74, 0x68, 0x45, 0x6e,
	0x12, 0x3f, 0x0a, 0x0d, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x2f, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x46, 0x0a, 0x0d, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65,
	0x73, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0c, 0x69, 0x6e,
	0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x3e, 0x0a, 0x1b, 0x47, 0x65,
	0x74, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x76,
	0x65, 0x73, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x22, 0x5c, 0x0a, 0x1c, 0x47, 0x65,
	0x74, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x09, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x09, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x2a, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x22, 0x8a, 0x01, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x6e, 0x74, 0x49, 0x44, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x73, 0x75,
	0x65, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69,
	0x73, 0x73, 0x75, 0x65, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x22, 0xfb, 0x04, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x76,
	0x65, 0x73, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x12, 0x3f, 0x0a, 0x0d,
	0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0c, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2f, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x21,
	0x0a, 0x0c, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x30, 0x0a, 0x14, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x12, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x64, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x12, 0x38, 0x0a, 0x18, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x5f, 0x77, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x16, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x6d, 0x61,
	0x6e, 0x75, 0x61, 0x6c, 0x5f, 0x6b, 0x79, 0x63, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x6d, 0x61, 0x6e, 0x75, 0x61, 0x6c,
	0x4b, 0x79, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x0e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x69, 0x6e, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x69, 0x6e, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x6f, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x6f, 0x50, 0x6f, 0x73, 0x74, 0x22,
	0x39, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x76,
	0x65, 0x73, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x22, 0x32, 0x0a, 0x0c, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x22, 0x34,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x4b, 0x79, 0x63, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74,
	0x6f, 0x72, 0x49, 0x64, 0x22, 0x90, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4b, 0x79, 0x63, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2b,
	0x0a, 0x11, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65,
	0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x22, 0x93, 0x02, 0x0a, 0x12, 0x53, 0x61, 0x76, 0x65,
	0x4b, 0x79, 0x63, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66,
	0x63, 0x6d, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x63, 0x6d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x3f, 0x0a, 0x0d, 0x70, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2f, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xa1, 0x04,
	0x0a, 0x0c, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d,
	0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x69,
	0x64, 0x64, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x62,
	0x69, 0x72, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x65,
	0x4f, 0x66, 0x42, 0x69, 0x72, 0x74, 0x68, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x63, 0x65,
	0x5f, 0x6f, 0x66, 0x5f, 0x62, 0x69, 0x72, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x66, 0x42, 0x69, 0x72, 0x74, 0x68, 0x12, 0x20, 0x0a,
	0x0b, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x69, 0x6e, 0x69, 0x6f, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x69, 0x6f, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x5f, 0x6f, 0x66, 0x5f, 0x62, 0x69, 0x72, 0x74, 0x68, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x4f, 0x66, 0x42, 0x69,
	0x72, 0x74, 0x68, 0x12, 0x22, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x69,
	0x73, 0x73, 0x75, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x65,
	0x4f, 0x66, 0x49, 0x73, 0x73, 0x75, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x6f, 0x66, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x12, 0x19, 0x0a,
	0x08, 0x69, 0x73, 0x73, 0x75, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x69, 0x73, 0x73, 0x75, 0x65, 0x42, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x61, 0x73, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x70, 0x61, 0x73, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x22, 0xa7, 0x01, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x34, 0x0a,
	0x16, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x6f, 0x66, 0x5f, 0x63, 0x69, 0x74, 0x69,
	0x7a, 0x65, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x4f, 0x66, 0x43, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x73,
	0x68, 0x69, 0x70, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x6f,
	0x66, 0x5f, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x4f, 0x66, 0x52, 0x65, 0x73, 0x69,
	0x64, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x42, 0x0a, 0x1d, 0x49,
	0x73, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x61, 0x76, 0x6f, 0x75,
	0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x69, 0x73, 0x5f, 0x66, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x69, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x46, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x69, 0x74, 0x65, 0x22,
	0xc0, 0x01, 0x0a, 0x13, 0x46, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x69, 0x74, 0x65, 0x49, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x76, 0x65, 0x73,
	0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e,
	0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2b, 0x0a,
	0x11, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63,
	0x6f, 0x6e, 0x22, 0x5e, 0x0a, 0x17, 0x46, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x69, 0x74, 0x65, 0x49,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x43, 0x0a,
	0x0b, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x46, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x69, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x22, 0x92, 0x01, 0x0a, 0x1d, 0x41, 0x64, 0x64, 0x46, 0x61, 0x76, 0x6f, 0x75, 0x72,
	0x69, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x65, 0x73,
	0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x69, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x22, 0x2d, 0x0a, 0x0a, 0x49, 0x6e, 0x76, 0x65, 0x73,
	0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x65,
	0x73, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x14, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74,
	0x6f, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x49,
	0x0a, 0x17, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x57,
	0x65, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x45, 0x0a, 0x1c, 0x54, 0x77, 0x6f,
	0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x77, 0x6f,
	0x5f, 0x66, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x74, 0x77, 0x6f, 0x46, 0x61,
	0x22, 0x31, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x54, 0x77, 0x6f, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x2a, 0x0a, 0x18, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x50, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x76, 0x65, 0x73,
	0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e,
	0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x62, 0x61, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x62, 0x61, 0x6e, 0x49,
	0x64, 0x22, 0x9d, 0x01, 0x0a, 0x15, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x66, 0x74, 0x65, 0x72,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x30, 0x0a, 0x14, 0x6d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x5f, 0x6b, 0x79, 0x63, 0x5f, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x6d,
	0x61, 0x6e, 0x75, 0x61, 0x6c, 0x4b, 0x79, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x22, 0x6e, 0x0a, 0x18, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x57, 0x65, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x66, 0x74,
	0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0x46, 0x0a, 0x1d, 0x54, 0x77, 0x6f, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x41, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x77, 0x6f, 0x5f, 0x66, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x74, 0x77, 0x6f, 0x46, 0x61, 0x22, 0x6c, 0x0a, 0x20, 0x47, 0x65, 0x74,
	0x54, 0x77, 0x6f, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x15, 0x0a,
	0x06, 0x74, 0x77, 0x6f, 0x5f, 0x66, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x74,
	0x77, 0x6f, 0x46, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xe7, 0x01, 0x0a, 0x1b, 0x49, 0x6e, 0x76, 0x65,
	0x73, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x10, 0x0a,
	0x03, 0x6f, 0x74, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6f, 0x74, 0x70, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x66, 0x63, 0x6d, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x63, 0x6d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x88, 0x01, 0x0a, 0x1c, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x72, 0x6d, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6b,
	0x79, 0x63, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6b, 0x79, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x6d, 0x61,
	0x6e, 0x75, 0x61, 0x6c, 0x5f, 0x6b, 0x79, 0x63, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x6d, 0x61, 0x6e, 0x75, 0x61, 0x6c,
	0x4b, 0x79, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0x94, 0x01, 0x0a,
	0x1e, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x57, 0x65, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x74, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6f, 0x74, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x39, 0x0a, 0x1f, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x57, 0x65, 0x62, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x1d,
	0x0a, 0x1b, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x37, 0x0a,
	0x1c, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61,
	0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x2d, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76,
	0x65, 0x73, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xf3, 0x04, 0x0a, 0x12, 0x46, 0x69, 0x78, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x64, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x70, 0x5f,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x6f,
	0x70, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x5f,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x70, 0x61, 0x72, 0x74, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x25, 0x0a, 0x0e,
	0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x64, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x67, 0x74, 0x74, 0x5f, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x67, 0x74, 0x74, 0x45, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x12, 0x1f, 0x0a, 0x0b,
	0x74, 0x61, 0x6b, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x74, 0x61, 0x6b, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x6c, 0x6f, 0x73, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x74, 0x6f, 0x70, 0x4c, 0x6f, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x63,
	0x6f, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f,
	0x63, 0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x29, 0x0a, 0x11, 0x69, 0x66, 0x5f, 0x64, 0x6f,
	0x6e, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x69, 0x66, 0x44, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x8f, 0x01, 0x0a, 0x0d,
	0x46, 0x69, 0x78, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x6c, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x93, 0x01,
	0x0a, 0x0d, 0x46, 0x69, 0x78, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x61,
	0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x31, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x6c,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x78, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x46,
	0x69, 0x6c, 0x6c, 0x73, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x6c, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x22, 0xd4, 0x03, 0x0a, 0x0e, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x36, 0x0a, 0x17, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x15, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x61,
	0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54,
	0x61, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x70, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x3b, 0x0a, 0x0a, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x78, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x0a, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x4a, 0x0a,
	0x0f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x78, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x0f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x76,
	0x65, 0x73, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x22, 0x51, 0x0a, 0x19, 0x49, 0x6e,
	0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x22, 0x59, 0x0a,
	0x19, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e,
	0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x49, 0x64, 0x22, 0x4e, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x49,
	0x6e, 0x76, 0x65, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3e, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x49,
	0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x42, 0x75, 0x79, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x76, 0x65, 0x73,
	0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e,
	0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x22, 0x52, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x49,
	0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x42, 0x75, 0x79, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x73,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x22, 0x68, 0x0a, 0x1c,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x42, 0x75, 0x79, 0x53, 0x74,
	0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0b,
	0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x42, 0x75, 0x79, 0x53,
	0x74, 0x6f, 0x63, 0x6b, 0x73, 0x64, 0x61, 0x74, 0x61, 0x52, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x48, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76,
	0x65, 0x73, 0x74, 0x6f, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x63, 0x6d, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x66, 0x63, 0x6d, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0x33, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x3c, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e,
	0x74, 0x49, 0x64, 0x22, 0xac, 0x03, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1e, 0x0a, 0x0b, 0x69, 0x64, 0x5f, 0x64, 0x6f, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x64, 0x44, 0x6f, 0x63, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x12, 0x1b, 0x0a,
	0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x12, 0x1f, 0x0a, 0x0b,
	0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x12, 0x16,
	0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x62,
	0x69, 0x72, 0x74, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x65,
	0x4f, 0x66, 0x42, 0x69, 0x72, 0x74, 0x68, 0x12, 0x29, 0x0a, 0x11, 0x70, 0x6c, 0x61, 0x63, 0x65,
	0x5f, 0x6f, 0x66, 0x5f, 0x62, 0x69, 0x72, 0x74, 0x68, 0x5f, 0x65, 0x6e, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x66, 0x42, 0x69, 0x72, 0x74, 0x68,
	0x45, 0x6e, 0x22, 0xcb, 0x07, 0x0a, 0x22, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x66, 0x6f, 0x72,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x69, 0x64,
	0x64, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x12, 0x22, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x62, 0x69,
	0x72, 0x74, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x4f,
	0x66, 0x42, 0x69, 0x72, 0x74, 0x68, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x5f, 0x6f, 0x66, 0x5f, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x4f, 0x66, 0x52,
	0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x63,
	0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x62, 0x69, 0x72, 0x74, 0x68, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x66, 0x42, 0x69, 0x72, 0x74, 0x68, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x6f, 0x77, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x6f, 0x77, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x12, 0x1f,
	0x0a, 0x0b, 0x69, 0x73, 0x73, 0x75, 0x65, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x73, 0x73, 0x75, 0x65, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x73, 0x68, 0x69,
	0x70, 0x12, 0x22, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x69, 0x73, 0x73,
	0x75, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x66,
	0x49, 0x73, 0x73, 0x75, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6f, 0x66,
	0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64,
	0x61, 0x74, 0x65, 0x4f, 0x66, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x69,
	0x73, 0x73, 0x75, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69,
	0x73, 0x73, 0x75, 0x65, 0x42, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x61, 0x73, 0x73, 0x70, 0x6f,
	0x72, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x70, 0x61, 0x73, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x76, 0x65, 0x73,
	0x74, 0x6f, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x15, 0x0a, 0x06, 0x74, 0x77, 0x6f, 0x5f, 0x66, 0x61, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x74, 0x77, 0x6f, 0x46, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x12, 0x2f, 0x0a, 0x13, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x18,
	0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65,
	0x22, 0x35, 0x0a, 0x23, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x32, 0xc3, 0x1f, 0x0a, 0x0f, 0x49, 0x6e, 0x76, 0x65,
	0x73, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5a, 0x0a, 0x0d, 0x49,
	0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x22, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x76, 0x65,
	0x73, 0x74, 0x6f, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x23, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x10, 0x49, 0x6e, 0x76, 0x65, 0x73,
	0x74, 0x6f, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x57, 0x65, 0x62, 0x12, 0x25, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x76, 0x65, 0x73,
	0x74, 0x6f, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x57, 0x65, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x26, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x57,
	0x65, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x71, 0x0a, 0x14,
	0x54, 0x77, 0x6f, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x41, 0x75, 0x74, 0x68, 0x65, 0x74, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x54, 0x77, 0x6f, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x41, 0x75, 0x74,
	0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x54, 0x77, 0x6f, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x7a, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x54, 0x77, 0x6f, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x41,
	0x75, 0x74, 0x68, 0x65, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x2d, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x77, 0x6f,
	0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x77, 0x6f, 0x46,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x72, 0x0a, 0x15, 0x53,
	0x65, 0x6e, 0x64, 0x54, 0x77, 0x69, 0x6c, 0x69, 0x6f, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x2a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x77, 0x69, 0x6c, 0x69, 0x6f, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x53, 0x65, 0x6e, 0x64, 0x54, 0x77, 0x69, 0x6c, 0x69, 0x6f, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x66, 0x0a, 0x11, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6f, 0x0a, 0x14, 0x49, 0x6e, 0x76, 0x65, 0x73,
	0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x29, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49,
	0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74,
	0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x78, 0x0a, 0x17, 0x49, 0x6e, 0x76, 0x65,
	0x73, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x57, 0x65, 0x62, 0x12, 0x2c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x57, 0x65, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x57, 0x65, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x63, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x25, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x49, 0x6e,
	0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x12, 0x20, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x73,
	0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6f, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x29, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47,
	0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x14, 0x53, 0x61, 0x76, 0x65, 0x49,
	0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x29, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53,
	0x61, 0x76, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0b, 0x45, 0x64, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x12, 0x22, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x12, 0x4e, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x12, 0x22, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x12, 0x49, 0x0a, 0x0b, 0x53, 0x61, 0x76, 0x65, 0x4b, 0x59, 0x43, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x20, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x53, 0x61, 0x76, 0x65, 0x4b, 0x79, 0x63, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x14,
	0x53, 0x61, 0x76, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x1a, 0x1e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4b, 0x79, 0x63,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x79, 0x63, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x79, 0x63, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0d, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x17, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x1a, 0x15,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x17, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x44, 0x1a, 0x15, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12,
	0x26, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74,
	0x6f, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x5e, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x49, 0x6e, 0x76, 0x65,
	0x73, 0x74, 0x6f, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x18, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x1a, 0x2a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74,
	0x6f, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x6a, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x46, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x69,
	0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2b, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x46,
	0x61, 0x76, 0x6f, 0x75, 0x72, 0x69, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x69,
	0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x00, 0x12, 0x5c,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x46, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x69, 0x74, 0x65, 0x49, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x18, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f,
	0x72, 0x49, 0x64, 0x1a, 0x25, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x46, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x69, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x13,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x46, 0x61, 0x76, 0x6f, 0x75, 0x72,
	0x69, 0x74, 0x65, 0x12, 0x21, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x46, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x69, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x21, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x69, 0x74, 0x65, 0x49,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x15, 0x49,
	0x73, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x61, 0x76, 0x6f, 0x75,
	0x72, 0x69, 0x74, 0x65, 0x12, 0x21, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x46, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x69, 0x74, 0x65, 0x49, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x2b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x46, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x72, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x2a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0f, 0x53, 0x61,
	0x76, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x24, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x61, 0x76,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x46, 0x6c, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x00, 0x12, 0x84, 0x01, 0x0a,
	0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x72,
	0x6f, 0x6d, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x30, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x61, 0x6c,
	0x65, 0x73, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x53,
	0x61, 0x6c, 0x65, 0x73, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x81, 0x01, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x30, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x72, 0x6f,
	0x6d, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x31, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x46,
	0x72, 0x6f, 0x6d, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x81, 0x01, 0x0a, 0x1a, 0x49, 0x6e, 0x76, 0x65,
	0x73, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x57, 0x69, 0x74, 0x68, 0x55, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x57, 0x69, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x57, 0x69, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x0c, 0x47,
	0x65, 0x74, 0x4b, 0x79, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x79,
	0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x4b, 0x79, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x75, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x75, 0x6d, 0x73, 0x75,
	0x62, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2b,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x75, 0x6d, 0x73, 0x75, 0x62, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75,
	0x6d, 0x73, 0x75, 0x62, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x18, 0x49,
	0x6e, 0x73, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x46, 0x72, 0x6f,
	0x6d, 0x53, 0x75, 0x6d, 0x73, 0x75, 0x62, 0x12, 0x22, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x75, 0x6d, 0x73, 0x75, 0x62, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x75, 0x6d, 0x73, 0x75,
	0x62, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x5d, 0x0a, 0x15, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x6d, 0x61, 0x69, 0x6c, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x47,
	0x6d, 0x61, 0x69, 0x6c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x12, 0x8a, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f,
	0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x32, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74,
	0x6f, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6c,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x28, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x29, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x13,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x45, 0x78, 0x61, 0x6e, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x22, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x45, 0x78, 0x61, 0x6e, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x78, 0x61, 0x6e, 0x74, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5d,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x45, 0x78, 0x61, 0x6e, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x22, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x45, 0x78, 0x61, 0x6e, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x78, 0x61, 0x6e, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x17, 0x5a,
	0x15, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_investor_service_proto_rawDescOnce sync.Once
	file_investor_service_proto_rawDescData = file_investor_service_proto_rawDesc
)

func file_investor_service_proto_rawDescGZIP() []byte {
	file_investor_service_proto_rawDescOnce.Do(func() {
		file_investor_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_investor_service_proto_rawDescData)
	})
	return file_investor_service_proto_rawDescData
}

var file_investor_service_proto_msgTypes = make([]protoimpl.MessageInfo, 85)
var file_investor_service_proto_goTypes = []interface{}{
	(*ExanteAccountRequest)(nil),                  // 0: user_service.ExanteAccountRequest
	(*ExanteAccountResponse)(nil),                 // 1: user_service.ExanteAccountResponse
	(*GetInvestorPlatformRequest)(nil),            // 2: user_service.GetInvestorPlatformRequest
	(*GetInvestorPlatformResponse)(nil),           // 3: user_service.GetInvestorPlatformResponse
	(*GetInvestorRegistrationStatusRequest)(nil),  // 4: user_service.GetInvestorRegistrationStatusRequest
	(*GetInvestorRegistrationStatusResponse)(nil), // 5: user_service.GetInvestorRegistrationStatusResponse
	(*UserDetail)(nil),                            // 6: user_service.UserDetail
	(*SendGmailNotificationRequest)(nil),          // 7: user_service.SendGmailNotificationRequest
	(*SumsubCommentRequest)(nil),                  // 8: user_service.SumsubCommentRequest
	(*SumsubCommentResponse)(nil),                 // 9: user_service.SumsubCommentResponse
	(*GetSumsubRejectCommentRequest)(nil),         // 10: user_service.GetSumsubRejectCommentRequest
	(*GetSumsubRejectCommentResponse)(nil),        // 11: user_service.GetSumsubRejectCommentResponse
	(*GetKycStatusRequest)(nil),                   // 12: user_service.GetKycStatusRequest
	(*GetKycStatusResponse)(nil),                  // 13: user_service.GetKycStatusResponse
	(*InvestorSearchWithUsernameRequest)(nil),     // 14: user_service.InvestorSearchWithUsernameRequest
	(*InvestorSearchWithUsernameResponse)(nil),    // 15: user_service.InvestorSearchWithUsernameResponse
	(*Investors)(nil),                             // 16: user_service.Investors
	(*UserPassport)(nil),                          // 17: user_service.UserPassport
	(*UserProofOfResidence)(nil),                  // 18: user_service.UserProofOfResidence
	(*UserKYC)(nil),                               // 19: user_service.UserKYC
	(*User)(nil),                                  // 20: user_service.User
	(*UpdateUserRequest)(nil),                     // 21: user_service.UpdateUserRequest
	(*SendTwilioPhoneNumberRequest)(nil),          // 22: user_service.SendTwilioPhoneNumberRequest
	(*SaveCountryFlagRequest)(nil),                // 23: user_service.SaveCountryFlagRequest
	(*GetCountryPhoneNumberRequest)(nil),          // 24: user_service.GetCountryPhoneNumberRequest
	(*GetCountryPhoneNumberResponse)(nil),         // 25: user_service.GetCountryPhoneNumberResponse
	(*GetPhoneNumber)(nil),                        // 26: user_service.GetPhoneNumber
	(*SendTwilioPhoneNumberResponse)(nil),         // 27: user_service.SendTwilioPhoneNumberResponse
	(*CheckVerifivationRequest)(nil),              // 28: user_service.CheckVerifivationRequest
	(*CheckVerifivationResponse)(nil),             // 29: user_service.CheckVerifivationResponse
	(*SaveInvestorIdentityRequest)(nil),           // 30: user_service.SaveInvestorIdentityRequest
	(*UpdateProfileRequest)(nil),                  // 31: user_service.UpdateProfileRequest
	(*GetAllInvestorTokensResponse)(nil),          // 32: user_service.GetAllInvestorTokensResponse
	(*InvestorToken)(nil),                         // 33: user_service.InvestorToken
	(*GetApplicantInfoByExternalIdResponse)(nil),  // 34: user_service.GetApplicantInfoByExternalIdResponse
	(*GetInvestorDocumentsRequest)(nil),           // 35: user_service.GetInvestorDocumentsRequest
	(*GetInvestorDocumentsResponse)(nil),          // 36: user_service.GetInvestorDocumentsResponse
	(*AccountID)(nil),                             // 37: user_service.AccountID
	(*ApplicantID)(nil),                           // 38: user_service.ApplicantID
	(*GetInvestorResponse)(nil),                   // 39: user_service.GetInvestorResponse
	(*CreateInvestorResponse)(nil),                // 40: user_service.CreateInvestorResponse
	(*ReviewResult)(nil),                          // 41: user_service.ReviewResult
	(*GetKycDataRequest)(nil),                     // 42: user_service.GetKycDataRequest
	(*GetKycDataResponse)(nil),                    // 43: user_service.GetKycDataResponse
	(*SaveKycDataRequest)(nil),                    // 44: user_service.SaveKycDataRequest
	(*PersonalInfo)(nil),                          // 45: user_service.PersonalInfo
	(*Address)(nil),                               // 46: user_service.Address
	(*IsInstrumentFavouriteResponse)(nil),         // 47: user_service.IsInstrumentFavouriteResponse
	(*FavouriteInstrument)(nil),                   // 48: user_service.FavouriteInstrument
	(*FavouriteInstrumentList)(nil),               // 49: user_service.FavouriteInstrumentList
	(*AddFavouriteInstrumentRequest)(nil),         // 50: user_service.AddFavouriteInstrumentRequest
	(*InvestorId)(nil),                            // 51: user_service.InvestorId
	(*InvestorLoginRequest)(nil),                  // 52: user_service.InvestorLoginRequest
	(*InvestorLoginWebRequest)(nil),               // 53: user_service.InvestorLoginWebRequest
	(*TwoFactorAuthenticateRequest)(nil),          // 54: user_service.TwoFactorAuthenticateRequest
	(*GetTwoFactorAuthenticateRequest)(nil),       // 55: user_service.GetTwoFactorAuthenticateRequest
	(*DeactivateAccountRequest)(nil),              // 56: user_service.DeactivateAccountRequest
	(*CreateAccountRequest)(nil),                  // 57: user_service.CreateAccountRequest
	(*InvestorLoginResponse)(nil),                 // 58: user_service.InvestorLoginResponse
	(*InvestorLoginWebResponse)(nil),              // 59: user_service.InvestorLoginWebResponse
	(*TwoFactorAuthenticateResponse)(nil),         // 60: user_service.TwoFactorAuthenticateResponse
	(*GetTwoFactorAuthenticateResponse)(nil),      // 61: user_service.GetTwoFactorAuthenticateResponse
	(*InvestorConfirmEmailRequest)(nil),           // 62: user_service.InvestorConfirmEmailRequest
	(*InvestorConfirmEmailResponse)(nil),          // 63: user_service.InvestorConfirmEmailResponse
	(*InvestorConfirmEmailWebRequest)(nil),        // 64: user_service.InvestorConfirmEmailWebRequest
	(*InvestorConfirmEmailWebResponse)(nil),       // 65: user_service.InvestorConfirmEmailWebResponse
	(*InvestorPersonalDataRequest)(nil),           // 66: user_service.InvestorPersonalDataRequest
	(*InvestorPersonalDataResponse)(nil),          // 67: user_service.InvestorPersonalDataResponse
	(*GetInvestorRequest)(nil),                    // 68: user_service.GetInvestorRequest
	(*FixOrderParameters)(nil),                    // 69: user_service.FixOrderParameters
	(*FixOrderFills)(nil),                         // 70: user_service.FixOrderFills
	(*FixOrderState)(nil),                         // 71: user_service.FixOrderState
	(*PlaceOrderData)(nil),                        // 72: user_service.PlaceOrderData
	(*InvestorPlaceOrderRequest)(nil),             // 73: user_service.InvestorPlaceOrderRequest
	(*GetInvestStockByIdRequest)(nil),             // 74: user_service.GetInvestStockByIdRequest
	(*GetInvestStockByIdResponse)(nil),            // 75: user_service.GetInvestStockByIdResponse
	(*GetInvestorBuyStocksRequest)(nil),           // 76: user_service.GetInvestorBuyStocksRequest
	(*GetInvestorBuyStocksdata)(nil),              // 77: user_service.GetInvestorBuyStocksdata
	(*GetInvestorBuyStocksResponse)(nil),          // 78: user_service.GetInvestorBuyStocksResponse
	(*GetInvestorTokensResponse)(nil),             // 79: user_service.GetInvestorTokensResponse
	(*GetInvestorTokensRequest)(nil),              // 80: user_service.GetInvestorTokensRequest
	(*GetApplicantInfoRequest)(nil),               // 81: user_service.GetApplicantInfoRequest
	(*GetApplicantInfoResponse)(nil),              // 82: user_service.GetApplicantInfoResponse
	(*UpdateAccountFromSalesforceRequest)(nil),    // 83: user_service.UpdateAccountFromSalesforceRequest
	(*UpdateAccountFromSalesforceResponse)(nil),   // 84: user_service.UpdateAccountFromSalesforceResponse
	(*DocumentMetadata)(nil),                      // 85: user_service.DocumentMetadata
	(*empty.Empty)(nil),                           // 86: google.protobuf.Empty
	(*Account)(nil),                               // 87: user_service.Account
	(*Country)(nil),                               // 88: user_service.Country
}
var file_investor_service_proto_depIdxs = []int32{
	16, // 0: user_service.InvestorSearchWithUsernameResponse.investors:type_name -> user_service.Investors
	20, // 1: user_service.UpdateUserRequest.user:type_name -> user_service.User
	19, // 2: user_service.UpdateUserRequest.kyc:type_name -> user_service.UserKYC
	18, // 3: user_service.UpdateUserRequest.proof_of_residence:type_name -> user_service.UserProofOfResidence
	17, // 4: user_service.UpdateUserRequest.passport:type_name -> user_service.UserPassport
	26, // 5: user_service.GetCountryPhoneNumberResponse.get_phone_number:type_name -> user_service.GetPhoneNumber
	33, // 6: user_service.GetAllInvestorTokensResponse.tokens:type_name -> user_service.InvestorToken
	45, // 7: user_service.GetApplicantInfoByExternalIdResponse.personal_info:type_name -> user_service.PersonalInfo
	46, // 8: user_service.GetApplicantInfoByExternalIdResponse.address:type_name -> user_service.Address
	39, // 9: user_service.GetApplicantInfoByExternalIdResponse.investor_info:type_name -> user_service.GetInvestorResponse
	85, // 10: user_service.GetInvestorDocumentsResponse.documents:type_name -> user_service.DocumentMetadata
	45, // 11: user_service.GetInvestorResponse.personal_info:type_name -> user_service.PersonalInfo
	46, // 12: user_service.GetInvestorResponse.address:type_name -> user_service.Address
	45, // 13: user_service.SaveKycDataRequest.personal_info:type_name -> user_service.PersonalInfo
	46, // 14: user_service.SaveKycDataRequest.address:type_name -> user_service.Address
	48, // 15: user_service.FavouriteInstrumentList.instruments:type_name -> user_service.FavouriteInstrument
	70, // 16: user_service.FixOrderState.fills:type_name -> user_service.FixOrderFills
	71, // 17: user_service.PlaceOrderData.OrderState:type_name -> user_service.FixOrderState
	69, // 18: user_service.PlaceOrderData.OrderParameters:type_name -> user_service.FixOrderParameters
	72, // 19: user_service.InvestorPlaceOrderRequest.orders:type_name -> user_service.PlaceOrderData
	77, // 20: user_service.GetInvestorBuyStocksResponse.instruments:type_name -> user_service.GetInvestorBuyStocksdata
	52, // 21: user_service.InvestorService.InvestorLogin:input_type -> user_service.InvestorLoginRequest
	53, // 22: user_service.InvestorService.InvestorLoginWeb:input_type -> user_service.InvestorLoginWebRequest
	54, // 23: user_service.InvestorService.TwoFactorAutheticate:input_type -> user_service.TwoFactorAuthenticateRequest
	55, // 24: user_service.InvestorService.GetTwoFactorAutheticate:input_type -> user_service.GetTwoFactorAuthenticateRequest
	22, // 25: user_service.InvestorService.SendTwilioPhoneNumber:input_type -> user_service.SendTwilioPhoneNumberRequest
	28, // 26: user_service.InvestorService.CheckVerifivation:input_type -> user_service.CheckVerifivationRequest
	62, // 27: user_service.InvestorService.InvestorConfirmEmail:input_type -> user_service.InvestorConfirmEmailRequest
	64, // 28: user_service.InvestorService.InvestorConfirmEmailWeb:input_type -> user_service.InvestorConfirmEmailWebRequest
	81, // 29: user_service.InvestorService.GetApplicantInfo:input_type -> user_service.GetApplicantInfoRequest
	68, // 30: user_service.InvestorService.GetInvestor:input_type -> user_service.GetInvestorRequest
	35, // 31: user_service.InvestorService.GetInvestorDocuments:input_type -> user_service.GetInvestorDocumentsRequest
	21, // 32: user_service.InvestorService.UpdateUser:input_type -> user_service.UpdateUserRequest
	30, // 33: user_service.InvestorService.SaveInvestorIdentity:input_type -> user_service.SaveInvestorIdentityRequest
	31, // 34: user_service.InvestorService.EditProfile:input_type -> user_service.UpdateProfileRequest
	31, // 35: user_service.InvestorService.UpdateLanguage:input_type -> user_service.UpdateProfileRequest
	44, // 36: user_service.InvestorService.SaveKYCData:input_type -> user_service.SaveKycDataRequest
	85, // 37: user_service.InvestorService.SaveDocumentMetadata:input_type -> user_service.DocumentMetadata
	42, // 38: user_service.InvestorService.GetKycData:input_type -> user_service.GetKycDataRequest
	57, // 39: user_service.InvestorService.CreateAccount:input_type -> user_service.CreateAccountRequest
	37, // 40: user_service.InvestorService.GetAccount:input_type -> user_service.AccountID
	37, // 41: user_service.InvestorService.DeleteAccount:input_type -> user_service.AccountID
	80, // 42: user_service.InvestorService.GetInvestorTokens:input_type -> user_service.GetInvestorTokensRequest
	6,  // 43: user_service.InvestorService.GetAllInvestorTokens:input_type -> user_service.UserDetail
	50, // 44: user_service.InvestorService.AddFavouriteInstrument:input_type -> user_service.AddFavouriteInstrumentRequest
	51, // 45: user_service.InvestorService.GetFavouriteInstruments:input_type -> user_service.InvestorId
	48, // 46: user_service.InvestorService.RemoveFromFavourite:input_type -> user_service.FavouriteInstrument
	48, // 47: user_service.InvestorService.IsInstrumentFavourite:input_type -> user_service.FavouriteInstrument
	24, // 48: user_service.InvestorService.GetCountryPhoneNumber:input_type -> user_service.GetCountryPhoneNumberRequest
	23, // 49: user_service.InvestorService.SaveCountryFlag:input_type -> user_service.SaveCountryFlagRequest
	83, // 50: user_service.InvestorService.UpdateAccountFromSalesforce:input_type -> user_service.UpdateAccountFromSalesforceRequest
	83, // 51: user_service.InvestorService.UpdateRegistrationStatus:input_type -> user_service.UpdateAccountFromSalesforceRequest
	14, // 52: user_service.InvestorService.InvestorSearchWithUsername:input_type -> user_service.InvestorSearchWithUsernameRequest
	12, // 53: user_service.InvestorService.GetKycStatus:input_type -> user_service.GetKycStatusRequest
	10, // 54: user_service.InvestorService.GetSumsubRejectComment:input_type -> user_service.GetSumsubRejectCommentRequest
	8,  // 55: user_service.InvestorService.InsertCommentsFromSumsub:input_type -> user_service.SumsubCommentRequest
	7,  // 56: user_service.InvestorService.SendGmailNotification:input_type -> user_service.SendGmailNotificationRequest
	4,  // 57: user_service.InvestorService.GetInvestorRegistrationStatus:input_type -> user_service.GetInvestorRegistrationStatusRequest
	2,  // 58: user_service.InvestorService.GetInvestorPlatform:input_type -> user_service.GetInvestorPlatformRequest
	0,  // 59: user_service.InvestorService.AssignExanteAccount:input_type -> user_service.ExanteAccountRequest
	0,  // 60: user_service.InvestorService.GetExanteAccount:input_type -> user_service.ExanteAccountRequest
	58, // 61: user_service.InvestorService.InvestorLogin:output_type -> user_service.InvestorLoginResponse
	59, // 62: user_service.InvestorService.InvestorLoginWeb:output_type -> user_service.InvestorLoginWebResponse
	60, // 63: user_service.InvestorService.TwoFactorAutheticate:output_type -> user_service.TwoFactorAuthenticateResponse
	61, // 64: user_service.InvestorService.GetTwoFactorAutheticate:output_type -> user_service.GetTwoFactorAuthenticateResponse
	27, // 65: user_service.InvestorService.SendTwilioPhoneNumber:output_type -> user_service.SendTwilioPhoneNumberResponse
	29, // 66: user_service.InvestorService.CheckVerifivation:output_type -> user_service.CheckVerifivationResponse
	63, // 67: user_service.InvestorService.InvestorConfirmEmail:output_type -> user_service.InvestorConfirmEmailResponse
	65, // 68: user_service.InvestorService.InvestorConfirmEmailWeb:output_type -> user_service.InvestorConfirmEmailWebResponse
	82, // 69: user_service.InvestorService.GetApplicantInfo:output_type -> user_service.GetApplicantInfoResponse
	39, // 70: user_service.InvestorService.GetInvestor:output_type -> user_service.GetInvestorResponse
	36, // 71: user_service.InvestorService.GetInvestorDocuments:output_type -> user_service.GetInvestorDocumentsResponse
	86, // 72: user_service.InvestorService.UpdateUser:output_type -> google.protobuf.Empty
	86, // 73: user_service.InvestorService.SaveInvestorIdentity:output_type -> google.protobuf.Empty
	86, // 74: user_service.InvestorService.EditProfile:output_type -> google.protobuf.Empty
	86, // 75: user_service.InvestorService.UpdateLanguage:output_type -> google.protobuf.Empty
	86, // 76: user_service.InvestorService.SaveKYCData:output_type -> google.protobuf.Empty
	85, // 77: user_service.InvestorService.SaveDocumentMetadata:output_type -> user_service.DocumentMetadata
	43, // 78: user_service.InvestorService.GetKycData:output_type -> user_service.GetKycDataResponse
	87, // 79: user_service.InvestorService.CreateAccount:output_type -> user_service.Account
	87, // 80: user_service.InvestorService.GetAccount:output_type -> user_service.Account
	87, // 81: user_service.InvestorService.DeleteAccount:output_type -> user_service.Account
	79, // 82: user_service.InvestorService.GetInvestorTokens:output_type -> user_service.GetInvestorTokensResponse
	32, // 83: user_service.InvestorService.GetAllInvestorTokens:output_type -> user_service.GetAllInvestorTokensResponse
	48, // 84: user_service.InvestorService.AddFavouriteInstrument:output_type -> user_service.FavouriteInstrument
	49, // 85: user_service.InvestorService.GetFavouriteInstruments:output_type -> user_service.FavouriteInstrumentList
	48, // 86: user_service.InvestorService.RemoveFromFavourite:output_type -> user_service.FavouriteInstrument
	47, // 87: user_service.InvestorService.IsInstrumentFavourite:output_type -> user_service.IsInstrumentFavouriteResponse
	25, // 88: user_service.InvestorService.GetCountryPhoneNumber:output_type -> user_service.GetCountryPhoneNumberResponse
	88, // 89: user_service.InvestorService.SaveCountryFlag:output_type -> user_service.Country
	84, // 90: user_service.InvestorService.UpdateAccountFromSalesforce:output_type -> user_service.UpdateAccountFromSalesforceResponse
	84, // 91: user_service.InvestorService.UpdateRegistrationStatus:output_type -> user_service.UpdateAccountFromSalesforceResponse
	15, // 92: user_service.InvestorService.InvestorSearchWithUsername:output_type -> user_service.InvestorSearchWithUsernameResponse
	13, // 93: user_service.InvestorService.GetKycStatus:output_type -> user_service.GetKycStatusResponse
	11, // 94: user_service.InvestorService.GetSumsubRejectComment:output_type -> user_service.GetSumsubRejectCommentResponse
	9,  // 95: user_service.InvestorService.InsertCommentsFromSumsub:output_type -> user_service.SumsubCommentResponse
	86, // 96: user_service.InvestorService.SendGmailNotification:output_type -> google.protobuf.Empty
	5,  // 97: user_service.InvestorService.GetInvestorRegistrationStatus:output_type -> user_service.GetInvestorRegistrationStatusResponse
	3,  // 98: user_service.InvestorService.GetInvestorPlatform:output_type -> user_service.GetInvestorPlatformResponse
	1,  // 99: user_service.InvestorService.AssignExanteAccount:output_type -> user_service.ExanteAccountResponse
	1,  // 100: user_service.InvestorService.GetExanteAccount:output_type -> user_service.ExanteAccountResponse
	61, // [61:101] is the sub-list for method output_type
	21, // [21:61] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_investor_service_proto_init() }
func file_investor_service_proto_init() {
	if File_investor_service_proto != nil {
		return
	}
	file_investor_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_investor_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExanteAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExanteAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInvestorPlatformRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInvestorPlatformResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInvestorRegistrationStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInvestorRegistrationStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendGmailNotificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SumsubCommentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SumsubCommentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSumsubRejectCommentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSumsubRejectCommentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKycStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKycStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvestorSearchWithUsernameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvestorSearchWithUsernameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Investors); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPassport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserProofOfResidence); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserKYC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendTwilioPhoneNumberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveCountryFlagRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCountryPhoneNumberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCountryPhoneNumberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPhoneNumber); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendTwilioPhoneNumberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckVerifivationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckVerifivationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveInvestorIdentityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllInvestorTokensResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvestorToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetApplicantInfoByExternalIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInvestorDocumentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInvestorDocumentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicantID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInvestorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateInvestorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReviewResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKycDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKycDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveKycDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PersonalInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsInstrumentFavouriteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FavouriteInstrument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FavouriteInstrumentList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFavouriteInstrumentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvestorId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvestorLoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvestorLoginWebRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TwoFactorAuthenticateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTwoFactorAuthenticateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeactivateAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvestorLoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvestorLoginWebResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TwoFactorAuthenticateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTwoFactorAuthenticateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvestorConfirmEmailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvestorConfirmEmailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvestorConfirmEmailWebRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvestorConfirmEmailWebResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvestorPersonalDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvestorPersonalDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInvestorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FixOrderParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FixOrderFills); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FixOrderState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlaceOrderData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvestorPlaceOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInvestStockByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInvestStockByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInvestorBuyStocksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInvestorBuyStocksdata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInvestorBuyStocksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInvestorTokensResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInvestorTokensRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetApplicantInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetApplicantInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAccountFromSalesforceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_investor_service_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAccountFromSalesforceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_investor_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   85,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_investor_service_proto_goTypes,
		DependencyIndexes: file_investor_service_proto_depIdxs,
		MessageInfos:      file_investor_service_proto_msgTypes,
	}.Build()
	File_investor_service_proto = out.File
	file_investor_service_proto_rawDesc = nil
	file_investor_service_proto_goTypes = nil
	file_investor_service_proto_depIdxs = nil
}

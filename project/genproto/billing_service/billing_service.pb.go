// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.6.1
// source: billing_service.proto

package billing_service

import (
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateMainGrapData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvestorId string `protobuf:"bytes,1,opt,name=investor_id,json=investorId,proto3" json:"investor_id,omitempty"`
	Taum       string `protobuf:"bytes,2,opt,name=taum,proto3" json:"taum,omitempty"`
	Name       string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	SymbolId   string `protobuf:"bytes,4,opt,name=symbol_id,json=symbolId,proto3" json:"symbol_id,omitempty"`
}

func (x *CreateMainGrapData) Reset() {
	*x = CreateMainGrapData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMainGrapData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMainGrapData) ProtoMessage() {}

func (x *CreateMainGrapData) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMainGrapData.ProtoReflect.Descriptor instead.
func (*CreateMainGrapData) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateMainGrapData) GetInvestorId() string {
	if x != nil {
		return x.InvestorId
	}
	return ""
}

func (x *CreateMainGrapData) GetTaum() string {
	if x != nil {
		return x.Taum
	}
	return ""
}

func (x *CreateMainGrapData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateMainGrapData) GetSymbolId() string {
	if x != nil {
		return x.SymbolId
	}
	return ""
}

type CreateMainGraphRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*CreateMainGrapData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateMainGraphRequest) Reset() {
	*x = CreateMainGraphRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMainGraphRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMainGraphRequest) ProtoMessage() {}

func (x *CreateMainGraphRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMainGraphRequest.ProtoReflect.Descriptor instead.
func (*CreateMainGraphRequest) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateMainGraphRequest) GetData() []*CreateMainGrapData {
	if x != nil {
		return x.Data
	}
	return nil
}

type InvestorBillingDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvestorId        string `protobuf:"bytes,1,opt,name=investor_id,json=investorId,proto3" json:"investor_id,omitempty"`
	RequestedCurrency string `protobuf:"bytes,2,opt,name=requested_currency,json=requestedCurrency,proto3" json:"requested_currency,omitempty"`
}

func (x *InvestorBillingDataRequest) Reset() {
	*x = InvestorBillingDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvestorBillingDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvestorBillingDataRequest) ProtoMessage() {}

func (x *InvestorBillingDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvestorBillingDataRequest.ProtoReflect.Descriptor instead.
func (*InvestorBillingDataRequest) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{2}
}

func (x *InvestorBillingDataRequest) GetInvestorId() string {
	if x != nil {
		return x.InvestorId
	}
	return ""
}

func (x *InvestorBillingDataRequest) GetRequestedCurrency() string {
	if x != nil {
		return x.RequestedCurrency
	}
	return ""
}

type InvestorBillingDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pockets []*InvestorPockets `protobuf:"bytes,1,rep,name=pockets,proto3" json:"pockets,omitempty"`
}

func (x *InvestorBillingDataResponse) Reset() {
	*x = InvestorBillingDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvestorBillingDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvestorBillingDataResponse) ProtoMessage() {}

func (x *InvestorBillingDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvestorBillingDataResponse.ProtoReflect.Descriptor instead.
func (*InvestorBillingDataResponse) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{3}
}

func (x *InvestorBillingDataResponse) GetPockets() []*InvestorPockets {
	if x != nil {
		return x.Pockets
	}
	return nil
}

type InvestorPockets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PocketId    string                 `protobuf:"bytes,1,opt,name=pocket_id,json=pocketId,proto3" json:"pocket_id,omitempty"`
	Instruments []*InvestorInstruments `protobuf:"bytes,2,rep,name=instruments,proto3" json:"instruments,omitempty"`
}

func (x *InvestorPockets) Reset() {
	*x = InvestorPockets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvestorPockets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvestorPockets) ProtoMessage() {}

func (x *InvestorPockets) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvestorPockets.ProtoReflect.Descriptor instead.
func (*InvestorPockets) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{4}
}

func (x *InvestorPockets) GetPocketId() string {
	if x != nil {
		return x.PocketId
	}
	return ""
}

func (x *InvestorPockets) GetInstruments() []*InvestorInstruments {
	if x != nil {
		return x.Instruments
	}
	return nil
}

type InvestorInstruments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvgPrice       float64 `protobuf:"fixed64,1,opt,name=avg_price,json=avgPrice,proto3" json:"avg_price,omitempty"`
	SymbolId       string  `protobuf:"bytes,2,opt,name=symbol_id,json=symbolId,proto3" json:"symbol_id,omitempty"`
	PurchasedCount int32   `protobuf:"varint,3,opt,name=purchased_count,json=purchasedCount,proto3" json:"purchased_count,omitempty"`
	SellableCount  int32   `protobuf:"varint,4,opt,name=sellable_count,json=sellableCount,proto3" json:"sellable_count,omitempty"`
}

func (x *InvestorInstruments) Reset() {
	*x = InvestorInstruments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvestorInstruments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvestorInstruments) ProtoMessage() {}

func (x *InvestorInstruments) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvestorInstruments.ProtoReflect.Descriptor instead.
func (*InvestorInstruments) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{5}
}

func (x *InvestorInstruments) GetAvgPrice() float64 {
	if x != nil {
		return x.AvgPrice
	}
	return 0
}

func (x *InvestorInstruments) GetSymbolId() string {
	if x != nil {
		return x.SymbolId
	}
	return ""
}

func (x *InvestorInstruments) GetPurchasedCount() int32 {
	if x != nil {
		return x.PurchasedCount
	}
	return 0
}

func (x *InvestorInstruments) GetSellableCount() int32 {
	if x != nil {
		return x.SellableCount
	}
	return 0
}

type UpsertPartnerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Amount      float64 `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
	PartnerType string  `protobuf:"bytes,4,opt,name=partner_type,json=partnerType,proto3" json:"partner_type,omitempty"`
	UserType    string  `protobuf:"bytes,5,opt,name=user_type,json=userType,proto3" json:"user_type,omitempty"`
}

func (x *UpsertPartnerRequest) Reset() {
	*x = UpsertPartnerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertPartnerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertPartnerRequest) ProtoMessage() {}

func (x *UpsertPartnerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertPartnerRequest.ProtoReflect.Descriptor instead.
func (*UpsertPartnerRequest) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{6}
}

func (x *UpsertPartnerRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpsertPartnerRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpsertPartnerRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *UpsertPartnerRequest) GetPartnerType() string {
	if x != nil {
		return x.PartnerType
	}
	return ""
}

func (x *UpsertPartnerRequest) GetUserType() string {
	if x != nil {
		return x.UserType
	}
	return ""
}

type UpsertBrokerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	LegalAddrress string  `protobuf:"bytes,3,opt,name=legal_addrress,json=legalAddrress,proto3" json:"legal_addrress,omitempty"`
	Amount        float64 `protobuf:"fixed64,4,opt,name=amount,proto3" json:"amount,omitempty"`
	BrokerType    string  `protobuf:"bytes,5,opt,name=broker_type,json=brokerType,proto3" json:"broker_type,omitempty"`
}

func (x *UpsertBrokerRequest) Reset() {
	*x = UpsertBrokerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertBrokerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertBrokerRequest) ProtoMessage() {}

func (x *UpsertBrokerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertBrokerRequest.ProtoReflect.Descriptor instead.
func (*UpsertBrokerRequest) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{7}
}

func (x *UpsertBrokerRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpsertBrokerRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpsertBrokerRequest) GetLegalAddrress() string {
	if x != nil {
		return x.LegalAddrress
	}
	return ""
}

func (x *UpsertBrokerRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *UpsertBrokerRequest) GetBrokerType() string {
	if x != nil {
		return x.BrokerType
	}
	return ""
}

type GetPocketsDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetPocketsDataRequest) Reset() {
	*x = GetPocketsDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPocketsDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPocketsDataRequest) ProtoMessage() {}

func (x *GetPocketsDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPocketsDataRequest.ProtoReflect.Descriptor instead.
func (*GetPocketsDataRequest) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetPocketsDataRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetPocketsDataBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PocketId     string `protobuf:"bytes,1,opt,name=pocket_id,json=pocketId,proto3" json:"pocket_id,omitempty"`
	SalesforceId string `protobuf:"bytes,2,opt,name=salesforce_id,json=salesforceId,proto3" json:"salesforce_id,omitempty"`
	Type         string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *GetPocketsDataBody) Reset() {
	*x = GetPocketsDataBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPocketsDataBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPocketsDataBody) ProtoMessage() {}

func (x *GetPocketsDataBody) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPocketsDataBody.ProtoReflect.Descriptor instead.
func (*GetPocketsDataBody) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetPocketsDataBody) GetPocketId() string {
	if x != nil {
		return x.PocketId
	}
	return ""
}

func (x *GetPocketsDataBody) GetSalesforceId() string {
	if x != nil {
		return x.SalesforceId
	}
	return ""
}

func (x *GetPocketsDataBody) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type GetPocketsDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pockets []*GetPocketsDataBody `protobuf:"bytes,1,rep,name=pockets,proto3" json:"pockets,omitempty"`
}

func (x *GetPocketsDataResponse) Reset() {
	*x = GetPocketsDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPocketsDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPocketsDataResponse) ProtoMessage() {}

func (x *GetPocketsDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPocketsDataResponse.ProtoReflect.Descriptor instead.
func (*GetPocketsDataResponse) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{10}
}

func (x *GetPocketsDataResponse) GetPockets() []*GetPocketsDataBody {
	if x != nil {
		return x.Pockets
	}
	return nil
}

type CalculateGrowthPercentageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PocketId string `protobuf:"bytes,2,opt,name=pocket_id,json=pocketId,proto3" json:"pocket_id,omitempty"`
}

func (x *CalculateGrowthPercentageRequest) Reset() {
	*x = CalculateGrowthPercentageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculateGrowthPercentageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateGrowthPercentageRequest) ProtoMessage() {}

func (x *CalculateGrowthPercentageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateGrowthPercentageRequest.ProtoReflect.Descriptor instead.
func (*CalculateGrowthPercentageRequest) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{11}
}

func (x *CalculateGrowthPercentageRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CalculateGrowthPercentageRequest) GetPocketId() string {
	if x != nil {
		return x.PocketId
	}
	return ""
}

type CalculateGrowthPercentageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GrowthPercentage float64 `protobuf:"fixed64,1,opt,name=growth_percentage,json=growthPercentage,proto3" json:"growth_percentage,omitempty"`
	DifferenceAmount float64 `protobuf:"fixed64,2,opt,name=difference_amount,json=differenceAmount,proto3" json:"difference_amount,omitempty"`
	Count            int64   `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CalculateGrowthPercentageResponse) Reset() {
	*x = CalculateGrowthPercentageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculateGrowthPercentageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateGrowthPercentageResponse) ProtoMessage() {}

func (x *CalculateGrowthPercentageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateGrowthPercentageResponse.ProtoReflect.Descriptor instead.
func (*CalculateGrowthPercentageResponse) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{12}
}

func (x *CalculateGrowthPercentageResponse) GetGrowthPercentage() float64 {
	if x != nil {
		return x.GrowthPercentage
	}
	return 0
}

func (x *CalculateGrowthPercentageResponse) GetDifferenceAmount() float64 {
	if x != nil {
		return x.DifferenceAmount
	}
	return 0
}

func (x *CalculateGrowthPercentageResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type CalculatePercentageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GrowthPercentage float64 `protobuf:"fixed64,1,opt,name=growth_percentage,json=growthPercentage,proto3" json:"growth_percentage,omitempty"`
	DifferenceAmount float64 `protobuf:"fixed64,2,opt,name=difference_amount,json=differenceAmount,proto3" json:"difference_amount,omitempty"`
	Id               string  `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Name             string  `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Ticker           string  `protobuf:"bytes,5,opt,name=ticker,proto3" json:"ticker,omitempty"`
	Icon             string  `protobuf:"bytes,6,opt,name=icon,proto3" json:"icon,omitempty"`
}

func (x *CalculatePercentageResponse) Reset() {
	*x = CalculatePercentageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculatePercentageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculatePercentageResponse) ProtoMessage() {}

func (x *CalculatePercentageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculatePercentageResponse.ProtoReflect.Descriptor instead.
func (*CalculatePercentageResponse) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{13}
}

func (x *CalculatePercentageResponse) GetGrowthPercentage() float64 {
	if x != nil {
		return x.GrowthPercentage
	}
	return 0
}

func (x *CalculatePercentageResponse) GetDifferenceAmount() float64 {
	if x != nil {
		return x.DifferenceAmount
	}
	return 0
}

func (x *CalculatePercentageResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CalculatePercentageResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CalculatePercentageResponse) GetTicker() string {
	if x != nil {
		return x.Ticker
	}
	return ""
}

func (x *CalculatePercentageResponse) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

type CalculatePercentageResponseBySymbol struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbols map[string]*CalculatePercentageResponse `protobuf:"bytes,1,rep,name=symbols,proto3" json:"symbols,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CalculatePercentageResponseBySymbol) Reset() {
	*x = CalculatePercentageResponseBySymbol{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculatePercentageResponseBySymbol) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculatePercentageResponseBySymbol) ProtoMessage() {}

func (x *CalculatePercentageResponseBySymbol) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculatePercentageResponseBySymbol.ProtoReflect.Descriptor instead.
func (*CalculatePercentageResponseBySymbol) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{14}
}

func (x *CalculatePercentageResponseBySymbol) GetSymbols() map[string]*CalculatePercentageResponse {
	if x != nil {
		return x.Symbols
	}
	return nil
}

type CalculateGrowthPercentageResponseBySymbol struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbols map[string]*CalculateGrowthPercentageResponse `protobuf:"bytes,1,rep,name=symbols,proto3" json:"symbols,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CalculateGrowthPercentageResponseBySymbol) Reset() {
	*x = CalculateGrowthPercentageResponseBySymbol{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculateGrowthPercentageResponseBySymbol) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateGrowthPercentageResponseBySymbol) ProtoMessage() {}

func (x *CalculateGrowthPercentageResponseBySymbol) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateGrowthPercentageResponseBySymbol.ProtoReflect.Descriptor instead.
func (*CalculateGrowthPercentageResponseBySymbol) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{15}
}

func (x *CalculateGrowthPercentageResponseBySymbol) GetSymbols() map[string]*CalculateGrowthPercentageResponse {
	if x != nil {
		return x.Symbols
	}
	return nil
}

type UpdateUserStockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
}

func (x *UpdateUserStockRequest) Reset() {
	*x = UpdateUserStockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserStockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserStockRequest) ProtoMessage() {}

func (x *UpdateUserStockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserStockRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserStockRequest) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateUserStockRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type TestGetLastQuoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SymbolIds []string `protobuf:"bytes,1,rep,name=symbol_ids,json=symbolIds,proto3" json:"symbol_ids,omitempty"`
}

func (x *TestGetLastQuoteRequest) Reset() {
	*x = TestGetLastQuoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestGetLastQuoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestGetLastQuoteRequest) ProtoMessage() {}

func (x *TestGetLastQuoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestGetLastQuoteRequest.ProtoReflect.Descriptor instead.
func (*TestGetLastQuoteRequest) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{17}
}

func (x *TestGetLastQuoteRequest) GetSymbolIds() []string {
	if x != nil {
		return x.SymbolIds
	}
	return nil
}

type TestGetLastQuoteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Quotes []*Quote `protobuf:"bytes,1,rep,name=quotes,proto3" json:"quotes,omitempty"`
}

func (x *TestGetLastQuoteResponse) Reset() {
	*x = TestGetLastQuoteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestGetLastQuoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestGetLastQuoteResponse) ProtoMessage() {}

func (x *TestGetLastQuoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestGetLastQuoteResponse.ProtoReflect.Descriptor instead.
func (*TestGetLastQuoteResponse) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{18}
}

func (x *TestGetLastQuoteResponse) GetQuotes() []*Quote {
	if x != nil {
		return x.Quotes
	}
	return nil
}

type GetPocketSalesforceIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromPocketId string `protobuf:"bytes,1,opt,name=from_pocket_id,json=fromPocketId,proto3" json:"from_pocket_id,omitempty"`
	ToPocketId   string `protobuf:"bytes,2,opt,name=to_pocket_id,json=toPocketId,proto3" json:"to_pocket_id,omitempty"`
}

func (x *GetPocketSalesforceIdRequest) Reset() {
	*x = GetPocketSalesforceIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPocketSalesforceIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPocketSalesforceIdRequest) ProtoMessage() {}

func (x *GetPocketSalesforceIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPocketSalesforceIdRequest.ProtoReflect.Descriptor instead.
func (*GetPocketSalesforceIdRequest) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{19}
}

func (x *GetPocketSalesforceIdRequest) GetFromPocketId() string {
	if x != nil {
		return x.FromPocketId
	}
	return ""
}

func (x *GetPocketSalesforceIdRequest) GetToPocketId() string {
	if x != nil {
		return x.ToPocketId
	}
	return ""
}

type GetPocketSalesforceId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PocketSalesforceId string `protobuf:"bytes,1,opt,name=pocket_salesforce_id,json=pocketSalesforceId,proto3" json:"pocket_salesforce_id,omitempty"`
	PocketId           string `protobuf:"bytes,2,opt,name=pocket_id,json=pocketId,proto3" json:"pocket_id,omitempty"`
}

func (x *GetPocketSalesforceId) Reset() {
	*x = GetPocketSalesforceId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPocketSalesforceId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPocketSalesforceId) ProtoMessage() {}

func (x *GetPocketSalesforceId) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPocketSalesforceId.ProtoReflect.Descriptor instead.
func (*GetPocketSalesforceId) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{20}
}

func (x *GetPocketSalesforceId) GetPocketSalesforceId() string {
	if x != nil {
		return x.PocketSalesforceId
	}
	return ""
}

func (x *GetPocketSalesforceId) GetPocketId() string {
	if x != nil {
		return x.PocketId
	}
	return ""
}

type GetPocketSalesforceIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response []*GetPocketSalesforceId `protobuf:"bytes,1,rep,name=response,proto3" json:"response,omitempty"`
	UserId   string                   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetPocketSalesforceIdResponse) Reset() {
	*x = GetPocketSalesforceIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPocketSalesforceIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPocketSalesforceIdResponse) ProtoMessage() {}

func (x *GetPocketSalesforceIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPocketSalesforceIdResponse.ProtoReflect.Descriptor instead.
func (*GetPocketSalesforceIdResponse) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{21}
}

func (x *GetPocketSalesforceIdResponse) GetResponse() []*GetPocketSalesforceId {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *GetPocketSalesforceIdResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetWithdrawalAmountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId            string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RequestedCurrency string `protobuf:"bytes,2,opt,name=requested_currency,json=requestedCurrency,proto3" json:"requested_currency,omitempty"`
}

func (x *GetWithdrawalAmountRequest) Reset() {
	*x = GetWithdrawalAmountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWithdrawalAmountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWithdrawalAmountRequest) ProtoMessage() {}

func (x *GetWithdrawalAmountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWithdrawalAmountRequest.ProtoReflect.Descriptor instead.
func (*GetWithdrawalAmountRequest) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{22}
}

func (x *GetWithdrawalAmountRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetWithdrawalAmountRequest) GetRequestedCurrency() string {
	if x != nil {
		return x.RequestedCurrency
	}
	return ""
}

type GetWithdrawalAmountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WithdrawalAmount float64 `protobuf:"fixed64,1,opt,name=withdrawal_amount,json=withdrawalAmount,proto3" json:"withdrawal_amount,omitempty"`
}

func (x *GetWithdrawalAmountResponse) Reset() {
	*x = GetWithdrawalAmountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWithdrawalAmountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWithdrawalAmountResponse) ProtoMessage() {}

func (x *GetWithdrawalAmountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWithdrawalAmountResponse.ProtoReflect.Descriptor instead.
func (*GetWithdrawalAmountResponse) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{23}
}

func (x *GetWithdrawalAmountResponse) GetWithdrawalAmount() float64 {
	if x != nil {
		return x.WithdrawalAmount
	}
	return 0
}

type GetMainGraphDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvestorId string `protobuf:"bytes,1,opt,name=investor_id,json=investorId,proto3" json:"investor_id,omitempty"`
	Period     string `protobuf:"bytes,2,opt,name=period,proto3" json:"period,omitempty"`
	PocketId   string `protobuf:"bytes,3,opt,name=pocket_id,json=pocketId,proto3" json:"pocket_id,omitempty"`
}

func (x *GetMainGraphDataRequest) Reset() {
	*x = GetMainGraphDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMainGraphDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMainGraphDataRequest) ProtoMessage() {}

func (x *GetMainGraphDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMainGraphDataRequest.ProtoReflect.Descriptor instead.
func (*GetMainGraphDataRequest) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{24}
}

func (x *GetMainGraphDataRequest) GetInvestorId() string {
	if x != nil {
		return x.InvestorId
	}
	return ""
}

func (x *GetMainGraphDataRequest) GetPeriod() string {
	if x != nil {
		return x.Period
	}
	return ""
}

func (x *GetMainGraphDataRequest) GetPocketId() string {
	if x != nil {
		return x.PocketId
	}
	return ""
}

type GetMainGraphRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvestorId string `protobuf:"bytes,1,opt,name=investor_id,json=investorId,proto3" json:"investor_id,omitempty"`
	Period     string `protobuf:"bytes,2,opt,name=period,proto3" json:"period,omitempty"`
}

func (x *GetMainGraphRequest) Reset() {
	*x = GetMainGraphRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMainGraphRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMainGraphRequest) ProtoMessage() {}

func (x *GetMainGraphRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMainGraphRequest.ProtoReflect.Descriptor instead.
func (*GetMainGraphRequest) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{25}
}

func (x *GetMainGraphRequest) GetInvestorId() string {
	if x != nil {
		return x.InvestorId
	}
	return ""
}

func (x *GetMainGraphRequest) GetPeriod() string {
	if x != nil {
		return x.Period
	}
	return ""
}

type GetMainGraphData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Taum      float64 `protobuf:"fixed64,1,opt,name=taum,proto3" json:"taum,omitempty"`
	CreatedAt string  `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UnixTime  int64   `protobuf:"varint,3,opt,name=unix_time,json=unixTime,proto3" json:"unix_time,omitempty"`
	Inter     string  `protobuf:"bytes,4,opt,name=inter,proto3" json:"inter,omitempty"`
}

func (x *GetMainGraphData) Reset() {
	*x = GetMainGraphData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMainGraphData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMainGraphData) ProtoMessage() {}

func (x *GetMainGraphData) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMainGraphData.ProtoReflect.Descriptor instead.
func (*GetMainGraphData) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{26}
}

func (x *GetMainGraphData) GetTaum() float64 {
	if x != nil {
		return x.Taum
	}
	return 0
}

func (x *GetMainGraphData) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *GetMainGraphData) GetUnixTime() int64 {
	if x != nil {
		return x.UnixTime
	}
	return 0
}

func (x *GetMainGraphData) GetInter() string {
	if x != nil {
		return x.Inter
	}
	return ""
}

type GetMainGraphDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*GetMainGraphData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetMainGraphDataResponse) Reset() {
	*x = GetMainGraphDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMainGraphDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMainGraphDataResponse) ProtoMessage() {}

func (x *GetMainGraphDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMainGraphDataResponse.ProtoReflect.Descriptor instead.
func (*GetMainGraphDataResponse) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{27}
}

func (x *GetMainGraphDataResponse) GetData() []*GetMainGraphData {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetMainGraph struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Range string                                   `protobuf:"bytes,1,opt,name=range,proto3" json:"range,omitempty"`
	Data  map[string]*GetInstrumentHistoryResponse `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetMainGraph) Reset() {
	*x = GetMainGraph{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMainGraph) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMainGraph) ProtoMessage() {}

func (x *GetMainGraph) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMainGraph.ProtoReflect.Descriptor instead.
func (*GetMainGraph) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{28}
}

func (x *GetMainGraph) GetRange() string {
	if x != nil {
		return x.Range
	}
	return ""
}

func (x *GetMainGraph) GetData() map[string]*GetInstrumentHistoryResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetMainGraphResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*GetMainGraph `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetMainGraphResponse) Reset() {
	*x = GetMainGraphResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMainGraphResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMainGraphResponse) ProtoMessage() {}

func (x *GetMainGraphResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMainGraphResponse.ProtoReflect.Descriptor instead.
func (*GetMainGraphResponse) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{29}
}

func (x *GetMainGraphResponse) GetList() []*GetMainGraph {
	if x != nil {
		return x.List
	}
	return nil
}

type GetInstrumentHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instruments []*InstrumentHistory `protobuf:"bytes,1,rep,name=instruments,proto3" json:"instruments,omitempty"`
}

func (x *GetInstrumentHistoryResponse) Reset() {
	*x = GetInstrumentHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInstrumentHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstrumentHistoryResponse) ProtoMessage() {}

func (x *GetInstrumentHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInstrumentHistoryResponse.ProtoReflect.Descriptor instead.
func (*GetInstrumentHistoryResponse) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{30}
}

func (x *GetInstrumentHistoryResponse) GetInstruments() []*InstrumentHistory {
	if x != nil {
		return x.Instruments
	}
	return nil
}

type InstrumentHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SymbolId  string `protobuf:"bytes,1,opt,name=symbol_id,json=symbolId,proto3" json:"symbol_id,omitempty"`
	Timestamp int64  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Open      string `protobuf:"bytes,3,opt,name=open,proto3" json:"open,omitempty"`
	Close     string `protobuf:"bytes,4,opt,name=close,proto3" json:"close,omitempty"`
	High      string `protobuf:"bytes,5,opt,name=high,proto3" json:"high,omitempty"`
	Low       string `protobuf:"bytes,6,opt,name=low,proto3" json:"low,omitempty"`
	Volume    string `protobuf:"bytes,7,opt,name=volume,proto3" json:"volume,omitempty"`
	CreatedAt string `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *InstrumentHistory) Reset() {
	*x = InstrumentHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstrumentHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstrumentHistory) ProtoMessage() {}

func (x *InstrumentHistory) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstrumentHistory.ProtoReflect.Descriptor instead.
func (*InstrumentHistory) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{31}
}

func (x *InstrumentHistory) GetSymbolId() string {
	if x != nil {
		return x.SymbolId
	}
	return ""
}

func (x *InstrumentHistory) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *InstrumentHistory) GetOpen() string {
	if x != nil {
		return x.Open
	}
	return ""
}

func (x *InstrumentHistory) GetClose() string {
	if x != nil {
		return x.Close
	}
	return ""
}

func (x *InstrumentHistory) GetHigh() string {
	if x != nil {
		return x.High
	}
	return ""
}

func (x *InstrumentHistory) GetLow() string {
	if x != nil {
		return x.Low
	}
	return ""
}

func (x *InstrumentHistory) GetVolume() string {
	if x != nil {
		return x.Volume
	}
	return ""
}

func (x *InstrumentHistory) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type Quote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SymbolId string `protobuf:"bytes,1,opt,name=symbol_id,json=symbolId,proto3" json:"symbol_id,omitempty"`
	Price    string `protobuf:"bytes,2,opt,name=price,proto3" json:"price,omitempty"`
	Size     string `protobuf:"bytes,3,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *Quote) Reset() {
	*x = Quote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Quote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Quote) ProtoMessage() {}

func (x *Quote) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Quote.ProtoReflect.Descriptor instead.
func (*Quote) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{32}
}

func (x *Quote) GetSymbolId() string {
	if x != nil {
		return x.SymbolId
	}
	return ""
}

func (x *Quote) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *Quote) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

type GetCountOfInstrumentsInTransitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SymbolId   string `protobuf:"bytes,1,opt,name=symbol_id,json=symbolId,proto3" json:"symbol_id,omitempty"`
	InvestorId string `protobuf:"bytes,2,opt,name=investor_id,json=investorId,proto3" json:"investor_id,omitempty"`
}

func (x *GetCountOfInstrumentsInTransitRequest) Reset() {
	*x = GetCountOfInstrumentsInTransitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCountOfInstrumentsInTransitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCountOfInstrumentsInTransitRequest) ProtoMessage() {}

func (x *GetCountOfInstrumentsInTransitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCountOfInstrumentsInTransitRequest.ProtoReflect.Descriptor instead.
func (*GetCountOfInstrumentsInTransitRequest) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{33}
}

func (x *GetCountOfInstrumentsInTransitRequest) GetSymbolId() string {
	if x != nil {
		return x.SymbolId
	}
	return ""
}

func (x *GetCountOfInstrumentsInTransitRequest) GetInvestorId() string {
	if x != nil {
		return x.InvestorId
	}
	return ""
}

type GetTransitCurrenciesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Currency string `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
}

func (x *GetTransitCurrenciesRequest) Reset() {
	*x = GetTransitCurrenciesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransitCurrenciesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransitCurrenciesRequest) ProtoMessage() {}

func (x *GetTransitCurrenciesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransitCurrenciesRequest.ProtoReflect.Descriptor instead.
func (*GetTransitCurrenciesRequest) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{34}
}

func (x *GetTransitCurrenciesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetTransitCurrenciesRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

type TransitAmounts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currency string  `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	Amount   float64 `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *TransitAmounts) Reset() {
	*x = TransitAmounts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransitAmounts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransitAmounts) ProtoMessage() {}

func (x *TransitAmounts) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransitAmounts.ProtoReflect.Descriptor instead.
func (*TransitAmounts) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{35}
}

func (x *TransitAmounts) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *TransitAmounts) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type GetTransitCurrenciesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalAmount float64           `protobuf:"fixed64,1,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount,omitempty"`
	Balances    []*TransitAmounts `protobuf:"bytes,2,rep,name=balances,proto3" json:"balances,omitempty"`
}

func (x *GetTransitCurrenciesResponse) Reset() {
	*x = GetTransitCurrenciesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransitCurrenciesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransitCurrenciesResponse) ProtoMessage() {}

func (x *GetTransitCurrenciesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransitCurrenciesResponse.ProtoReflect.Descriptor instead.
func (*GetTransitCurrenciesResponse) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{36}
}

func (x *GetTransitCurrenciesResponse) GetTotalAmount() float64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *GetTransitCurrenciesResponse) GetBalances() []*TransitAmounts {
	if x != nil {
		return x.Balances
	}
	return nil
}

type GetCountOfInstrumentsInTransitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetCountOfInstrumentsInTransitResponse) Reset() {
	*x = GetCountOfInstrumentsInTransitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCountOfInstrumentsInTransitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCountOfInstrumentsInTransitResponse) ProtoMessage() {}

func (x *GetCountOfInstrumentsInTransitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCountOfInstrumentsInTransitResponse.ProtoReflect.Descriptor instead.
func (*GetCountOfInstrumentsInTransitResponse) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{37}
}

func (x *GetCountOfInstrumentsInTransitResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetTransactionById struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ParentId       int64  `protobuf:"varint,2,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	Comment        string `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
	UserId         string `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	OperationId    string `protobuf:"bytes,5,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
	Amount         int64  `protobuf:"varint,6,opt,name=amount,proto3" json:"amount,omitempty"`
	Currency       string `protobuf:"bytes,7,opt,name=currency,proto3" json:"currency,omitempty"`
	Status         string `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt      string `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt      string `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	OrderId        string `protobuf:"bytes,11,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	BankAccount    string `protobuf:"bytes,12,opt,name=bank_account,json=bankAccount,proto3" json:"bank_account,omitempty"`
	SalesforceId   string `protobuf:"bytes,13,opt,name=salesforce_id,json=salesforceId,proto3" json:"salesforce_id,omitempty"`
	FuturePocketId int64  `protobuf:"varint,14,opt,name=future_pocket_id,json=futurePocketId,proto3" json:"future_pocket_id,omitempty"`
	TextAmount     string `protobuf:"bytes,15,opt,name=text_amount,json=textAmount,proto3" json:"text_amount,omitempty"`
	PocketId       int64  `protobuf:"varint,16,opt,name=pocket_id,json=pocketId,proto3" json:"pocket_id,omitempty"`
}

func (x *GetTransactionById) Reset() {
	*x = GetTransactionById{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionById) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionById) ProtoMessage() {}

func (x *GetTransactionById) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionById.ProtoReflect.Descriptor instead.
func (*GetTransactionById) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{38}
}

func (x *GetTransactionById) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetTransactionById) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *GetTransactionById) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *GetTransactionById) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetTransactionById) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

func (x *GetTransactionById) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *GetTransactionById) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *GetTransactionById) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetTransactionById) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *GetTransactionById) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *GetTransactionById) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *GetTransactionById) GetBankAccount() string {
	if x != nil {
		return x.BankAccount
	}
	return ""
}

func (x *GetTransactionById) GetSalesforceId() string {
	if x != nil {
		return x.SalesforceId
	}
	return ""
}

func (x *GetTransactionById) GetFuturePocketId() int64 {
	if x != nil {
		return x.FuturePocketId
	}
	return 0
}

func (x *GetTransactionById) GetTextAmount() string {
	if x != nil {
		return x.TextAmount
	}
	return ""
}

func (x *GetTransactionById) GetPocketId() int64 {
	if x != nil {
		return x.PocketId
	}
	return 0
}

type GetTransactionByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PocketId string `protobuf:"bytes,1,opt,name=pocket_id,json=pocketId,proto3" json:"pocket_id,omitempty"`
}

func (x *GetTransactionByIdRequest) Reset() {
	*x = GetTransactionByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionByIdRequest) ProtoMessage() {}

func (x *GetTransactionByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionByIdRequest.ProtoReflect.Descriptor instead.
func (*GetTransactionByIdRequest) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{39}
}

func (x *GetTransactionByIdRequest) GetPocketId() string {
	if x != nil {
		return x.PocketId
	}
	return ""
}

type GetTransactionByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transactions []*GetTransactionById `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
}

func (x *GetTransactionByIdResponse) Reset() {
	*x = GetTransactionByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionByIdResponse) ProtoMessage() {}

func (x *GetTransactionByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionByIdResponse.ProtoReflect.Descriptor instead.
func (*GetTransactionByIdResponse) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{40}
}

func (x *GetTransactionByIdResponse) GetTransactions() []*GetTransactionById {
	if x != nil {
		return x.Transactions
	}
	return nil
}

type GetAveragePriceOfSymbolsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PocketId string `protobuf:"bytes,2,opt,name=pocket_id,json=pocketId,proto3" json:"pocket_id,omitempty"`
}

func (x *GetAveragePriceOfSymbolsRequest) Reset() {
	*x = GetAveragePriceOfSymbolsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAveragePriceOfSymbolsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAveragePriceOfSymbolsRequest) ProtoMessage() {}

func (x *GetAveragePriceOfSymbolsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAveragePriceOfSymbolsRequest.ProtoReflect.Descriptor instead.
func (*GetAveragePriceOfSymbolsRequest) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{41}
}

func (x *GetAveragePriceOfSymbolsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetAveragePriceOfSymbolsRequest) GetPocketId() string {
	if x != nil {
		return x.PocketId
	}
	return ""
}

type AverageSymbolPrice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SymbolCount  int32   `protobuf:"varint,1,opt,name=symbol_count,json=symbolCount,proto3" json:"symbol_count,omitempty"`
	AveragePrice float64 `protobuf:"fixed64,2,opt,name=average_price,json=averagePrice,proto3" json:"average_price,omitempty"`
}

func (x *AverageSymbolPrice) Reset() {
	*x = AverageSymbolPrice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AverageSymbolPrice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AverageSymbolPrice) ProtoMessage() {}

func (x *AverageSymbolPrice) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AverageSymbolPrice.ProtoReflect.Descriptor instead.
func (*AverageSymbolPrice) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{42}
}

func (x *AverageSymbolPrice) GetSymbolCount() int32 {
	if x != nil {
		return x.SymbolCount
	}
	return 0
}

func (x *AverageSymbolPrice) GetAveragePrice() float64 {
	if x != nil {
		return x.AveragePrice
	}
	return 0
}

type GetAveragePriceOfSymbolsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AveragePrice map[string]*AverageSymbolPrice `protobuf:"bytes,1,rep,name=average_price,json=averagePrice,proto3" json:"average_price,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetAveragePriceOfSymbolsResponse) Reset() {
	*x = GetAveragePriceOfSymbolsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAveragePriceOfSymbolsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAveragePriceOfSymbolsResponse) ProtoMessage() {}

func (x *GetAveragePriceOfSymbolsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAveragePriceOfSymbolsResponse.ProtoReflect.Descriptor instead.
func (*GetAveragePriceOfSymbolsResponse) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{43}
}

func (x *GetAveragePriceOfSymbolsResponse) GetAveragePrice() map[string]*AverageSymbolPrice {
	if x != nil {
		return x.AveragePrice
	}
	return nil
}

type GetLastQuoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SymbolsId []string `protobuf:"bytes,1,rep,name=symbols_id,json=symbolsId,proto3" json:"symbols_id,omitempty"`
}

func (x *GetLastQuoteRequest) Reset() {
	*x = GetLastQuoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLastQuoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLastQuoteRequest) ProtoMessage() {}

func (x *GetLastQuoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLastQuoteRequest.ProtoReflect.Descriptor instead.
func (*GetLastQuoteRequest) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{44}
}

func (x *GetLastQuoteRequest) GetSymbolsId() []string {
	if x != nil {
		return x.SymbolsId
	}
	return nil
}

type GetLastQuoteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ticks []*FixTicksResponse `protobuf:"bytes,1,rep,name=ticks,proto3" json:"ticks,omitempty"`
}

func (x *GetLastQuoteResponse) Reset() {
	*x = GetLastQuoteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLastQuoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLastQuoteResponse) ProtoMessage() {}

func (x *GetLastQuoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLastQuoteResponse.ProtoReflect.Descriptor instead.
func (*GetLastQuoteResponse) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{45}
}

func (x *GetLastQuoteResponse) GetTicks() []*FixTicksResponse {
	if x != nil {
		return x.Ticks
	}
	return nil
}

type FixAskTicks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Size  string `protobuf:"bytes,2,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *FixAskTicks) Reset() {
	*x = FixAskTicks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FixAskTicks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FixAskTicks) ProtoMessage() {}

func (x *FixAskTicks) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FixAskTicks.ProtoReflect.Descriptor instead.
func (*FixAskTicks) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{46}
}

func (x *FixAskTicks) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *FixAskTicks) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

type FixBidTicks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Size  string `protobuf:"bytes,2,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *FixBidTicks) Reset() {
	*x = FixBidTicks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FixBidTicks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FixBidTicks) ProtoMessage() {}

func (x *FixBidTicks) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FixBidTicks.ProtoReflect.Descriptor instead.
func (*FixBidTicks) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{47}
}

func (x *FixBidTicks) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *FixBidTicks) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

type FixTicksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp uint64         `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	SymbolId  string         `protobuf:"bytes,2,opt,name=symbolId,proto3" json:"symbolId,omitempty"`
	Bid       []*FixBidTicks `protobuf:"bytes,3,rep,name=bid,proto3" json:"bid,omitempty"`
	Ask       []*FixAskTicks `protobuf:"bytes,4,rep,name=ask,proto3" json:"ask,omitempty"`
	Value     string         `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	Size      string         `protobuf:"bytes,6,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *FixTicksResponse) Reset() {
	*x = FixTicksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FixTicksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FixTicksResponse) ProtoMessage() {}

func (x *FixTicksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FixTicksResponse.ProtoReflect.Descriptor instead.
func (*FixTicksResponse) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{48}
}

func (x *FixTicksResponse) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *FixTicksResponse) GetSymbolId() string {
	if x != nil {
		return x.SymbolId
	}
	return ""
}

func (x *FixTicksResponse) GetBid() []*FixBidTicks {
	if x != nil {
		return x.Bid
	}
	return nil
}

func (x *FixTicksResponse) GetAsk() []*FixAskTicks {
	if x != nil {
		return x.Ask
	}
	return nil
}

func (x *FixTicksResponse) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *FixTicksResponse) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

type GetLastQuoteMapResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastQuote map[string]*FixTicksResponse `protobuf:"bytes,1,rep,name=last_quote,json=lastQuote,proto3" json:"last_quote,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetLastQuoteMapResponse) Reset() {
	*x = GetLastQuoteMapResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLastQuoteMapResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLastQuoteMapResponse) ProtoMessage() {}

func (x *GetLastQuoteMapResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLastQuoteMapResponse.ProtoReflect.Descriptor instead.
func (*GetLastQuoteMapResponse) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{49}
}

func (x *GetLastQuoteMapResponse) GetLastQuote() map[string]*FixTicksResponse {
	if x != nil {
		return x.LastQuote
	}
	return nil
}

type TestMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Symbol    string `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Subscribe bool   `protobuf:"varint,3,opt,name=subscribe,proto3" json:"subscribe,omitempty"`
}

func (x *TestMsg) Reset() {
	*x = TestMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestMsg) ProtoMessage() {}

func (x *TestMsg) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestMsg.ProtoReflect.Descriptor instead.
func (*TestMsg) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{50}
}

func (x *TestMsg) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TestMsg) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *TestMsg) GetSubscribe() bool {
	if x != nil {
		return x.Subscribe
	}
	return false
}

type GetInvoicesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvestorId string `protobuf:"bytes,1,opt,name=investor_id,json=investorId,proto3" json:"investor_id,omitempty"`
	Limit      int32  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Page       int32  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetInvoicesRequest) Reset() {
	*x = GetInvoicesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInvoicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInvoicesRequest) ProtoMessage() {}

func (x *GetInvoicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInvoicesRequest.ProtoReflect.Descriptor instead.
func (*GetInvoicesRequest) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{51}
}

func (x *GetInvoicesRequest) GetInvestorId() string {
	if x != nil {
		return x.InvestorId
	}
	return ""
}

func (x *GetInvoicesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetInvoicesRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetInvoicesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Invoices []*Invoices `protobuf:"bytes,1,rep,name=invoices,proto3" json:"invoices,omitempty"`
	Count    int32       `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetInvoicesResponse) Reset() {
	*x = GetInvoicesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInvoicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInvoicesResponse) ProtoMessage() {}

func (x *GetInvoicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInvoicesResponse.ProtoReflect.Descriptor instead.
func (*GetInvoicesResponse) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{52}
}

func (x *GetInvoicesResponse) GetInvoices() []*Invoices {
	if x != nil {
		return x.Invoices
	}
	return nil
}

func (x *GetInvoicesResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type Invoices struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PocketName    string `protobuf:"bytes,3,opt,name=pocket_name,json=pocketName,proto3" json:"pocket_name,omitempty"`
	OperationId   string `protobuf:"bytes,4,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
	Amount        string `protobuf:"bytes,5,opt,name=amount,proto3" json:"amount,omitempty"`
	Currency      string `protobuf:"bytes,6,opt,name=currency,proto3" json:"currency,omitempty"`
	Status        string `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt     string `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	BankAccount   string `protobuf:"bytes,9,opt,name=bank_account,json=bankAccount,proto3" json:"bank_account,omitempty"`
	OperationName string `protobuf:"bytes,10,opt,name=operation_name,json=operationName,proto3" json:"operation_name,omitempty"`
}

func (x *Invoices) Reset() {
	*x = Invoices{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Invoices) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Invoices) ProtoMessage() {}

func (x *Invoices) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Invoices.ProtoReflect.Descriptor instead.
func (*Invoices) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{53}
}

func (x *Invoices) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Invoices) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Invoices) GetPocketName() string {
	if x != nil {
		return x.PocketName
	}
	return ""
}

func (x *Invoices) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

func (x *Invoices) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *Invoices) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *Invoices) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Invoices) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Invoices) GetBankAccount() string {
	if x != nil {
		return x.BankAccount
	}
	return ""
}

func (x *Invoices) GetOperationName() string {
	if x != nil {
		return x.OperationName
	}
	return ""
}

type GetTransactionsV2Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Limit  int32  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Page   int32  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Status string `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *GetTransactionsV2Request) Reset() {
	*x = GetTransactionsV2Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionsV2Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionsV2Request) ProtoMessage() {}

func (x *GetTransactionsV2Request) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionsV2Request.ProtoReflect.Descriptor instead.
func (*GetTransactionsV2Request) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{54}
}

func (x *GetTransactionsV2Request) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetTransactionsV2Request) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetTransactionsV2Request) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetTransactionsV2Request) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type TransactionV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pocket           string `protobuf:"bytes,1,opt,name=pocket,proto3" json:"pocket,omitempty"`
	CreatedAt        string `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Amount           string `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	CommissionAmount string `protobuf:"bytes,4,opt,name=commission_amount,json=commissionAmount,proto3" json:"commission_amount,omitempty"`
	OrderId          string `protobuf:"bytes,5,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	Operation        string `protobuf:"bytes,6,opt,name=operation,proto3" json:"operation,omitempty"`
	Type             string `protobuf:"bytes,7,opt,name=type,proto3" json:"type,omitempty"`
	SymbolId         string `protobuf:"bytes,8,opt,name=symbol_id,json=symbolId,proto3" json:"symbol_id,omitempty"`
	Quantity         int32  `protobuf:"varint,9,opt,name=quantity,proto3" json:"quantity,omitempty"`
	PocketType       string `protobuf:"bytes,10,opt,name=pocket_type,json=pocketType,proto3" json:"pocket_type,omitempty"`
	Status           string `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	BankAccount      string `protobuf:"bytes,12,opt,name=bank_account,json=bankAccount,proto3" json:"bank_account,omitempty"`
	Side             string `protobuf:"bytes,13,opt,name=side,proto3" json:"side,omitempty"`
	Currency         string `protobuf:"bytes,14,opt,name=currency,proto3" json:"currency,omitempty"`
	CurrencyIcon     string `protobuf:"bytes,15,opt,name=currency_icon,json=currencyIcon,proto3" json:"currency_icon,omitempty"`
	Description      string `protobuf:"bytes,16,opt,name=description,proto3" json:"description,omitempty"`
	PocketTitle      string `protobuf:"bytes,17,opt,name=pocket_title,json=pocketTitle,proto3" json:"pocket_title,omitempty"`
}

func (x *TransactionV2) Reset() {
	*x = TransactionV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionV2) ProtoMessage() {}

func (x *TransactionV2) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionV2.ProtoReflect.Descriptor instead.
func (*TransactionV2) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{55}
}

func (x *TransactionV2) GetPocket() string {
	if x != nil {
		return x.Pocket
	}
	return ""
}

func (x *TransactionV2) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *TransactionV2) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *TransactionV2) GetCommissionAmount() string {
	if x != nil {
		return x.CommissionAmount
	}
	return ""
}

func (x *TransactionV2) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *TransactionV2) GetOperation() string {
	if x != nil {
		return x.Operation
	}
	return ""
}

func (x *TransactionV2) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *TransactionV2) GetSymbolId() string {
	if x != nil {
		return x.SymbolId
	}
	return ""
}

func (x *TransactionV2) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *TransactionV2) GetPocketType() string {
	if x != nil {
		return x.PocketType
	}
	return ""
}

func (x *TransactionV2) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TransactionV2) GetBankAccount() string {
	if x != nil {
		return x.BankAccount
	}
	return ""
}

func (x *TransactionV2) GetSide() string {
	if x != nil {
		return x.Side
	}
	return ""
}

func (x *TransactionV2) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *TransactionV2) GetCurrencyIcon() string {
	if x != nil {
		return x.CurrencyIcon
	}
	return ""
}

func (x *TransactionV2) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TransactionV2) GetPocketTitle() string {
	if x != nil {
		return x.PocketTitle
	}
	return ""
}

type GetTransactionsV2Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count        int32            `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Transactions []*TransactionV2 `protobuf:"bytes,2,rep,name=transactions,proto3" json:"transactions,omitempty"`
}

func (x *GetTransactionsV2Response) Reset() {
	*x = GetTransactionsV2Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionsV2Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionsV2Response) ProtoMessage() {}

func (x *GetTransactionsV2Response) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionsV2Response.ProtoReflect.Descriptor instead.
func (*GetTransactionsV2Response) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{56}
}

func (x *GetTransactionsV2Response) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetTransactionsV2Response) GetTransactions() []*TransactionV2 {
	if x != nil {
		return x.Transactions
	}
	return nil
}

type SetSalesforceIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationId  string `protobuf:"bytes,1,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
	SalesforceId string `protobuf:"bytes,2,opt,name=salesforce_id,json=salesforceId,proto3" json:"salesforce_id,omitempty"`
}

func (x *SetSalesforceIdRequest) Reset() {
	*x = SetSalesforceIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetSalesforceIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSalesforceIdRequest) ProtoMessage() {}

func (x *SetSalesforceIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSalesforceIdRequest.ProtoReflect.Descriptor instead.
func (*SetSalesforceIdRequest) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{57}
}

func (x *SetSalesforceIdRequest) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

func (x *SetSalesforceIdRequest) GetSalesforceId() string {
	if x != nil {
		return x.SalesforceId
	}
	return ""
}

type UpdateTransactionStatusReponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *UpdateTransactionStatusReponse) Reset() {
	*x = UpdateTransactionStatusReponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTransactionStatusReponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTransactionStatusReponse) ProtoMessage() {}

func (x *UpdateTransactionStatusReponse) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTransactionStatusReponse.ProtoReflect.Descriptor instead.
func (*UpdateTransactionStatusReponse) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{58}
}

func (x *UpdateTransactionStatusReponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type UpdateTransactionStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SalesforceId string `protobuf:"bytes,1,opt,name=salesforce_id,json=salesforceId,proto3" json:"salesforce_id,omitempty"`
	Status       string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Id           int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UpdateTransactionStatusRequest) Reset() {
	*x = UpdateTransactionStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTransactionStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTransactionStatusRequest) ProtoMessage() {}

func (x *UpdateTransactionStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTransactionStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateTransactionStatusRequest) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{59}
}

func (x *UpdateTransactionStatusRequest) GetSalesforceId() string {
	if x != nil {
		return x.SalesforceId
	}
	return ""
}

func (x *UpdateTransactionStatusRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UpdateTransactionStatusRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetCurrentAssetValueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId            string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Period            string `protobuf:"bytes,2,opt,name=period,proto3" json:"period,omitempty"`
	RequestedCurrency string `protobuf:"bytes,3,opt,name=requested_currency,json=requestedCurrency,proto3" json:"requested_currency,omitempty"`
	PocketId          string `protobuf:"bytes,4,opt,name=pocket_id,json=pocketId,proto3" json:"pocket_id,omitempty"`
}

func (x *GetCurrentAssetValueRequest) Reset() {
	*x = GetCurrentAssetValueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCurrentAssetValueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentAssetValueRequest) ProtoMessage() {}

func (x *GetCurrentAssetValueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrentAssetValueRequest.ProtoReflect.Descriptor instead.
func (*GetCurrentAssetValueRequest) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{60}
}

func (x *GetCurrentAssetValueRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetCurrentAssetValueRequest) GetPeriod() string {
	if x != nil {
		return x.Period
	}
	return ""
}

func (x *GetCurrentAssetValueRequest) GetRequestedCurrency() string {
	if x != nil {
		return x.RequestedCurrency
	}
	return ""
}

func (x *GetCurrentAssetValueRequest) GetPocketId() string {
	if x != nil {
		return x.PocketId
	}
	return ""
}

type GetCurrentAssetValueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId            string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CurrentAssetValue string `protobuf:"bytes,2,opt,name=current_asset_value,json=currentAssetValue,proto3" json:"current_asset_value,omitempty"`
	CashValue         string `protobuf:"bytes,3,opt,name=cash_value,json=cashValue,proto3" json:"cash_value,omitempty"`
}

func (x *GetCurrentAssetValueResponse) Reset() {
	*x = GetCurrentAssetValueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCurrentAssetValueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentAssetValueResponse) ProtoMessage() {}

func (x *GetCurrentAssetValueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrentAssetValueResponse.ProtoReflect.Descriptor instead.
func (*GetCurrentAssetValueResponse) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{61}
}

func (x *GetCurrentAssetValueResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetCurrentAssetValueResponse) GetCurrentAssetValue() string {
	if x != nil {
		return x.CurrentAssetValue
	}
	return ""
}

func (x *GetCurrentAssetValueResponse) GetCashValue() string {
	if x != nil {
		return x.CashValue
	}
	return ""
}

type GetAssetListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RangeType string `protobuf:"bytes,2,opt,name=range_type,json=rangeType,proto3" json:"range_type,omitempty"`
	Currency  string `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`
	PocketId  string `protobuf:"bytes,4,opt,name=pocket_id,json=pocketId,proto3" json:"pocket_id,omitempty"`
}

func (x *GetAssetListRequest) Reset() {
	*x = GetAssetListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAssetListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssetListRequest) ProtoMessage() {}

func (x *GetAssetListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssetListRequest.ProtoReflect.Descriptor instead.
func (*GetAssetListRequest) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{62}
}

func (x *GetAssetListRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetAssetListRequest) GetRangeType() string {
	if x != nil {
		return x.RangeType
	}
	return ""
}

func (x *GetAssetListRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *GetAssetListRequest) GetPocketId() string {
	if x != nil {
		return x.PocketId
	}
	return ""
}

type GetAssetListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Assets     []*Asset `protobuf:"bytes,1,rep,name=assets,proto3" json:"assets,omitempty"`
	Currency   string   `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	TotalCount int32    `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *GetAssetListResponse) Reset() {
	*x = GetAssetListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAssetListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssetListResponse) ProtoMessage() {}

func (x *GetAssetListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssetListResponse.ProtoReflect.Descriptor instead.
func (*GetAssetListResponse) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{63}
}

func (x *GetAssetListResponse) GetAssets() []*Asset {
	if x != nil {
		return x.Assets
	}
	return nil
}

func (x *GetAssetListResponse) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *GetAssetListResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type Asset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SymbolId     string               `protobuf:"bytes,1,opt,name=symbol_id,json=symbolId,proto3" json:"symbol_id,omitempty"`
	AveragePrice float64              `protobuf:"fixed64,2,opt,name=average_price,json=averagePrice,proto3" json:"average_price,omitempty"`
	Quantity     int32                `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	PurchasedAt  *timestamp.Timestamp `protobuf:"bytes,4,opt,name=purchased_at,json=purchasedAt,proto3" json:"purchased_at,omitempty"`
}

func (x *Asset) Reset() {
	*x = Asset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Asset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Asset) ProtoMessage() {}

func (x *Asset) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Asset.ProtoReflect.Descriptor instead.
func (*Asset) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{64}
}

func (x *Asset) GetSymbolId() string {
	if x != nil {
		return x.SymbolId
	}
	return ""
}

func (x *Asset) GetAveragePrice() float64 {
	if x != nil {
		return x.AveragePrice
	}
	return 0
}

func (x *Asset) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *Asset) GetPurchasedAt() *timestamp.Timestamp {
	if x != nil {
		return x.PurchasedAt
	}
	return nil
}

type GetPocketAnalyticsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	UserId   string   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PocketId []string `protobuf:"bytes,3,rep,name=pocket_id,json=pocketId,proto3" json:"pocket_id,omitempty"`
}

func (x *GetPocketAnalyticsRequest) Reset() {
	*x = GetPocketAnalyticsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPocketAnalyticsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPocketAnalyticsRequest) ProtoMessage() {}

func (x *GetPocketAnalyticsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPocketAnalyticsRequest.ProtoReflect.Descriptor instead.
func (*GetPocketAnalyticsRequest) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{65}
}

func (x *GetPocketAnalyticsRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetPocketAnalyticsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetPocketAnalyticsRequest) GetPocketId() []string {
	if x != nil {
		return x.PocketId
	}
	return nil
}

type GetPocketAnalyticsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value    string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Currency string `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	Type     string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *GetPocketAnalyticsResponse) Reset() {
	*x = GetPocketAnalyticsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPocketAnalyticsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPocketAnalyticsResponse) ProtoMessage() {}

func (x *GetPocketAnalyticsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPocketAnalyticsResponse.ProtoReflect.Descriptor instead.
func (*GetPocketAnalyticsResponse) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{66}
}

func (x *GetPocketAnalyticsResponse) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *GetPocketAnalyticsResponse) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *GetPocketAnalyticsResponse) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type UpsertComissionGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *UpsertComissionGroupRequest) Reset() {
	*x = UpsertComissionGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertComissionGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertComissionGroupRequest) ProtoMessage() {}

func (x *UpsertComissionGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertComissionGroupRequest.ProtoReflect.Descriptor instead.
func (*UpsertComissionGroupRequest) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{67}
}

func (x *UpsertComissionGroupRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpsertComissionGroupRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UpsertComissionGroupRelationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	GroupId string `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	TaxId   string `protobuf:"bytes,3,opt,name=tax_id,json=taxId,proto3" json:"tax_id,omitempty"`
}

func (x *UpsertComissionGroupRelationRequest) Reset() {
	*x = UpsertComissionGroupRelationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertComissionGroupRelationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertComissionGroupRelationRequest) ProtoMessage() {}

func (x *UpsertComissionGroupRelationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertComissionGroupRelationRequest.ProtoReflect.Descriptor instead.
func (*UpsertComissionGroupRelationRequest) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{68}
}

func (x *UpsertComissionGroupRelationRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpsertComissionGroupRelationRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *UpsertComissionGroupRelationRequest) GetTaxId() string {
	if x != nil {
		return x.TaxId
	}
	return ""
}

type GetPocketNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PocketId string `protobuf:"bytes,1,opt,name=PocketId,proto3" json:"PocketId,omitempty"`
}

func (x *GetPocketNameRequest) Reset() {
	*x = GetPocketNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPocketNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPocketNameRequest) ProtoMessage() {}

func (x *GetPocketNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPocketNameRequest.ProtoReflect.Descriptor instead.
func (*GetPocketNameRequest) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{69}
}

func (x *GetPocketNameRequest) GetPocketId() string {
	if x != nil {
		return x.PocketId
	}
	return ""
}

type GetPocketNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PocketName string `protobuf:"bytes,2,opt,name=PocketName,proto3" json:"PocketName,omitempty"`
}

func (x *GetPocketNameResponse) Reset() {
	*x = GetPocketNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPocketNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPocketNameResponse) ProtoMessage() {}

func (x *GetPocketNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPocketNameResponse.ProtoReflect.Descriptor instead.
func (*GetPocketNameResponse) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{70}
}

func (x *GetPocketNameResponse) GetPocketName() string {
	if x != nil {
		return x.PocketName
	}
	return ""
}

type FixCancelOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
}

func (x *FixCancelOrderRequest) Reset() {
	*x = FixCancelOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FixCancelOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FixCancelOrderRequest) ProtoMessage() {}

func (x *FixCancelOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FixCancelOrderRequest.ProtoReflect.Descriptor instead.
func (*FixCancelOrderRequest) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{71}
}

func (x *FixCancelOrderRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type FixPlaceOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SymbolId     string `protobuf:"bytes,1,opt,name=symbol_id,json=symbolId,proto3" json:"symbol_id,omitempty"`
	Side         string `protobuf:"bytes,2,opt,name=side,proto3" json:"side,omitempty"`
	LimitPrice   string `protobuf:"bytes,3,opt,name=limit_price,json=limitPrice,proto3" json:"limit_price,omitempty"`
	Quantity     string `protobuf:"bytes,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
	InvestorId   string `protobuf:"bytes,5,opt,name=investor_id,json=investorId,proto3" json:"investor_id,omitempty"`
	Currency     string `protobuf:"bytes,6,opt,name=currency,proto3" json:"currency,omitempty"`
	PocketId     string `protobuf:"bytes,7,opt,name=pocket_id,json=pocketId,proto3" json:"pocket_id,omitempty"`
	SalesforceId string `protobuf:"bytes,8,opt,name=salesforce_id,json=salesforceId,proto3" json:"salesforce_id,omitempty"`
}

func (x *FixPlaceOrderRequest) Reset() {
	*x = FixPlaceOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FixPlaceOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FixPlaceOrderRequest) ProtoMessage() {}

func (x *FixPlaceOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FixPlaceOrderRequest.ProtoReflect.Descriptor instead.
func (*FixPlaceOrderRequest) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{72}
}

func (x *FixPlaceOrderRequest) GetSymbolId() string {
	if x != nil {
		return x.SymbolId
	}
	return ""
}

func (x *FixPlaceOrderRequest) GetSide() string {
	if x != nil {
		return x.Side
	}
	return ""
}

func (x *FixPlaceOrderRequest) GetLimitPrice() string {
	if x != nil {
		return x.LimitPrice
	}
	return ""
}

func (x *FixPlaceOrderRequest) GetQuantity() string {
	if x != nil {
		return x.Quantity
	}
	return ""
}

func (x *FixPlaceOrderRequest) GetInvestorId() string {
	if x != nil {
		return x.InvestorId
	}
	return ""
}

func (x *FixPlaceOrderRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *FixPlaceOrderRequest) GetPocketId() string {
	if x != nil {
		return x.PocketId
	}
	return ""
}

func (x *FixPlaceOrderRequest) GetSalesforceId() string {
	if x != nil {
		return x.SalesforceId
	}
	return ""
}

type TransferPocketOrdersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromPocketId string   `protobuf:"bytes,1,opt,name=from_pocket_id,json=fromPocketId,proto3" json:"from_pocket_id,omitempty"`
	SymbolIds    []string `protobuf:"bytes,2,rep,name=symbol_ids,json=symbolIds,proto3" json:"symbol_ids,omitempty"`
	ToPocketId   string   `protobuf:"bytes,3,opt,name=to_pocket_id,json=toPocketId,proto3" json:"to_pocket_id,omitempty"`
}

func (x *TransferPocketOrdersRequest) Reset() {
	*x = TransferPocketOrdersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferPocketOrdersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferPocketOrdersRequest) ProtoMessage() {}

func (x *TransferPocketOrdersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferPocketOrdersRequest.ProtoReflect.Descriptor instead.
func (*TransferPocketOrdersRequest) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{73}
}

func (x *TransferPocketOrdersRequest) GetFromPocketId() string {
	if x != nil {
		return x.FromPocketId
	}
	return ""
}

func (x *TransferPocketOrdersRequest) GetSymbolIds() []string {
	if x != nil {
		return x.SymbolIds
	}
	return nil
}

func (x *TransferPocketOrdersRequest) GetToPocketId() string {
	if x != nil {
		return x.ToPocketId
	}
	return ""
}

type DeletePocketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PocketId         string `protobuf:"bytes,1,opt,name=pocket_id,json=pocketId,proto3" json:"pocket_id,omitempty"`
	TransferPocketId string `protobuf:"bytes,2,opt,name=transfer_pocket_id,json=transferPocketId,proto3" json:"transfer_pocket_id,omitempty"`
}

func (x *DeletePocketRequest) Reset() {
	*x = DeletePocketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePocketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePocketRequest) ProtoMessage() {}

func (x *DeletePocketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePocketRequest.ProtoReflect.Descriptor instead.
func (*DeletePocketRequest) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{74}
}

func (x *DeletePocketRequest) GetPocketId() string {
	if x != nil {
		return x.PocketId
	}
	return ""
}

func (x *DeletePocketRequest) GetTransferPocketId() string {
	if x != nil {
		return x.TransferPocketId
	}
	return ""
}

type GetInstrumentPurchaseStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Statuses []*PurchaseStatus `protobuf:"bytes,1,rep,name=statuses,proto3" json:"statuses,omitempty"`
}

func (x *GetInstrumentPurchaseStatusResponse) Reset() {
	*x = GetInstrumentPurchaseStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInstrumentPurchaseStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstrumentPurchaseStatusResponse) ProtoMessage() {}

func (x *GetInstrumentPurchaseStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInstrumentPurchaseStatusResponse.ProtoReflect.Descriptor instead.
func (*GetInstrumentPurchaseStatusResponse) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{75}
}

func (x *GetInstrumentPurchaseStatusResponse) GetStatuses() []*PurchaseStatus {
	if x != nil {
		return x.Statuses
	}
	return nil
}

type ConvertCurrencyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromCurrency string `protobuf:"bytes,1,opt,name=from_currency,json=fromCurrency,proto3" json:"from_currency,omitempty"`
	ToCurrency   string `protobuf:"bytes,2,opt,name=to_currency,json=toCurrency,proto3" json:"to_currency,omitempty"`
	Amount       string `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *ConvertCurrencyRequest) Reset() {
	*x = ConvertCurrencyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConvertCurrencyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConvertCurrencyRequest) ProtoMessage() {}

func (x *ConvertCurrencyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConvertCurrencyRequest.ProtoReflect.Descriptor instead.
func (*ConvertCurrencyRequest) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{76}
}

func (x *ConvertCurrencyRequest) GetFromCurrency() string {
	if x != nil {
		return x.FromCurrency
	}
	return ""
}

func (x *ConvertCurrencyRequest) GetToCurrency() string {
	if x != nil {
		return x.ToCurrency
	}
	return ""
}

func (x *ConvertCurrencyRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type ConvertCurrencyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currency string `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	Amount   string `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *ConvertCurrencyResponse) Reset() {
	*x = ConvertCurrencyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConvertCurrencyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConvertCurrencyResponse) ProtoMessage() {}

func (x *ConvertCurrencyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConvertCurrencyResponse.ProtoReflect.Descriptor instead.
func (*ConvertCurrencyResponse) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{77}
}

func (x *ConvertCurrencyResponse) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *ConvertCurrencyResponse) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type GetNameBySalesforceIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PocketId    string `protobuf:"bytes,1,opt,name=pocket_id,json=pocketId,proto3" json:"pocket_id,omitempty"`
	CurrencyId  string `protobuf:"bytes,2,opt,name=currency_id,json=currencyId,proto3" json:"currency_id,omitempty"`
	OperationId string `protobuf:"bytes,3,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
}

func (x *GetNameBySalesforceIDRequest) Reset() {
	*x = GetNameBySalesforceIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNameBySalesforceIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNameBySalesforceIDRequest) ProtoMessage() {}

func (x *GetNameBySalesforceIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNameBySalesforceIDRequest.ProtoReflect.Descriptor instead.
func (*GetNameBySalesforceIDRequest) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{78}
}

func (x *GetNameBySalesforceIDRequest) GetPocketId() string {
	if x != nil {
		return x.PocketId
	}
	return ""
}

func (x *GetNameBySalesforceIDRequest) GetCurrencyId() string {
	if x != nil {
		return x.CurrencyId
	}
	return ""
}

func (x *GetNameBySalesforceIDRequest) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

type GetNameBySalesforceIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PocketName    string `protobuf:"bytes,1,opt,name=pocket_name,json=pocketName,proto3" json:"pocket_name,omitempty"`
	CurrencyName  string `protobuf:"bytes,2,opt,name=currency_name,json=currencyName,proto3" json:"currency_name,omitempty"`
	OperationName string `protobuf:"bytes,3,opt,name=operation_name,json=operationName,proto3" json:"operation_name,omitempty"`
	UserId        string `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetNameBySalesforceIDResponse) Reset() {
	*x = GetNameBySalesforceIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNameBySalesforceIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNameBySalesforceIDResponse) ProtoMessage() {}

func (x *GetNameBySalesforceIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNameBySalesforceIDResponse.ProtoReflect.Descriptor instead.
func (*GetNameBySalesforceIDResponse) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{79}
}

func (x *GetNameBySalesforceIDResponse) GetPocketName() string {
	if x != nil {
		return x.PocketName
	}
	return ""
}

func (x *GetNameBySalesforceIDResponse) GetCurrencyName() string {
	if x != nil {
		return x.CurrencyName
	}
	return ""
}

func (x *GetNameBySalesforceIDResponse) GetOperationName() string {
	if x != nil {
		return x.OperationName
	}
	return ""
}

func (x *GetNameBySalesforceIDResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type ExecOperationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pocket         *Pocket        `protobuf:"bytes,1,opt,name=pocket,proto3" json:"pocket,omitempty"`
	Info           *OperationInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	TaxList        []*TaxInfo     `protobuf:"bytes,3,rep,name=tax_list,json=taxList,proto3" json:"tax_list,omitempty"`
	TransactionId  int64          `protobuf:"varint,4,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	TransitBalance string         `protobuf:"bytes,5,opt,name=transit_balance,json=transitBalance,proto3" json:"transit_balance,omitempty"`
	TransitMessage string         `protobuf:"bytes,6,opt,name=transit_message,json=transitMessage,proto3" json:"transit_message,omitempty"`
	Broker         string         `protobuf:"bytes,7,opt,name=broker,proto3" json:"broker,omitempty"`
	Partner        string         `protobuf:"bytes,8,opt,name=partner,proto3" json:"partner,omitempty"`
}

func (x *ExecOperationResponse) Reset() {
	*x = ExecOperationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecOperationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecOperationResponse) ProtoMessage() {}

func (x *ExecOperationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecOperationResponse.ProtoReflect.Descriptor instead.
func (*ExecOperationResponse) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{80}
}

func (x *ExecOperationResponse) GetPocket() *Pocket {
	if x != nil {
		return x.Pocket
	}
	return nil
}

func (x *ExecOperationResponse) GetInfo() *OperationInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *ExecOperationResponse) GetTaxList() []*TaxInfo {
	if x != nil {
		return x.TaxList
	}
	return nil
}

func (x *ExecOperationResponse) GetTransactionId() int64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *ExecOperationResponse) GetTransitBalance() string {
	if x != nil {
		return x.TransitBalance
	}
	return ""
}

func (x *ExecOperationResponse) GetTransitMessage() string {
	if x != nil {
		return x.TransitMessage
	}
	return ""
}

func (x *ExecOperationResponse) GetBroker() string {
	if x != nil {
		return x.Broker
	}
	return ""
}

func (x *ExecOperationResponse) GetPartner() string {
	if x != nil {
		return x.Partner
	}
	return ""
}

type OperationInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvestorId  string `protobuf:"bytes,1,opt,name=investor_id,json=investorId,proto3" json:"investor_id,omitempty"`
	PocketId    string `protobuf:"bytes,2,opt,name=pocket_id,json=pocketId,proto3" json:"pocket_id,omitempty"`
	Amount      string `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Currency    string `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
	OperationId string `protobuf:"bytes,5,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
}

func (x *OperationInfo) Reset() {
	*x = OperationInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationInfo) ProtoMessage() {}

func (x *OperationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationInfo.ProtoReflect.Descriptor instead.
func (*OperationInfo) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{81}
}

func (x *OperationInfo) GetInvestorId() string {
	if x != nil {
		return x.InvestorId
	}
	return ""
}

func (x *OperationInfo) GetPocketId() string {
	if x != nil {
		return x.PocketId
	}
	return ""
}

func (x *OperationInfo) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *OperationInfo) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *OperationInfo) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

type TaxInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId               string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserPocketId         string `protobuf:"bytes,2,opt,name=user_pocket_id,json=userPocketId,proto3" json:"user_pocket_id,omitempty"`
	CounterpartyId       string `protobuf:"bytes,3,opt,name=counterparty_id,json=counterpartyId,proto3" json:"counterparty_id,omitempty"`
	CounterpartyPocketId string `protobuf:"bytes,4,opt,name=counterparty_pocket_id,json=counterpartyPocketId,proto3" json:"counterparty_pocket_id,omitempty"`
	Amount               string `protobuf:"bytes,5,opt,name=amount,proto3" json:"amount,omitempty"`
	Currency             string `protobuf:"bytes,6,opt,name=currency,proto3" json:"currency,omitempty"`
	OperationId          string `protobuf:"bytes,7,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
	OperatingHourId      string `protobuf:"bytes,8,opt,name=operating_hour_id,json=operatingHourId,proto3" json:"operating_hour_id,omitempty"`
}

func (x *TaxInfo) Reset() {
	*x = TaxInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaxInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaxInfo) ProtoMessage() {}

func (x *TaxInfo) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaxInfo.ProtoReflect.Descriptor instead.
func (*TaxInfo) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{82}
}

func (x *TaxInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *TaxInfo) GetUserPocketId() string {
	if x != nil {
		return x.UserPocketId
	}
	return ""
}

func (x *TaxInfo) GetCounterpartyId() string {
	if x != nil {
		return x.CounterpartyId
	}
	return ""
}

func (x *TaxInfo) GetCounterpartyPocketId() string {
	if x != nil {
		return x.CounterpartyPocketId
	}
	return ""
}

func (x *TaxInfo) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *TaxInfo) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *TaxInfo) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

func (x *TaxInfo) GetOperatingHourId() string {
	if x != nil {
		return x.OperatingHourId
	}
	return ""
}

type GetInstrumentPurchaseStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SymbolId   string `protobuf:"bytes,1,opt,name=symbol_id,json=symbolId,proto3" json:"symbol_id,omitempty"`
	InvestorId string `protobuf:"bytes,2,opt,name=investor_id,json=investorId,proto3" json:"investor_id,omitempty"`
}

func (x *GetInstrumentPurchaseStatusRequest) Reset() {
	*x = GetInstrumentPurchaseStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInstrumentPurchaseStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstrumentPurchaseStatusRequest) ProtoMessage() {}

func (x *GetInstrumentPurchaseStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInstrumentPurchaseStatusRequest.ProtoReflect.Descriptor instead.
func (*GetInstrumentPurchaseStatusRequest) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{83}
}

func (x *GetInstrumentPurchaseStatusRequest) GetSymbolId() string {
	if x != nil {
		return x.SymbolId
	}
	return ""
}

func (x *GetInstrumentPurchaseStatusRequest) GetInvestorId() string {
	if x != nil {
		return x.InvestorId
	}
	return ""
}

type PurchaseStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PocketId  string `protobuf:"bytes,1,opt,name=pocket_id,json=pocketId,proto3" json:"pocket_id,omitempty"`
	SellCount int32  `protobuf:"varint,3,opt,name=sell_count,json=sellCount,proto3" json:"sell_count,omitempty"`
	Count     int32  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *PurchaseStatus) Reset() {
	*x = PurchaseStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchaseStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseStatus) ProtoMessage() {}

func (x *PurchaseStatus) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseStatus.ProtoReflect.Descriptor instead.
func (*PurchaseStatus) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{84}
}

func (x *PurchaseStatus) GetPocketId() string {
	if x != nil {
		return x.PocketId
	}
	return ""
}

func (x *PurchaseStatus) GetSellCount() int32 {
	if x != nil {
		return x.SellCount
	}
	return 0
}

func (x *PurchaseStatus) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetPurchasedStockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string        `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PocketId string        `protobuf:"bytes,2,opt,name=pocket_id,json=pocketId,proto3" json:"pocket_id,omitempty"`
	Options  *QueryOptions `protobuf:"bytes,3,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *GetPurchasedStockRequest) Reset() {
	*x = GetPurchasedStockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPurchasedStockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPurchasedStockRequest) ProtoMessage() {}

func (x *GetPurchasedStockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPurchasedStockRequest.ProtoReflect.Descriptor instead.
func (*GetPurchasedStockRequest) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{85}
}

func (x *GetPurchasedStockRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetPurchasedStockRequest) GetPocketId() string {
	if x != nil {
		return x.PocketId
	}
	return ""
}

func (x *GetPurchasedStockRequest) GetOptions() *QueryOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type GetPurchasedStocksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count  int32             `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Stocks []*PurchasedStock `protobuf:"bytes,2,rep,name=stocks,proto3" json:"stocks,omitempty"`
}

func (x *GetPurchasedStocksResponse) Reset() {
	*x = GetPurchasedStocksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPurchasedStocksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPurchasedStocksResponse) ProtoMessage() {}

func (x *GetPurchasedStocksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPurchasedStocksResponse.ProtoReflect.Descriptor instead.
func (*GetPurchasedStocksResponse) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{86}
}

func (x *GetPurchasedStocksResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetPurchasedStocksResponse) GetStocks() []*PurchasedStock {
	if x != nil {
		return x.Stocks
	}
	return nil
}

type PurchasedStock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                  string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Ticker                string  `protobuf:"bytes,3,opt,name=ticker,proto3" json:"ticker,omitempty"`
	Icon                  string  `protobuf:"bytes,4,opt,name=icon,proto3" json:"icon,omitempty"`
	SellableCount         int32   `protobuf:"varint,5,opt,name=sellable_count,json=sellableCount,proto3" json:"sellable_count,omitempty"`
	Count                 int32   `protobuf:"varint,6,opt,name=count,proto3" json:"count,omitempty"`
	PriceChangePercentage float64 `protobuf:"fixed64,8,opt,name=price_change_percentage,json=priceChangePercentage,proto3" json:"price_change_percentage,omitempty"`
	AveragePrice          float64 `protobuf:"fixed64,9,opt,name=average_price,json=averagePrice,proto3" json:"average_price,omitempty"`
}

func (x *PurchasedStock) Reset() {
	*x = PurchasedStock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchasedStock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchasedStock) ProtoMessage() {}

func (x *PurchasedStock) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchasedStock.ProtoReflect.Descriptor instead.
func (*PurchasedStock) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{87}
}

func (x *PurchasedStock) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PurchasedStock) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PurchasedStock) GetTicker() string {
	if x != nil {
		return x.Ticker
	}
	return ""
}

func (x *PurchasedStock) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *PurchasedStock) GetSellableCount() int32 {
	if x != nil {
		return x.SellableCount
	}
	return 0
}

func (x *PurchasedStock) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *PurchasedStock) GetPriceChangePercentage() float64 {
	if x != nil {
		return x.PriceChangePercentage
	}
	return 0
}

func (x *PurchasedStock) GetAveragePrice() float64 {
	if x != nil {
		return x.AveragePrice
	}
	return 0
}

type PocketDetailed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalAmount string           `protobuf:"bytes,1,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount,omitempty"`
	Currency    string           `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	Icon        string           `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
	Balances    []*PocketBalance `protobuf:"bytes,4,rep,name=balances,proto3" json:"balances,omitempty"`
}

func (x *PocketDetailed) Reset() {
	*x = PocketDetailed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PocketDetailed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PocketDetailed) ProtoMessage() {}

func (x *PocketDetailed) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PocketDetailed.ProtoReflect.Descriptor instead.
func (*PocketDetailed) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{88}
}

func (x *PocketDetailed) GetTotalAmount() string {
	if x != nil {
		return x.TotalAmount
	}
	return ""
}

func (x *PocketDetailed) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *PocketDetailed) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *PocketDetailed) GetBalances() []*PocketBalance {
	if x != nil {
		return x.Balances
	}
	return nil
}

type GetCurrenciesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currencies []*Currency `protobuf:"bytes,1,rep,name=currencies,proto3" json:"currencies,omitempty"`
}

func (x *GetCurrenciesResponse) Reset() {
	*x = GetCurrenciesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCurrenciesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrenciesResponse) ProtoMessage() {}

func (x *GetCurrenciesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrenciesResponse.ProtoReflect.Descriptor instead.
func (*GetCurrenciesResponse) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{89}
}

func (x *GetCurrenciesResponse) GetCurrencies() []*Currency {
	if x != nil {
		return x.Currencies
	}
	return nil
}

type UpdatePocketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Title        string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	SalesforceId string `protobuf:"bytes,3,opt,name=salesforce_id,json=salesforceId,proto3" json:"salesforce_id,omitempty"`
	Icon         string `protobuf:"bytes,4,opt,name=icon,proto3" json:"icon,omitempty"`
	Color        string `protobuf:"bytes,5,opt,name=color,proto3" json:"color,omitempty"`
}

func (x *UpdatePocketRequest) Reset() {
	*x = UpdatePocketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePocketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePocketRequest) ProtoMessage() {}

func (x *UpdatePocketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePocketRequest.ProtoReflect.Descriptor instead.
func (*UpdatePocketRequest) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{90}
}

func (x *UpdatePocketRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdatePocketRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdatePocketRequest) GetSalesforceId() string {
	if x != nil {
		return x.SalesforceId
	}
	return ""
}

func (x *UpdatePocketRequest) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *UpdatePocketRequest) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

type CalculateTaxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaxPercentage     string `protobuf:"bytes,1,opt,name=tax_percentage,json=taxPercentage,proto3" json:"tax_percentage,omitempty"`
	TaxFixed          string `protobuf:"bytes,2,opt,name=tax_fixed,json=taxFixed,proto3" json:"tax_fixed,omitempty"`
	TaxCalculated     string `protobuf:"bytes,3,opt,name=tax_calculated,json=taxCalculated,proto3" json:"tax_calculated,omitempty"`
	TaxAmount         string `protobuf:"bytes,4,opt,name=tax_amount,json=taxAmount,proto3" json:"tax_amount,omitempty"`
	HyssaCommission   string `protobuf:"bytes,5,opt,name=hyssa_commission,json=hyssaCommission,proto3" json:"hyssa_commission,omitempty"`
	BrokerCommission  string `protobuf:"bytes,6,opt,name=broker_commission,json=brokerCommission,proto3" json:"broker_commission,omitempty"`
	PartnerCommission string `protobuf:"bytes,7,opt,name=partner_commission,json=partnerCommission,proto3" json:"partner_commission,omitempty"`
	MinFee            string `protobuf:"bytes,8,opt,name=min_fee,json=minFee,proto3" json:"min_fee,omitempty"`
	Markup            bool   `protobuf:"varint,9,opt,name=markup,proto3" json:"markup,omitempty"`
	Discount          string `protobuf:"bytes,10,opt,name=discount,proto3" json:"discount,omitempty"`
}

func (x *CalculateTaxResponse) Reset() {
	*x = CalculateTaxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculateTaxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateTaxResponse) ProtoMessage() {}

func (x *CalculateTaxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateTaxResponse.ProtoReflect.Descriptor instead.
func (*CalculateTaxResponse) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{91}
}

func (x *CalculateTaxResponse) GetTaxPercentage() string {
	if x != nil {
		return x.TaxPercentage
	}
	return ""
}

func (x *CalculateTaxResponse) GetTaxFixed() string {
	if x != nil {
		return x.TaxFixed
	}
	return ""
}

func (x *CalculateTaxResponse) GetTaxCalculated() string {
	if x != nil {
		return x.TaxCalculated
	}
	return ""
}

func (x *CalculateTaxResponse) GetTaxAmount() string {
	if x != nil {
		return x.TaxAmount
	}
	return ""
}

func (x *CalculateTaxResponse) GetHyssaCommission() string {
	if x != nil {
		return x.HyssaCommission
	}
	return ""
}

func (x *CalculateTaxResponse) GetBrokerCommission() string {
	if x != nil {
		return x.BrokerCommission
	}
	return ""
}

func (x *CalculateTaxResponse) GetPartnerCommission() string {
	if x != nil {
		return x.PartnerCommission
	}
	return ""
}

func (x *CalculateTaxResponse) GetMinFee() string {
	if x != nil {
		return x.MinFee
	}
	return ""
}

func (x *CalculateTaxResponse) GetMarkup() bool {
	if x != nil {
		return x.Markup
	}
	return false
}

func (x *CalculateTaxResponse) GetDiscount() string {
	if x != nil {
		return x.Discount
	}
	return ""
}

type CalculateTaxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount           string `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
	OperationName    string `protobuf:"bytes,2,opt,name=operation_name,json=operationName,proto3" json:"operation_name,omitempty"`
	ComissionGroupId string `protobuf:"bytes,3,opt,name=comission_group_id,json=comissionGroupId,proto3" json:"comission_group_id,omitempty"`
	Currency         string `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
	Count            int32  `protobuf:"varint,5,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CalculateTaxRequest) Reset() {
	*x = CalculateTaxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculateTaxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateTaxRequest) ProtoMessage() {}

func (x *CalculateTaxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateTaxRequest.ProtoReflect.Descriptor instead.
func (*CalculateTaxRequest) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{92}
}

func (x *CalculateTaxRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *CalculateTaxRequest) GetOperationName() string {
	if x != nil {
		return x.OperationName
	}
	return ""
}

func (x *CalculateTaxRequest) GetComissionGroupId() string {
	if x != nil {
		return x.ComissionGroupId
	}
	return ""
}

func (x *CalculateTaxRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *CalculateTaxRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetOperationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operations []*Operation `protobuf:"bytes,1,rep,name=operations,proto3" json:"operations,omitempty"`
}

func (x *GetOperationsResponse) Reset() {
	*x = GetOperationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOperationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOperationsResponse) ProtoMessage() {}

func (x *GetOperationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOperationsResponse.ProtoReflect.Descriptor instead.
func (*GetOperationsResponse) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{93}
}

func (x *GetOperationsResponse) GetOperations() []*Operation {
	if x != nil {
		return x.Operations
	}
	return nil
}

type ExecOperationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PocketId         string `protobuf:"bytes,1,opt,name=pocketId,proto3" json:"pocketId,omitempty"`
	Amount           string `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	OperationName    string `protobuf:"bytes,3,opt,name=operation_name,json=operationName,proto3" json:"operation_name,omitempty"`
	OrderId          string `protobuf:"bytes,4,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	Currency         string `protobuf:"bytes,5,opt,name=currency,proto3" json:"currency,omitempty"`
	ComissionGroupId string `protobuf:"bytes,6,opt,name=comission_group_id,json=comissionGroupId,proto3" json:"comission_group_id,omitempty"`
	BankAccountId    string `protobuf:"bytes,7,opt,name=bank_account_id,json=bankAccountId,proto3" json:"bank_account_id,omitempty"`
	SalesforceId     string `protobuf:"bytes,8,opt,name=salesforce_id,json=salesforceId,proto3" json:"salesforce_id,omitempty"`
	FromSalesforce   bool   `protobuf:"varint,9,opt,name=from_salesforce,json=fromSalesforce,proto3" json:"from_salesforce,omitempty"`
	Quantity         int32  `protobuf:"varint,10,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *ExecOperationRequest) Reset() {
	*x = ExecOperationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecOperationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecOperationRequest) ProtoMessage() {}

func (x *ExecOperationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecOperationRequest.ProtoReflect.Descriptor instead.
func (*ExecOperationRequest) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{94}
}

func (x *ExecOperationRequest) GetPocketId() string {
	if x != nil {
		return x.PocketId
	}
	return ""
}

func (x *ExecOperationRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *ExecOperationRequest) GetOperationName() string {
	if x != nil {
		return x.OperationName
	}
	return ""
}

func (x *ExecOperationRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *ExecOperationRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *ExecOperationRequest) GetComissionGroupId() string {
	if x != nil {
		return x.ComissionGroupId
	}
	return ""
}

func (x *ExecOperationRequest) GetBankAccountId() string {
	if x != nil {
		return x.BankAccountId
	}
	return ""
}

func (x *ExecOperationRequest) GetSalesforceId() string {
	if x != nil {
		return x.SalesforceId
	}
	return ""
}

func (x *ExecOperationRequest) GetFromSalesforce() bool {
	if x != nil {
		return x.FromSalesforce
	}
	return false
}

func (x *ExecOperationRequest) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type InitializeUserPocketsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pockets []*Pocket `protobuf:"bytes,1,rep,name=pockets,proto3" json:"pockets,omitempty"`
}

func (x *InitializeUserPocketsResponse) Reset() {
	*x = InitializeUserPocketsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitializeUserPocketsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitializeUserPocketsResponse) ProtoMessage() {}

func (x *InitializeUserPocketsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitializeUserPocketsResponse.ProtoReflect.Descriptor instead.
func (*InitializeUserPocketsResponse) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{95}
}

func (x *InitializeUserPocketsResponse) GetPockets() []*Pocket {
	if x != nil {
		return x.Pockets
	}
	return nil
}

type GetPocketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PocketId         string `protobuf:"bytes,1,opt,name=pocket_id,json=pocketId,proto3" json:"pocket_id,omitempty"`
	UserId           string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RequstedCurrency string `protobuf:"bytes,3,opt,name=requsted_currency,json=requstedCurrency,proto3" json:"requsted_currency,omitempty"`
}

func (x *GetPocketRequest) Reset() {
	*x = GetPocketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPocketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPocketRequest) ProtoMessage() {}

func (x *GetPocketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPocketRequest.ProtoReflect.Descriptor instead.
func (*GetPocketRequest) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{96}
}

func (x *GetPocketRequest) GetPocketId() string {
	if x != nil {
		return x.PocketId
	}
	return ""
}

func (x *GetPocketRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetPocketRequest) GetRequstedCurrency() string {
	if x != nil {
		return x.RequstedCurrency
	}
	return ""
}

type GetAllPocketsOfUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId           string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RequstedCurrency string `protobuf:"bytes,3,opt,name=requsted_currency,json=requstedCurrency,proto3" json:"requsted_currency,omitempty"`
}

func (x *GetAllPocketsOfUserRequest) Reset() {
	*x = GetAllPocketsOfUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllPocketsOfUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllPocketsOfUserRequest) ProtoMessage() {}

func (x *GetAllPocketsOfUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllPocketsOfUserRequest.ProtoReflect.Descriptor instead.
func (*GetAllPocketsOfUserRequest) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{97}
}

func (x *GetAllPocketsOfUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetAllPocketsOfUserRequest) GetRequstedCurrency() string {
	if x != nil {
		return x.RequstedCurrency
	}
	return ""
}

type GetAllPocketsOfUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pockets []*Pocket `protobuf:"bytes,1,rep,name=pockets,proto3" json:"pockets,omitempty"`
}

func (x *GetAllPocketsOfUserResponse) Reset() {
	*x = GetAllPocketsOfUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllPocketsOfUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllPocketsOfUserResponse) ProtoMessage() {}

func (x *GetAllPocketsOfUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllPocketsOfUserResponse.ProtoReflect.Descriptor instead.
func (*GetAllPocketsOfUserResponse) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{98}
}

func (x *GetAllPocketsOfUserResponse) GetPockets() []*Pocket {
	if x != nil {
		return x.Pockets
	}
	return nil
}

type GetPocketTypesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PocketsType []*PocketType `protobuf:"bytes,1,rep,name=pockets_type,json=pocketsType,proto3" json:"pockets_type,omitempty"`
}

func (x *GetPocketTypesResponse) Reset() {
	*x = GetPocketTypesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPocketTypesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPocketTypesResponse) ProtoMessage() {}

func (x *GetPocketTypesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPocketTypesResponse.ProtoReflect.Descriptor instead.
func (*GetPocketTypesResponse) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{99}
}

func (x *GetPocketTypesResponse) GetPocketsType() []*PocketType {
	if x != nil {
		return x.PocketsType
	}
	return nil
}

type GetFirstTransactionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit    int32  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset   int32  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	PocketId string `protobuf:"bytes,3,opt,name=pocket_id,json=pocketId,proto3" json:"pocket_id,omitempty"`
	UserId   string `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Type     string `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *GetFirstTransactionsRequest) Reset() {
	*x = GetFirstTransactionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFirstTransactionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFirstTransactionsRequest) ProtoMessage() {}

func (x *GetFirstTransactionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFirstTransactionsRequest.ProtoReflect.Descriptor instead.
func (*GetFirstTransactionsRequest) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{100}
}

func (x *GetFirstTransactionsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetFirstTransactionsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetFirstTransactionsRequest) GetPocketId() string {
	if x != nil {
		return x.PocketId
	}
	return ""
}

func (x *GetFirstTransactionsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetFirstTransactionsRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type GetFirstTransactions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Comment               string `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
	UserId                string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PocketId              int64  `protobuf:"varint,4,opt,name=pocket_id,json=pocketId,proto3" json:"pocket_id,omitempty"`
	OperationId           string `protobuf:"bytes,5,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
	Type                  string `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	Amount                string `protobuf:"bytes,7,opt,name=amount,proto3" json:"amount,omitempty"`
	AmountBeforeComission string `protobuf:"bytes,8,opt,name=amount_before_comission,json=amountBeforeComission,proto3" json:"amount_before_comission,omitempty"`
	ComissionAmount       string `protobuf:"bytes,9,opt,name=comission_amount,json=comissionAmount,proto3" json:"comission_amount,omitempty"`
	Currency              string `protobuf:"bytes,10,opt,name=currency,proto3" json:"currency,omitempty"`
	Status                string `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt             string `protobuf:"bytes,12,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt             string `protobuf:"bytes,13,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	CurrencyIcon          string `protobuf:"bytes,14,opt,name=currency_icon,json=currencyIcon,proto3" json:"currency_icon,omitempty"`
	IbanCode              string `protobuf:"bytes,15,opt,name=iban_code,json=ibanCode,proto3" json:"iban_code,omitempty"`
	Quantity              string `protobuf:"bytes,16,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Consumption           string `protobuf:"bytes,17,opt,name=consumption,proto3" json:"consumption,omitempty"`
}

func (x *GetFirstTransactions) Reset() {
	*x = GetFirstTransactions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFirstTransactions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFirstTransactions) ProtoMessage() {}

func (x *GetFirstTransactions) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFirstTransactions.ProtoReflect.Descriptor instead.
func (*GetFirstTransactions) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{101}
}

func (x *GetFirstTransactions) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetFirstTransactions) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *GetFirstTransactions) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetFirstTransactions) GetPocketId() int64 {
	if x != nil {
		return x.PocketId
	}
	return 0
}

func (x *GetFirstTransactions) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

func (x *GetFirstTransactions) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetFirstTransactions) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *GetFirstTransactions) GetAmountBeforeComission() string {
	if x != nil {
		return x.AmountBeforeComission
	}
	return ""
}

func (x *GetFirstTransactions) GetComissionAmount() string {
	if x != nil {
		return x.ComissionAmount
	}
	return ""
}

func (x *GetFirstTransactions) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *GetFirstTransactions) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetFirstTransactions) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *GetFirstTransactions) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *GetFirstTransactions) GetCurrencyIcon() string {
	if x != nil {
		return x.CurrencyIcon
	}
	return ""
}

func (x *GetFirstTransactions) GetIbanCode() string {
	if x != nil {
		return x.IbanCode
	}
	return ""
}

func (x *GetFirstTransactions) GetQuantity() string {
	if x != nil {
		return x.Quantity
	}
	return ""
}

func (x *GetFirstTransactions) GetConsumption() string {
	if x != nil {
		return x.Consumption
	}
	return ""
}

type GetFirstTransactionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count                int32                   `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	GetFirstTransactions []*GetFirstTransactions `protobuf:"bytes,2,rep,name=getFirstTransactions,proto3" json:"getFirstTransactions,omitempty"`
}

func (x *GetFirstTransactionsResponse) Reset() {
	*x = GetFirstTransactionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFirstTransactionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFirstTransactionsResponse) ProtoMessage() {}

func (x *GetFirstTransactionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFirstTransactionsResponse.ProtoReflect.Descriptor instead.
func (*GetFirstTransactionsResponse) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{102}
}

func (x *GetFirstTransactionsResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetFirstTransactionsResponse) GetGetFirstTransactions() []*GetFirstTransactions {
	if x != nil {
		return x.GetFirstTransactions
	}
	return nil
}

type GetTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetTransactionRequest) Reset() {
	*x = GetTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionRequest) ProtoMessage() {}

func (x *GetTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionRequest.ProtoReflect.Descriptor instead.
func (*GetTransactionRequest) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{103}
}

func (x *GetTransactionRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Comment               string `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
	UserId                string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PocketId              int64  `protobuf:"varint,4,opt,name=pocket_id,json=pocketId,proto3" json:"pocket_id,omitempty"`
	OperationId           string `protobuf:"bytes,5,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
	Type                  string `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	Amount                string `protobuf:"bytes,7,opt,name=amount,proto3" json:"amount,omitempty"`
	AmountBeforeComission string `protobuf:"bytes,8,opt,name=amount_before_comission,json=amountBeforeComission,proto3" json:"amount_before_comission,omitempty"`
	ComissionAmount       string `protobuf:"bytes,9,opt,name=comission_amount,json=comissionAmount,proto3" json:"comission_amount,omitempty"`
	Currency              string `protobuf:"bytes,10,opt,name=currency,proto3" json:"currency,omitempty"`
	Status                string `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt             string `protobuf:"bytes,12,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt             string `protobuf:"bytes,13,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	CurrencyIcon          string `protobuf:"bytes,14,opt,name=currency_icon,json=currencyIcon,proto3" json:"currency_icon,omitempty"`
	SalesforceId          string `protobuf:"bytes,15,opt,name=salesforce_id,json=salesforceId,proto3" json:"salesforce_id,omitempty"`
}

func (x *GetTransactionResponse) Reset() {
	*x = GetTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionResponse) ProtoMessage() {}

func (x *GetTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionResponse.ProtoReflect.Descriptor instead.
func (*GetTransactionResponse) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{104}
}

func (x *GetTransactionResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetTransactionResponse) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *GetTransactionResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetTransactionResponse) GetPocketId() int64 {
	if x != nil {
		return x.PocketId
	}
	return 0
}

func (x *GetTransactionResponse) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

func (x *GetTransactionResponse) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetTransactionResponse) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *GetTransactionResponse) GetAmountBeforeComission() string {
	if x != nil {
		return x.AmountBeforeComission
	}
	return ""
}

func (x *GetTransactionResponse) GetComissionAmount() string {
	if x != nil {
		return x.ComissionAmount
	}
	return ""
}

func (x *GetTransactionResponse) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *GetTransactionResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetTransactionResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *GetTransactionResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *GetTransactionResponse) GetCurrencyIcon() string {
	if x != nil {
		return x.CurrencyIcon
	}
	return ""
}

func (x *GetTransactionResponse) GetSalesforceId() string {
	if x != nil {
		return x.SalesforceId
	}
	return ""
}

type CreateOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    string `protobuf:"bytes,16,opt,name=id,proto3" json:"id,omitempty"`
	InvestorId            string `protobuf:"bytes,1,opt,name=investor_id,json=investorId,proto3" json:"investor_id,omitempty"`
	SymbolId              string `protobuf:"bytes,2,opt,name=symbol_id,json=symbolId,proto3" json:"symbol_id,omitempty"`
	PlaceTime             string `protobuf:"bytes,4,opt,name=place_time,json=placeTime,proto3" json:"place_time,omitempty"`
	CurrentModificationId string `protobuf:"bytes,5,opt,name=current_modification_id,json=currentModificationId,proto3" json:"current_modification_id,omitempty"`
	ExanteAccountId       string `protobuf:"bytes,6,opt,name=exante_account_id,json=exanteAccountId,proto3" json:"exante_account_id,omitempty"`
	Username              string `protobuf:"bytes,7,opt,name=username,proto3" json:"username,omitempty"`
	Status                string `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	LastUpdate            string `protobuf:"bytes,9,opt,name=last_update,json=lastUpdate,proto3" json:"last_update,omitempty"`
	Reason                string `protobuf:"bytes,10,opt,name=reason,proto3" json:"reason,omitempty"`
	LimitPrice            string `protobuf:"bytes,11,opt,name=limit_price,json=limitPrice,proto3" json:"limit_price,omitempty"`
	Quantity              string `protobuf:"bytes,12,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Side                  string `protobuf:"bytes,13,opt,name=side,proto3" json:"side,omitempty"`
	PocketId              string `protobuf:"bytes,14,opt,name=pocket_id,json=pocketId,proto3" json:"pocket_id,omitempty"`
	Currency              string `protobuf:"bytes,15,opt,name=currency,proto3" json:"currency,omitempty"`
}

func (x *CreateOrderRequest) Reset() {
	*x = CreateOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrderRequest) ProtoMessage() {}

func (x *CreateOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrderRequest.ProtoReflect.Descriptor instead.
func (*CreateOrderRequest) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{105}
}

func (x *CreateOrderRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateOrderRequest) GetInvestorId() string {
	if x != nil {
		return x.InvestorId
	}
	return ""
}

func (x *CreateOrderRequest) GetSymbolId() string {
	if x != nil {
		return x.SymbolId
	}
	return ""
}

func (x *CreateOrderRequest) GetPlaceTime() string {
	if x != nil {
		return x.PlaceTime
	}
	return ""
}

func (x *CreateOrderRequest) GetCurrentModificationId() string {
	if x != nil {
		return x.CurrentModificationId
	}
	return ""
}

func (x *CreateOrderRequest) GetExanteAccountId() string {
	if x != nil {
		return x.ExanteAccountId
	}
	return ""
}

func (x *CreateOrderRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *CreateOrderRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CreateOrderRequest) GetLastUpdate() string {
	if x != nil {
		return x.LastUpdate
	}
	return ""
}

func (x *CreateOrderRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *CreateOrderRequest) GetLimitPrice() string {
	if x != nil {
		return x.LimitPrice
	}
	return ""
}

func (x *CreateOrderRequest) GetQuantity() string {
	if x != nil {
		return x.Quantity
	}
	return ""
}

func (x *CreateOrderRequest) GetSide() string {
	if x != nil {
		return x.Side
	}
	return ""
}

func (x *CreateOrderRequest) GetPocketId() string {
	if x != nil {
		return x.PocketId
	}
	return ""
}

func (x *CreateOrderRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

type GetOrdersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options    *QueryOptions `protobuf:"bytes,1,opt,name=options,proto3" json:"options,omitempty"`
	InvestorId string        `protobuf:"bytes,2,opt,name=investor_id,json=investorId,proto3" json:"investor_id,omitempty"`
	PocketId   string        `protobuf:"bytes,3,opt,name=pocket_id,json=pocketId,proto3" json:"pocket_id,omitempty"`
}

func (x *GetOrdersRequest) Reset() {
	*x = GetOrdersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrdersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrdersRequest) ProtoMessage() {}

func (x *GetOrdersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrdersRequest.ProtoReflect.Descriptor instead.
func (*GetOrdersRequest) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{106}
}

func (x *GetOrdersRequest) GetOptions() *QueryOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *GetOrdersRequest) GetInvestorId() string {
	if x != nil {
		return x.InvestorId
	}
	return ""
}

func (x *GetOrdersRequest) GetPocketId() string {
	if x != nil {
		return x.PocketId
	}
	return ""
}

type GetOrdersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count  int32    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Orders []*Order `protobuf:"bytes,2,rep,name=orders,proto3" json:"orders,omitempty"`
}

func (x *GetOrdersResponse) Reset() {
	*x = GetOrdersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrdersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrdersResponse) ProtoMessage() {}

func (x *GetOrdersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrdersResponse.ProtoReflect.Descriptor instead.
func (*GetOrdersResponse) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{107}
}

func (x *GetOrdersResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetOrdersResponse) GetOrders() []*Order {
	if x != nil {
		return x.Orders
	}
	return nil
}

type CreateCurrencyConvertorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PrimaryCurrency   string  `protobuf:"bytes,2,opt,name=primary_currency,json=primaryCurrency,proto3" json:"primary_currency,omitempty"`
	SecondaryCurrency string  `protobuf:"bytes,3,opt,name=secondary_currency,json=secondaryCurrency,proto3" json:"secondary_currency,omitempty"`
	Amount            float32 `protobuf:"fixed32,4,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *CreateCurrencyConvertorRequest) Reset() {
	*x = CreateCurrencyConvertorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCurrencyConvertorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCurrencyConvertorRequest) ProtoMessage() {}

func (x *CreateCurrencyConvertorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCurrencyConvertorRequest.ProtoReflect.Descriptor instead.
func (*CreateCurrencyConvertorRequest) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{108}
}

func (x *CreateCurrencyConvertorRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateCurrencyConvertorRequest) GetPrimaryCurrency() string {
	if x != nil {
		return x.PrimaryCurrency
	}
	return ""
}

func (x *CreateCurrencyConvertorRequest) GetSecondaryCurrency() string {
	if x != nil {
		return x.SecondaryCurrency
	}
	return ""
}

func (x *CreateCurrencyConvertorRequest) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type CreateCurrencyConvertorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateCurrencyConvertorResponse) Reset() {
	*x = CreateCurrencyConvertorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCurrencyConvertorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCurrencyConvertorResponse) ProtoMessage() {}

func (x *CreateCurrencyConvertorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCurrencyConvertorResponse.ProtoReflect.Descriptor instead.
func (*CreateCurrencyConvertorResponse) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{109}
}

func (x *CreateCurrencyConvertorResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdateCurrencyConvertorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PrimaryCurrency   string  `protobuf:"bytes,2,opt,name=primary_currency,json=primaryCurrency,proto3" json:"primary_currency,omitempty"`
	SecondaryCurrency string  `protobuf:"bytes,3,opt,name=secondary_currency,json=secondaryCurrency,proto3" json:"secondary_currency,omitempty"`
	Amount            float32 `protobuf:"fixed32,4,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *UpdateCurrencyConvertorRequest) Reset() {
	*x = UpdateCurrencyConvertorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCurrencyConvertorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCurrencyConvertorRequest) ProtoMessage() {}

func (x *UpdateCurrencyConvertorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCurrencyConvertorRequest.ProtoReflect.Descriptor instead.
func (*UpdateCurrencyConvertorRequest) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{110}
}

func (x *UpdateCurrencyConvertorRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateCurrencyConvertorRequest) GetPrimaryCurrency() string {
	if x != nil {
		return x.PrimaryCurrency
	}
	return ""
}

func (x *UpdateCurrencyConvertorRequest) GetSecondaryCurrency() string {
	if x != nil {
		return x.SecondaryCurrency
	}
	return ""
}

func (x *UpdateCurrencyConvertorRequest) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type UpdateCurrencyConvertorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UpdateCurrencyConvertorResponse) Reset() {
	*x = UpdateCurrencyConvertorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCurrencyConvertorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCurrencyConvertorResponse) ProtoMessage() {}

func (x *UpdateCurrencyConvertorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCurrencyConvertorResponse.ProtoReflect.Descriptor instead.
func (*UpdateCurrencyConvertorResponse) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{111}
}

func (x *UpdateCurrencyConvertorResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteCurrencyConvertorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteCurrencyConvertorRequest) Reset() {
	*x = DeleteCurrencyConvertorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCurrencyConvertorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCurrencyConvertorRequest) ProtoMessage() {}

func (x *DeleteCurrencyConvertorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCurrencyConvertorRequest.ProtoReflect.Descriptor instead.
func (*DeleteCurrencyConvertorRequest) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{112}
}

func (x *DeleteCurrencyConvertorRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteCurrencyConvertorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteCurrencyConvertorResponse) Reset() {
	*x = DeleteCurrencyConvertorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCurrencyConvertorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCurrencyConvertorResponse) ProtoMessage() {}

func (x *DeleteCurrencyConvertorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCurrencyConvertorResponse.ProtoReflect.Descriptor instead.
func (*DeleteCurrencyConvertorResponse) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{113}
}

func (x *DeleteCurrencyConvertorResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetCurrencyConvertorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PrimaryCurrency   string  `protobuf:"bytes,2,opt,name=primary_currency,json=primaryCurrency,proto3" json:"primary_currency,omitempty"`
	SecondaryCurrency string  `protobuf:"bytes,3,opt,name=secondary_currency,json=secondaryCurrency,proto3" json:"secondary_currency,omitempty"`
	Amount            float32 `protobuf:"fixed32,4,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *GetCurrencyConvertorResponse) Reset() {
	*x = GetCurrencyConvertorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCurrencyConvertorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrencyConvertorResponse) ProtoMessage() {}

func (x *GetCurrencyConvertorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrencyConvertorResponse.ProtoReflect.Descriptor instead.
func (*GetCurrencyConvertorResponse) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{114}
}

func (x *GetCurrencyConvertorResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetCurrencyConvertorResponse) GetPrimaryCurrency() string {
	if x != nil {
		return x.PrimaryCurrency
	}
	return ""
}

func (x *GetCurrencyConvertorResponse) GetSecondaryCurrency() string {
	if x != nil {
		return x.SecondaryCurrency
	}
	return ""
}

func (x *GetCurrencyConvertorResponse) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type GetCurrencyConvertorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrimaryCurrency   string `protobuf:"bytes,1,opt,name=primary_currency,json=primaryCurrency,proto3" json:"primary_currency,omitempty"`
	SecondaryCurrency string `protobuf:"bytes,2,opt,name=secondary_currency,json=secondaryCurrency,proto3" json:"secondary_currency,omitempty"`
}

func (x *GetCurrencyConvertorRequest) Reset() {
	*x = GetCurrencyConvertorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_service_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCurrencyConvertorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrencyConvertorRequest) ProtoMessage() {}

func (x *GetCurrencyConvertorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_service_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrencyConvertorRequest.ProtoReflect.Descriptor instead.
func (*GetCurrencyConvertorRequest) Descriptor() ([]byte, []int) {
	return file_billing_service_proto_rawDescGZIP(), []int{115}
}

func (x *GetCurrencyConvertorRequest) GetPrimaryCurrency() string {
	if x != nil {
		return x.PrimaryCurrency
	}
	return ""
}

func (x *GetCurrencyConvertorRequest) GetSecondaryCurrency() string {
	if x != nil {
		return x.SecondaryCurrency
	}
	return ""
}

var File_billing_service_proto protoreflect.FileDescriptor

var file_billing_service_proto_rawDesc = []byte{
	0x0a, 0x15, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7a, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d,
	0x61, 0x69, 0x6e, 0x47, 0x72, 0x61, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x69,
	0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x61, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x75, 0x6d,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x49,
	0x64, 0x22, 0x51, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x47,
	0x72, 0x61, 0x70, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x47, 0x72, 0x61, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x6c, 0x0a, 0x1a, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72,
	0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f,
	0x72, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64,
	0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x22, 0x59, 0x0a, 0x1b, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x42, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3a, 0x0a, 0x07, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x50, 0x6f, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x52, 0x07, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x22, 0x76, 0x0a,
	0x0f, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x46, 0x0a,
	0x0b, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x9f, 0x01, 0x0a, 0x13, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74,
	0x6f, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1b, 0x0a,
	0x09, 0x61, 0x76, 0x67, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x08, 0x61, 0x76, 0x67, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x25, 0x0a, 0x0e, 0x73, 0x65, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x65, 0x6c, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x92, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x73, 0x65,
	0x72, 0x74, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x99, 0x01, 0x0a,
	0x13, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x65, 0x67, 0x61,
	0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x72, 0x6f, 0x6b, 0x65,
	0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x72,
	0x6f, 0x6b, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x30, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50,
	0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x6a, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x44, 0x61, 0x74, 0x61, 0x42, 0x6f, 0x64, 0x79,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x66, 0x6f, 0x72, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x57, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3d, 0x0a, 0x07, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x44, 0x61,
	0x74, 0x61, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x07, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x22,
	0x58, 0x0a, 0x20, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x77,
	0x74, 0x68, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x22, 0x93, 0x01, 0x0a, 0x21, 0x43, 0x61,
	0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x50, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2b, 0x0a, 0x11, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x67, 0x72, 0x6f, 0x77,
	0x74, 0x68, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x2b, 0x0a, 0x11,
	0x64, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x64, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0xc7, 0x01, 0x0a, 0x1b, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2b, 0x0a, 0x11, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x67, 0x72, 0x6f, 0x77,
	0x74, 0x68, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x2b, 0x0a, 0x11,
	0x64, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x64, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x22, 0xec, 0x01, 0x0a, 0x23, 0x43, 0x61,
	0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x79, 0x53, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x12, 0x5b, 0x0a, 0x07, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x41, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x50, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x79, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x2e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x1a, 0x68,
	0x0a, 0x0c, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x42, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xfe, 0x01, 0x0a, 0x29, 0x43, 0x61, 0x6c,
	0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x50, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x79,
	0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x61, 0x0a, 0x07, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c,
	0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x79, 0x53, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x2e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x07, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x1a, 0x6e, 0x0a, 0x0c, 0x53, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x48, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x62, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x61, 0x6c,
	0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x50, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x33, 0x0a, 0x16, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x38,
	0x0a, 0x17, 0x54, 0x65, 0x73, 0x74, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x51, 0x75, 0x6f,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x49, 0x64, 0x73, 0x22, 0x4a, 0x0a, 0x18, 0x54, 0x65, 0x73, 0x74,
	0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x06, 0x71, 0x75,
	0x6f, 0x74, 0x65, 0x73, 0x22, 0x66, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x63, 0x6b, 0x65,
	0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x70, 0x6f, 0x63,
	0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x72,
	0x6f, 0x6d, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x74, 0x6f,
	0x5f, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x74, 0x6f, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x22, 0x66, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x66, 0x6f,
	0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x5f,
	0x73, 0x61, 0x6c, 0x65, 0x73, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73,
	0x66, 0x6f, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x63, 0x6b, 0x65,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x63, 0x6b,
	0x65, 0x74, 0x49, 0x64, 0x22, 0x7c, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x63, 0x6b, 0x65,
	0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x63,
	0x6b, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x49, 0x64, 0x52,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x64, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x4a, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x57,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x77, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x10, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x6f, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x69, 0x6e, 0x47,
	0x72, 0x61, 0x70, 0x68, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x63, 0x6b,
	0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x63,
	0x6b, 0x65, 0x74, 0x49, 0x64, 0x22, 0x4e, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x69, 0x6e,
	0x47, 0x72, 0x61, 0x70, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x22, 0x78, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x69, 0x6e,
	0x47, 0x72, 0x61, 0x70, 0x68, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x75,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x74, 0x61, 0x75, 0x6d, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x75, 0x6e, 0x69, 0x78, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x75, 0x6e, 0x69, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x22,
	0x51, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x69, 0x6e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4d,
	0x61, 0x69, 0x6e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0xc9, 0x01, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x69, 0x6e, 0x47, 0x72,
	0x61, 0x70, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x3b, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x69,
	0x6e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x66, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x43, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x49,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x69, 0x6e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x69, 0x6e, 0x47, 0x72,
	0x61, 0x70, 0x68, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x64, 0x0a, 0x1c, 0x47, 0x65, 0x74,
	0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0b, 0x69, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x52, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22,
	0xd5, 0x01, 0x0a, 0x11, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6f, 0x70, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x69,
	0x67, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x69, 0x67, 0x68, 0x12, 0x10,
	0x0a, 0x03, 0x6c, 0x6f, 0x77, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6c, 0x6f, 0x77,
	0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x4e, 0x0a, 0x05, 0x51, 0x75, 0x6f, 0x74, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x65, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x4f, 0x66, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x49, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x22, 0x52,
	0x0a, 0x1b, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x22, 0x44, 0x0a, 0x0e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x7e, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x08, 0x62,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x08,
	0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x3e, 0x0a, 0x26, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x66, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x49, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xec, 0x03, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x61, 0x6e, 0x6b, 0x5f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62,
	0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x61,
	0x6c, 0x65, 0x73, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x28, 0x0a, 0x10, 0x66, 0x75, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x66, 0x75, 0x74, 0x75, 0x72,
	0x65, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x78,
	0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x74, 0x65, 0x78, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f,
	0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70,
	0x6f, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x22, 0x38, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x49,
	0x64, 0x22, 0x65, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x47, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x57, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x41,
	0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x4f, 0x66, 0x53, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x49,
	0x64, 0x22, 0x5c, 0x0a, 0x12, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x53, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x76,
	0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0c, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22,
	0xf2, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x4f, 0x66, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x0d, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x62, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x4f, 0x66, 0x53,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41,
	0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0c, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x1a, 0x64,
	0x0a, 0x11, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x39, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x53, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x34, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x51,
	0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x49, 0x64, 0x22, 0x4f, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x4c, 0x61, 0x73, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x37, 0x0a, 0x05, 0x74, 0x69, 0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x78, 0x54, 0x69, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x74, 0x69, 0x63, 0x6b, 0x73, 0x22, 0x37, 0x0a, 0x0b, 0x46,
	0x69, 0x78, 0x41, 0x73, 0x6b, 0x54, 0x69, 0x63, 0x6b, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x22, 0x37, 0x0a, 0x0b, 0x46, 0x69, 0x78, 0x42, 0x69, 0x64, 0x54, 0x69,
	0x63, 0x6b, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0xd6, 0x01,
	0x0a, 0x10, 0x46, 0x69, 0x78, 0x54, 0x69, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x03,
	0x62, 0x69, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x78, 0x42,
	0x69, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x73, 0x52, 0x03, 0x62, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x03,
	0x61, 0x73, 0x6b, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x78, 0x41,
	0x73, 0x6b, 0x54, 0x69, 0x63, 0x6b, 0x73, 0x52, 0x03, 0x61, 0x73, 0x6b, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0xd2, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4c, 0x61,
	0x73, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x56, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74,
	0x51, 0x75, 0x6f, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x4c, 0x61, 0x73, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x09, 0x6c, 0x61, 0x73, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x1a, 0x5f, 0x0a, 0x0e, 0x4c, 0x61,
	0x73, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x37,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x46, 0x69, 0x78, 0x54, 0x69, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x4f, 0x0a, 0x07, 0x54,
	0x65, 0x73, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x22, 0x5f, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f,
	0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x62, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x73, 0x52, 0x08, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0xac, 0x02, 0x0a, 0x08, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x63, 0x6b, 0x65,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f,
	0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x61,
	0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x75, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x56, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x87, 0x04, 0x0a, 0x0d, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x63,
	0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x63, 0x6b, 0x65,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x70,
	0x6f, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x61, 0x6e, 0x6b,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x64, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21,
	0x0a, 0x0c, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x22, 0x75, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x42, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x32, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x60, 0x0a, 0x16, 0x53, 0x65, 0x74, 0x53,
	0x61, 0x6c, 0x65, 0x73, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x66, 0x6f,
	0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x61,
	0x6c, 0x65, 0x73, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x49, 0x64, 0x22, 0x39, 0x0a, 0x1e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x6d, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x61, 0x6c, 0x65, 0x73,
	0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x73, 0x61, 0x6c, 0x65, 0x73, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x9a, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x65, 0x64, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x49,
	0x64, 0x22, 0x86, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x61, 0x73, 0x68, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x61, 0x73, 0x68, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x86, 0x01, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x63, 0x6b, 0x65,
	0x74, 0x49, 0x64, 0x22, 0x83, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62,
	0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x52, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xa4, 0x01, 0x0a, 0x05, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x49, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x12, 0x3d, 0x0a, 0x0c, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0b, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x64, 0x41, 0x74,
	0x22, 0x65, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x6e, 0x61,
	0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f,
	0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x6f, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x22, 0x62, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x50, 0x6f,
	0x63, 0x6b, 0x65, 0x74, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x41, 0x0a, 0x1b, 0x55,
	0x70, 0x73, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x67,
	0x0a, 0x23, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x12, 0x15, 0x0a, 0x06, 0x74, 0x61, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x61, 0x78, 0x49, 0x64, 0x22, 0x32, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x6f,
	0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x22, 0x37, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x32, 0x0a, 0x15, 0x46, 0x69, 0x78, 0x43, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x83, 0x02, 0x0a, 0x14, 0x46, 0x69, 0x78,
	0x50, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69,
	0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x61, 0x6c,
	0x65, 0x73, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x49, 0x64, 0x22, 0x84,
	0x01, 0x0a, 0x1b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x50, 0x6f, 0x63, 0x6b, 0x65,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24,
	0x0a, 0x0e, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x50, 0x6f, 0x63, 0x6b,
	0x65, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x49, 0x64, 0x73, 0x12, 0x20, 0x0a, 0x0c, 0x74, 0x6f, 0x5f, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x6f, 0x50, 0x6f, 0x63,
	0x6b, 0x65, 0x74, 0x49, 0x64, 0x22, 0x60, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x50,
	0x6f, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x22, 0x62, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x49, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b,
	0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x22, 0x76, 0x0a, 0x16, 0x43,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x72,
	0x6f, 0x6d, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f,
	0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x74, 0x6f, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x4d, 0x0a, 0x17, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x7f, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x79, 0x53,
	0x61, 0x6c, 0x65, 0x73, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x22, 0xa5, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x42,
	0x79, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x49, 0x44, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x63, 0x6b,
	0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xdc, 0x02, 0x0a, 0x15,
	0x45, 0x78, 0x65, 0x63, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x06,
	0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x32, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x33, 0x0a, 0x08, 0x74, 0x61,
	0x78, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62,
	0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54,
	0x61, 0x78, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x74, 0x61, 0x78, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69,
	0x74, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x27, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x72, 0x6f, 0x6b,
	0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x22, 0xa4, 0x01, 0x0a, 0x0d, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b,
	0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x21,
	0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0xaa, 0x02, 0x0a, 0x07, 0x54, 0x61, 0x78, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70,
	0x6f, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x75, 0x73, 0x65, 0x72, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x16, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72,
	0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12,
	0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f,
	0x68, 0x6f, 0x75, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x49, 0x64, 0x22, 0x62,
	0x0a, 0x22, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x50,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72,
	0x49, 0x64, 0x22, 0x62, 0x0a, 0x0e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x65, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x89, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x50, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x64, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x07, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x6b, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x64, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x37, 0x0a, 0x06, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x64, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x06, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x22,
	0xfa, 0x01, 0x0a, 0x0e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x64, 0x53, 0x74, 0x6f,
	0x63, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63,
	0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x65, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x65, 0x6c, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x36, 0x0a, 0x17, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f,
	0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x15, 0x70, 0x72, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x76, 0x65, 0x72, 0x61,
	0x67, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c,
	0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x9f, 0x01, 0x0a,
	0x0e, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63,
	0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x08, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x08, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x52,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69,
	0x65, 0x73, 0x22, 0x8e, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x63,
	0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x66, 0x6f, 0x72,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x61, 0x6c,
	0x65, 0x73, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x22, 0xf4, 0x02, 0x0a, 0x14, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74,
	0x65, 0x54, 0x61, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x74, 0x61, 0x78, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x61, 0x78, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x78, 0x5f, 0x66, 0x69, 0x78, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x78, 0x46, 0x69, 0x78, 0x65, 0x64,
	0x12, 0x25, 0x0a, 0x0e, 0x74, 0x61, 0x78, 0x5f, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74,
	0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x61, 0x78, 0x43, 0x61, 0x6c,
	0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x78, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x78,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x68, 0x79, 0x73, 0x73, 0x61, 0x5f,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x68, 0x79, 0x73, 0x73, 0x61, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x2b, 0x0a, 0x11, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x62, 0x72,
	0x6f, 0x6b, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2d,
	0x0a, 0x12, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x61, 0x72, 0x74,
	0x6e, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a,
	0x07, 0x6d, 0x69, 0x6e, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6d, 0x69, 0x6e, 0x46, 0x65, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x75, 0x70,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x75, 0x70, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xb4, 0x01, 0x0a, 0x13, 0x43,
	0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x61, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63,
	0x6f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x53, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xe8, 0x02, 0x0a, 0x14, 0x45, 0x78, 0x65, 0x63, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63,
	0x6f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12,
	0x26, 0x0a, 0x0f, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x61, 0x6e, 0x6b, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x61, 0x6c, 0x65, 0x73,
	0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x73, 0x61, 0x6c, 0x65, 0x73, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f,
	0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x66, 0x72, 0x6f, 0x6d, 0x53, 0x61, 0x6c, 0x65, 0x73,
	0x66, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x22, 0x52, 0x0a, 0x1d, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x07, 0x70, 0x6f,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x22, 0x75, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x63, 0x6b,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x63,
	0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f,
	0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x2b, 0x0a, 0x11, 0x72, 0x65, 0x71, 0x75, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x71, 0x75,
	0x73, 0x74, 0x65, 0x64, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x62, 0x0a, 0x1a,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x4f, 0x66, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x71, 0x75, 0x73, 0x74, 0x65, 0x64, 0x5f,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x72, 0x65, 0x71, 0x75, 0x73, 0x74, 0x65, 0x64, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x22, 0x50, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74,
	0x73, 0x4f, 0x66, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x31, 0x0a, 0x07, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x07, 0x70, 0x6f, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x22, 0x58, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0c,
	0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0b, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x54, 0x79, 0x70, 0x65, 0x22, 0x95, 0x01, 0x0a,
	0x1b, 0x47, 0x65, 0x74, 0x46, 0x69, 0x72, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f,
	0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x6f, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x22, 0x9a, 0x04, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x46, 0x69, 0x72, 0x73,
	0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x17,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x5f, 0x63, 0x6f,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x63, 0x6f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x69, 0x63,
	0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x62, 0x61, 0x6e, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x62, 0x61, 0x6e, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x8f, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x46, 0x69, 0x72, 0x73, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x59, 0x0a, 0x14, 0x67, 0x65, 0x74, 0x46,
	0x69, 0x72, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x72, 0x73,
	0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x14, 0x67,
	0x65, 0x74, 0x46, 0x69, 0x72, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0x27, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0xe6, 0x03, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f,
	0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70,
	0x6f, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x17, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42,
	0x65, 0x66, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x29,
	0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x63, 0x6f, 0x6e,
	0x12, 0x23, 0x0a, 0x0d, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x66, 0x6f,
	0x72, 0x63, 0x65, 0x49, 0x64, 0x22, 0xdc, 0x03, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6c,
	0x61, 0x63, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x6c, 0x61, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x17, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x2a, 0x0a, 0x11, 0x65, 0x78, 0x61, 0x6e, 0x74, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x78,
	0x61, 0x6e, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x64, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x6f, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x22, 0x89, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x07, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f,
	0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64,
	0x22, 0x59, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x06, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x22, 0xa2, 0x01, 0x0a, 0x1e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29,
	0x0a, 0x10, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72,
	0x79, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x2d, 0x0a, 0x12, 0x73, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x31, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0xa2, 0x01, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x6f, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72,
	0x79, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x12, 0x2d, 0x0a, 0x12, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x5f, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x31, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x30, 0x0a, 0x1e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x31, 0x0a,
	0x1f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0xa0, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x69,
	0x6d, 0x61, 0x72, 0x79, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x2d, 0x0a, 0x12,
	0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x61, 0x72, 0x79, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x77, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72,
	0x69, 0x6d, 0x61, 0x72, 0x79, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x2d, 0x0a,
	0x12, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x61, 0x72, 0x79, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x32, 0xba, 0x1e, 0x0a,
	0x0e, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x60, 0x0a, 0x0d, 0x45, 0x78, 0x65, 0x63, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x50, 0x0a, 0x10, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x54, 0x61, 0x78, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x79, 0x12, 0x1c, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x61, 0x78, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x1a, 0x1c, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x61, 0x78, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x75, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x46, 0x69, 0x72, 0x73, 0x74, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2c, 0x2e, 0x62, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x46, 0x69, 0x72, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x46,
	0x69, 0x72, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x2e, 0x62,
	0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x51, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x5d, 0x0a, 0x0c, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x54,
	0x61, 0x78, 0x12, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x61,
	0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75,
	0x6c, 0x61, 0x74, 0x65, 0x54, 0x61, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x54, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x21,
	0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x62, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x64, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x29, 0x2e, 0x62, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x64, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x64, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8a, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x33, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x62, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x5b, 0x0a, 0x0d, 0x46, 0x69, 0x78, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x78, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x62, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x78,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x52, 0x0a, 0x0e, 0x46, 0x69, 0x78, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x78, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x62, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x14, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x43,
	0x6f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x2c, 0x2e,
	0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x1c, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x43,
	0x6f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x43, 0x6f,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x7d, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x2f, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2f, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73,
	0x66, 0x6f, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x61, 0x6c,
	0x65, 0x73, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x04, 0x54, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x4d, 0x73, 0x67, 0x1a, 0x16, 0x2e, 0x62,
	0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x51,
	0x75, 0x6f, 0x74, 0x65, 0x22, 0x00, 0x12, 0x6c, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x56, 0x32, 0x12, 0x29, 0x2e, 0x62, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x56, 0x32, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x73, 0x12, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x5d, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x65,
	0x12, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74,
	0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x63, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x4d,
	0x61, 0x70, 0x12, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x51, 0x75, 0x6f, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61,
	0x73, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x81, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x76, 0x65, 0x72,
	0x61, 0x67, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x4f, 0x66, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x73, 0x12, 0x30, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x4f, 0x66, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x4f, 0x66, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x70, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x49, 0x64, 0x12,
	0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x62, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x93, 0x01, 0x0a, 0x1e, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x66, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x12, 0x36, 0x2e,
	0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x66, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x4f, 0x66, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x69, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x69, 0x6e, 0x47, 0x72, 0x61, 0x70, 0x68,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x69, 0x6e, 0x47, 0x72,
	0x61, 0x70, 0x68, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29,
	0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x69, 0x6e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x0c, 0x47,
	0x65, 0x74, 0x4d, 0x61, 0x69, 0x6e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x12, 0x24, 0x2e, 0x62, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x4d, 0x61, 0x69, 0x6e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2d, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x69, 0x0a, 0x10, 0x54, 0x65, 0x73, 0x74, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73,
	0x74, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x47, 0x65, 0x74,
	0x4c, 0x61, 0x73, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x51, 0x75,
	0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x72, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2c, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61,
	0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x54, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x74, 0x6f, 0x63, 0x6b, 0x12, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x84, 0x01, 0x0a, 0x19, 0x43, 0x61, 0x6c, 0x63,
	0x75, 0x6c, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x50, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x31, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74,
	0x65, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75,
	0x6c, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x94,
	0x01, 0x0a, 0x21, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x77,
	0x74, 0x68, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x42, 0x79, 0x53, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x31, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65,
	0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c,
	0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x79, 0x53, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x22, 0x00, 0x12, 0x88, 0x01, 0x0a, 0x1b, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c,
	0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x42, 0x79, 0x53,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x31, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74,
	0x65, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75,
	0x6c, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x79, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x22, 0x00,
	0x12, 0x5c, 0x0a, 0x0c, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72,
	0x12, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x42,
	0x72, 0x6f, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x00, 0x12, 0x5f,
	0x0a, 0x0d, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x12,
	0x25, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x50,
	0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x00, 0x12,
	0x72, 0x0a, 0x13, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x42, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f,
	0x72, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x42, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x69,
	0x6e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x12, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d,
	0x61, 0x69, 0x6e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x1a, 0x5a, 0x18, 0x67, 0x65, 0x6e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_billing_service_proto_rawDescOnce sync.Once
	file_billing_service_proto_rawDescData = file_billing_service_proto_rawDesc
)

func file_billing_service_proto_rawDescGZIP() []byte {
	file_billing_service_proto_rawDescOnce.Do(func() {
		file_billing_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_billing_service_proto_rawDescData)
	})
	return file_billing_service_proto_rawDescData
}

var file_billing_service_proto_msgTypes = make([]protoimpl.MessageInfo, 121)
var file_billing_service_proto_goTypes = []interface{}{
	(*CreateMainGrapData)(nil),                        // 0: billing_service.CreateMainGrapData
	(*CreateMainGraphRequest)(nil),                    // 1: billing_service.CreateMainGraphRequest
	(*InvestorBillingDataRequest)(nil),                // 2: billing_service.InvestorBillingDataRequest
	(*InvestorBillingDataResponse)(nil),               // 3: billing_service.InvestorBillingDataResponse
	(*InvestorPockets)(nil),                           // 4: billing_service.InvestorPockets
	(*InvestorInstruments)(nil),                       // 5: billing_service.InvestorInstruments
	(*UpsertPartnerRequest)(nil),                      // 6: billing_service.UpsertPartnerRequest
	(*UpsertBrokerRequest)(nil),                       // 7: billing_service.UpsertBrokerRequest
	(*GetPocketsDataRequest)(nil),                     // 8: billing_service.GetPocketsDataRequest
	(*GetPocketsDataBody)(nil),                        // 9: billing_service.GetPocketsDataBody
	(*GetPocketsDataResponse)(nil),                    // 10: billing_service.GetPocketsDataResponse
	(*CalculateGrowthPercentageRequest)(nil),          // 11: billing_service.CalculateGrowthPercentageRequest
	(*CalculateGrowthPercentageResponse)(nil),         // 12: billing_service.CalculateGrowthPercentageResponse
	(*CalculatePercentageResponse)(nil),               // 13: billing_service.CalculatePercentageResponse
	(*CalculatePercentageResponseBySymbol)(nil),       // 14: billing_service.CalculatePercentageResponseBySymbol
	(*CalculateGrowthPercentageResponseBySymbol)(nil), // 15: billing_service.CalculateGrowthPercentageResponseBySymbol
	(*UpdateUserStockRequest)(nil),                    // 16: billing_service.UpdateUserStockRequest
	(*TestGetLastQuoteRequest)(nil),                   // 17: billing_service.TestGetLastQuoteRequest
	(*TestGetLastQuoteResponse)(nil),                  // 18: billing_service.TestGetLastQuoteResponse
	(*GetPocketSalesforceIdRequest)(nil),              // 19: billing_service.GetPocketSalesforceIdRequest
	(*GetPocketSalesforceId)(nil),                     // 20: billing_service.GetPocketSalesforceId
	(*GetPocketSalesforceIdResponse)(nil),             // 21: billing_service.GetPocketSalesforceIdResponse
	(*GetWithdrawalAmountRequest)(nil),                // 22: billing_service.GetWithdrawalAmountRequest
	(*GetWithdrawalAmountResponse)(nil),               // 23: billing_service.GetWithdrawalAmountResponse
	(*GetMainGraphDataRequest)(nil),                   // 24: billing_service.GetMainGraphDataRequest
	(*GetMainGraphRequest)(nil),                       // 25: billing_service.GetMainGraphRequest
	(*GetMainGraphData)(nil),                          // 26: billing_service.GetMainGraphData
	(*GetMainGraphDataResponse)(nil),                  // 27: billing_service.GetMainGraphDataResponse
	(*GetMainGraph)(nil),                              // 28: billing_service.GetMainGraph
	(*GetMainGraphResponse)(nil),                      // 29: billing_service.GetMainGraphResponse
	(*GetInstrumentHistoryResponse)(nil),              // 30: billing_service.GetInstrumentHistoryResponse
	(*InstrumentHistory)(nil),                         // 31: billing_service.InstrumentHistory
	(*Quote)(nil),                                     // 32: billing_service.Quote
	(*GetCountOfInstrumentsInTransitRequest)(nil),     // 33: billing_service.GetCountOfInstrumentsInTransitRequest
	(*GetTransitCurrenciesRequest)(nil),               // 34: billing_service.GetTransitCurrenciesRequest
	(*TransitAmounts)(nil),                            // 35: billing_service.TransitAmounts
	(*GetTransitCurrenciesResponse)(nil),              // 36: billing_service.GetTransitCurrenciesResponse
	(*GetCountOfInstrumentsInTransitResponse)(nil),    // 37: billing_service.GetCountOfInstrumentsInTransitResponse
	(*GetTransactionById)(nil),                        // 38: billing_service.GetTransactionById
	(*GetTransactionByIdRequest)(nil),                 // 39: billing_service.GetTransactionByIdRequest
	(*GetTransactionByIdResponse)(nil),                // 40: billing_service.GetTransactionByIdResponse
	(*GetAveragePriceOfSymbolsRequest)(nil),           // 41: billing_service.GetAveragePriceOfSymbolsRequest
	(*AverageSymbolPrice)(nil),                        // 42: billing_service.AverageSymbolPrice
	(*GetAveragePriceOfSymbolsResponse)(nil),          // 43: billing_service.GetAveragePriceOfSymbolsResponse
	(*GetLastQuoteRequest)(nil),                       // 44: billing_service.GetLastQuoteRequest
	(*GetLastQuoteResponse)(nil),                      // 45: billing_service.GetLastQuoteResponse
	(*FixAskTicks)(nil),                               // 46: billing_service.FixAskTicks
	(*FixBidTicks)(nil),                               // 47: billing_service.FixBidTicks
	(*FixTicksResponse)(nil),                          // 48: billing_service.FixTicksResponse
	(*GetLastQuoteMapResponse)(nil),                   // 49: billing_service.GetLastQuoteMapResponse
	(*TestMsg)(nil),                                   // 50: billing_service.TestMsg
	(*GetInvoicesRequest)(nil),                        // 51: billing_service.GetInvoicesRequest
	(*GetInvoicesResponse)(nil),                       // 52: billing_service.GetInvoicesResponse
	(*Invoices)(nil),                                  // 53: billing_service.Invoices
	(*GetTransactionsV2Request)(nil),                  // 54: billing_service.GetTransactionsV2Request
	(*TransactionV2)(nil),                             // 55: billing_service.TransactionV2
	(*GetTransactionsV2Response)(nil),                 // 56: billing_service.GetTransactionsV2Response
	(*SetSalesforceIdRequest)(nil),                    // 57: billing_service.SetSalesforceIdRequest
	(*UpdateTransactionStatusReponse)(nil),            // 58: billing_service.UpdateTransactionStatusReponse
	(*UpdateTransactionStatusRequest)(nil),            // 59: billing_service.UpdateTransactionStatusRequest
	(*GetCurrentAssetValueRequest)(nil),               // 60: billing_service.GetCurrentAssetValueRequest
	(*GetCurrentAssetValueResponse)(nil),              // 61: billing_service.GetCurrentAssetValueResponse
	(*GetAssetListRequest)(nil),                       // 62: billing_service.GetAssetListRequest
	(*GetAssetListResponse)(nil),                      // 63: billing_service.GetAssetListResponse
	(*Asset)(nil),                                     // 64: billing_service.Asset
	(*GetPocketAnalyticsRequest)(nil),                 // 65: billing_service.GetPocketAnalyticsRequest
	(*GetPocketAnalyticsResponse)(nil),                // 66: billing_service.GetPocketAnalyticsResponse
	(*UpsertComissionGroupRequest)(nil),               // 67: billing_service.UpsertComissionGroupRequest
	(*UpsertComissionGroupRelationRequest)(nil),       // 68: billing_service.UpsertComissionGroupRelationRequest
	(*GetPocketNameRequest)(nil),                      // 69: billing_service.GetPocketNameRequest
	(*GetPocketNameResponse)(nil),                     // 70: billing_service.GetPocketNameResponse
	(*FixCancelOrderRequest)(nil),                     // 71: billing_service.FixCancelOrderRequest
	(*FixPlaceOrderRequest)(nil),                      // 72: billing_service.FixPlaceOrderRequest
	(*TransferPocketOrdersRequest)(nil),               // 73: billing_service.TransferPocketOrdersRequest
	(*DeletePocketRequest)(nil),                       // 74: billing_service.DeletePocketRequest
	(*GetInstrumentPurchaseStatusResponse)(nil),       // 75: billing_service.GetInstrumentPurchaseStatusResponse
	(*ConvertCurrencyRequest)(nil),                    // 76: billing_service.ConvertCurrencyRequest
	(*ConvertCurrencyResponse)(nil),                   // 77: billing_service.ConvertCurrencyResponse
	(*GetNameBySalesforceIDRequest)(nil),              // 78: billing_service.GetNameBySalesforceIDRequest
	(*GetNameBySalesforceIDResponse)(nil),             // 79: billing_service.GetNameBySalesforceIDResponse
	(*ExecOperationResponse)(nil),                     // 80: billing_service.ExecOperationResponse
	(*OperationInfo)(nil),                             // 81: billing_service.OperationInfo
	(*TaxInfo)(nil),                                   // 82: billing_service.TaxInfo
	(*GetInstrumentPurchaseStatusRequest)(nil),        // 83: billing_service.GetInstrumentPurchaseStatusRequest
	(*PurchaseStatus)(nil),                            // 84: billing_service.PurchaseStatus
	(*GetPurchasedStockRequest)(nil),                  // 85: billing_service.GetPurchasedStockRequest
	(*GetPurchasedStocksResponse)(nil),                // 86: billing_service.GetPurchasedStocksResponse
	(*PurchasedStock)(nil),                            // 87: billing_service.PurchasedStock
	(*PocketDetailed)(nil),                            // 88: billing_service.PocketDetailed
	(*GetCurrenciesResponse)(nil),                     // 89: billing_service.GetCurrenciesResponse
	(*UpdatePocketRequest)(nil),                       // 90: billing_service.UpdatePocketRequest
	(*CalculateTaxResponse)(nil),                      // 91: billing_service.CalculateTaxResponse
	(*CalculateTaxRequest)(nil),                       // 92: billing_service.CalculateTaxRequest
	(*GetOperationsResponse)(nil),                     // 93: billing_service.GetOperationsResponse
	(*ExecOperationRequest)(nil),                      // 94: billing_service.ExecOperationRequest
	(*InitializeUserPocketsResponse)(nil),             // 95: billing_service.InitializeUserPocketsResponse
	(*GetPocketRequest)(nil),                          // 96: billing_service.GetPocketRequest
	(*GetAllPocketsOfUserRequest)(nil),                // 97: billing_service.GetAllPocketsOfUserRequest
	(*GetAllPocketsOfUserResponse)(nil),               // 98: billing_service.GetAllPocketsOfUserResponse
	(*GetPocketTypesResponse)(nil),                    // 99: billing_service.GetPocketTypesResponse
	(*GetFirstTransactionsRequest)(nil),               // 100: billing_service.GetFirstTransactionsRequest
	(*GetFirstTransactions)(nil),                      // 101: billing_service.GetFirstTransactions
	(*GetFirstTransactionsResponse)(nil),              // 102: billing_service.GetFirstTransactionsResponse
	(*GetTransactionRequest)(nil),                     // 103: billing_service.GetTransactionRequest
	(*GetTransactionResponse)(nil),                    // 104: billing_service.GetTransactionResponse
	(*CreateOrderRequest)(nil),                        // 105: billing_service.CreateOrderRequest
	(*GetOrdersRequest)(nil),                          // 106: billing_service.GetOrdersRequest
	(*GetOrdersResponse)(nil),                         // 107: billing_service.GetOrdersResponse
	(*CreateCurrencyConvertorRequest)(nil),            // 108: billing_service.CreateCurrencyConvertorRequest
	(*CreateCurrencyConvertorResponse)(nil),           // 109: billing_service.CreateCurrencyConvertorResponse
	(*UpdateCurrencyConvertorRequest)(nil),            // 110: billing_service.UpdateCurrencyConvertorRequest
	(*UpdateCurrencyConvertorResponse)(nil),           // 111: billing_service.UpdateCurrencyConvertorResponse
	(*DeleteCurrencyConvertorRequest)(nil),            // 112: billing_service.DeleteCurrencyConvertorRequest
	(*DeleteCurrencyConvertorResponse)(nil),           // 113: billing_service.DeleteCurrencyConvertorResponse
	(*GetCurrencyConvertorResponse)(nil),              // 114: billing_service.GetCurrencyConvertorResponse
	(*GetCurrencyConvertorRequest)(nil),               // 115: billing_service.GetCurrencyConvertorRequest
	nil,                                               // 116: billing_service.CalculatePercentageResponseBySymbol.SymbolsEntry
	nil,                                               // 117: billing_service.CalculateGrowthPercentageResponseBySymbol.SymbolsEntry
	nil,                                               // 118: billing_service.GetMainGraph.DataEntry
	nil,                                               // 119: billing_service.GetAveragePriceOfSymbolsResponse.AveragePriceEntry
	nil,                                               // 120: billing_service.GetLastQuoteMapResponse.LastQuoteEntry
	(*timestamp.Timestamp)(nil),                       // 121: google.protobuf.Timestamp
	(*Pocket)(nil),                                    // 122: billing_service.Pocket
	(*QueryOptions)(nil),                              // 123: billing_service.queryOptions
	(*PocketBalance)(nil),                             // 124: billing_service.PocketBalance
	(*Currency)(nil),                                  // 125: billing_service.Currency
	(*Operation)(nil),                                 // 126: billing_service.Operation
	(*PocketType)(nil),                                // 127: billing_service.PocketType
	(*Order)(nil),                                     // 128: billing_service.Order
	(*TaxProperty)(nil),                               // 129: billing_service.TaxProperty
	(*empty.Empty)(nil),                               // 130: google.protobuf.Empty
	(*FixOrderResponse)(nil),                          // 131: billing_service.FixOrderResponse
}
var file_billing_service_proto_depIdxs = []int32{
	0,   // 0: billing_service.CreateMainGraphRequest.data:type_name -> billing_service.CreateMainGrapData
	4,   // 1: billing_service.InvestorBillingDataResponse.pockets:type_name -> billing_service.InvestorPockets
	5,   // 2: billing_service.InvestorPockets.instruments:type_name -> billing_service.InvestorInstruments
	9,   // 3: billing_service.GetPocketsDataResponse.pockets:type_name -> billing_service.GetPocketsDataBody
	116, // 4: billing_service.CalculatePercentageResponseBySymbol.symbols:type_name -> billing_service.CalculatePercentageResponseBySymbol.SymbolsEntry
	117, // 5: billing_service.CalculateGrowthPercentageResponseBySymbol.symbols:type_name -> billing_service.CalculateGrowthPercentageResponseBySymbol.SymbolsEntry
	32,  // 6: billing_service.TestGetLastQuoteResponse.quotes:type_name -> billing_service.Quote
	20,  // 7: billing_service.GetPocketSalesforceIdResponse.response:type_name -> billing_service.GetPocketSalesforceId
	26,  // 8: billing_service.GetMainGraphDataResponse.data:type_name -> billing_service.GetMainGraphData
	118, // 9: billing_service.GetMainGraph.data:type_name -> billing_service.GetMainGraph.DataEntry
	28,  // 10: billing_service.GetMainGraphResponse.list:type_name -> billing_service.GetMainGraph
	31,  // 11: billing_service.GetInstrumentHistoryResponse.instruments:type_name -> billing_service.InstrumentHistory
	35,  // 12: billing_service.GetTransitCurrenciesResponse.balances:type_name -> billing_service.TransitAmounts
	38,  // 13: billing_service.GetTransactionByIdResponse.transactions:type_name -> billing_service.GetTransactionById
	119, // 14: billing_service.GetAveragePriceOfSymbolsResponse.average_price:type_name -> billing_service.GetAveragePriceOfSymbolsResponse.AveragePriceEntry
	48,  // 15: billing_service.GetLastQuoteResponse.ticks:type_name -> billing_service.FixTicksResponse
	47,  // 16: billing_service.FixTicksResponse.bid:type_name -> billing_service.FixBidTicks
	46,  // 17: billing_service.FixTicksResponse.ask:type_name -> billing_service.FixAskTicks
	120, // 18: billing_service.GetLastQuoteMapResponse.last_quote:type_name -> billing_service.GetLastQuoteMapResponse.LastQuoteEntry
	53,  // 19: billing_service.GetInvoicesResponse.invoices:type_name -> billing_service.Invoices
	55,  // 20: billing_service.GetTransactionsV2Response.transactions:type_name -> billing_service.TransactionV2
	64,  // 21: billing_service.GetAssetListResponse.assets:type_name -> billing_service.Asset
	121, // 22: billing_service.Asset.purchased_at:type_name -> google.protobuf.Timestamp
	84,  // 23: billing_service.GetInstrumentPurchaseStatusResponse.statuses:type_name -> billing_service.PurchaseStatus
	122, // 24: billing_service.ExecOperationResponse.pocket:type_name -> billing_service.Pocket
	81,  // 25: billing_service.ExecOperationResponse.info:type_name -> billing_service.OperationInfo
	82,  // 26: billing_service.ExecOperationResponse.tax_list:type_name -> billing_service.TaxInfo
	123, // 27: billing_service.GetPurchasedStockRequest.options:type_name -> billing_service.queryOptions
	87,  // 28: billing_service.GetPurchasedStocksResponse.stocks:type_name -> billing_service.PurchasedStock
	124, // 29: billing_service.PocketDetailed.balances:type_name -> billing_service.PocketBalance
	125, // 30: billing_service.GetCurrenciesResponse.currencies:type_name -> billing_service.Currency
	126, // 31: billing_service.GetOperationsResponse.operations:type_name -> billing_service.Operation
	122, // 32: billing_service.InitializeUserPocketsResponse.pockets:type_name -> billing_service.Pocket
	122, // 33: billing_service.GetAllPocketsOfUserResponse.pockets:type_name -> billing_service.Pocket
	127, // 34: billing_service.GetPocketTypesResponse.pockets_type:type_name -> billing_service.PocketType
	101, // 35: billing_service.GetFirstTransactionsResponse.getFirstTransactions:type_name -> billing_service.GetFirstTransactions
	123, // 36: billing_service.GetOrdersRequest.options:type_name -> billing_service.queryOptions
	128, // 37: billing_service.GetOrdersResponse.orders:type_name -> billing_service.Order
	13,  // 38: billing_service.CalculatePercentageResponseBySymbol.SymbolsEntry.value:type_name -> billing_service.CalculatePercentageResponse
	12,  // 39: billing_service.CalculateGrowthPercentageResponseBySymbol.SymbolsEntry.value:type_name -> billing_service.CalculateGrowthPercentageResponse
	30,  // 40: billing_service.GetMainGraph.DataEntry.value:type_name -> billing_service.GetInstrumentHistoryResponse
	42,  // 41: billing_service.GetAveragePriceOfSymbolsResponse.AveragePriceEntry.value:type_name -> billing_service.AverageSymbolPrice
	48,  // 42: billing_service.GetLastQuoteMapResponse.LastQuoteEntry.value:type_name -> billing_service.FixTicksResponse
	94,  // 43: billing_service.BillingService.ExecOperation:input_type -> billing_service.ExecOperationRequest
	129, // 44: billing_service.BillingService.UpsertTaxPropery:input_type -> billing_service.TaxProperty
	100, // 45: billing_service.BillingService.GetFirstTransactions:input_type -> billing_service.GetFirstTransactionsRequest
	103, // 46: billing_service.BillingService.GetTransaction:input_type -> billing_service.GetTransactionRequest
	130, // 47: billing_service.BillingService.GetOperations:input_type -> google.protobuf.Empty
	92,  // 48: billing_service.BillingService.CalculateTax:input_type -> billing_service.CalculateTaxRequest
	106, // 49: billing_service.BillingService.GetOrders:input_type -> billing_service.GetOrdersRequest
	105, // 50: billing_service.BillingService.CreateOrder:input_type -> billing_service.CreateOrderRequest
	85,  // 51: billing_service.BillingService.GetPurchasedStocks:input_type -> billing_service.GetPurchasedStockRequest
	83,  // 52: billing_service.BillingService.GetInstrumentPurchaseStatus:input_type -> billing_service.GetInstrumentPurchaseStatusRequest
	72,  // 53: billing_service.BillingService.FixPlaceOrder:input_type -> billing_service.FixPlaceOrderRequest
	71,  // 54: billing_service.BillingService.FixCancelOrder:input_type -> billing_service.FixCancelOrderRequest
	69,  // 55: billing_service.BillingService.GetPocketName:input_type -> billing_service.GetPocketNameRequest
	67,  // 56: billing_service.BillingService.UpsertComissionGroup:input_type -> billing_service.UpsertComissionGroupRequest
	68,  // 57: billing_service.BillingService.UpsertComissionGroupRelation:input_type -> billing_service.UpsertComissionGroupRelationRequest
	59,  // 58: billing_service.BillingService.UpdateTransactionStatus:input_type -> billing_service.UpdateTransactionStatusRequest
	57,  // 59: billing_service.BillingService.SetSalesforceId:input_type -> billing_service.SetSalesforceIdRequest
	50,  // 60: billing_service.BillingService.Test:input_type -> billing_service.TestMsg
	54,  // 61: billing_service.BillingService.GetTransactionsV2:input_type -> billing_service.GetTransactionsV2Request
	51,  // 62: billing_service.BillingService.GetInvoices:input_type -> billing_service.GetInvoicesRequest
	44,  // 63: billing_service.BillingService.GetLastQuote:input_type -> billing_service.GetLastQuoteRequest
	44,  // 64: billing_service.BillingService.GetLastQuoteMap:input_type -> billing_service.GetLastQuoteRequest
	41,  // 65: billing_service.BillingService.GetAveragePriceOfSymbols:input_type -> billing_service.GetAveragePriceOfSymbolsRequest
	39,  // 66: billing_service.BillingService.GetTransactionsById:input_type -> billing_service.GetTransactionByIdRequest
	33,  // 67: billing_service.BillingService.GetCountOfInstrumentsInTransit:input_type -> billing_service.GetCountOfInstrumentsInTransitRequest
	24,  // 68: billing_service.BillingService.GetMainGraphData:input_type -> billing_service.GetMainGraphDataRequest
	25,  // 69: billing_service.BillingService.GetMainGraph:input_type -> billing_service.GetMainGraphRequest
	17,  // 70: billing_service.BillingService.TestGetLastQuote:input_type -> billing_service.TestGetLastQuoteRequest
	22,  // 71: billing_service.BillingService.GetWithdrawalAmount:input_type -> billing_service.GetWithdrawalAmountRequest
	16,  // 72: billing_service.BillingService.UpdateUserStock:input_type -> billing_service.UpdateUserStockRequest
	11,  // 73: billing_service.BillingService.CalculateGrowthPercentage:input_type -> billing_service.CalculateGrowthPercentageRequest
	11,  // 74: billing_service.BillingService.CalculateGrowthPercentageBySymbol:input_type -> billing_service.CalculateGrowthPercentageRequest
	11,  // 75: billing_service.BillingService.CalculatePercentageBySymbol:input_type -> billing_service.CalculateGrowthPercentageRequest
	7,   // 76: billing_service.BillingService.UpsertBroker:input_type -> billing_service.UpsertBrokerRequest
	6,   // 77: billing_service.BillingService.UpsertPartner:input_type -> billing_service.UpsertPartnerRequest
	2,   // 78: billing_service.BillingService.InvestorBillingData:input_type -> billing_service.InvestorBillingDataRequest
	1,   // 79: billing_service.BillingService.CreateMainGraph:input_type -> billing_service.CreateMainGraphRequest
	80,  // 80: billing_service.BillingService.ExecOperation:output_type -> billing_service.ExecOperationResponse
	129, // 81: billing_service.BillingService.UpsertTaxPropery:output_type -> billing_service.TaxProperty
	102, // 82: billing_service.BillingService.GetFirstTransactions:output_type -> billing_service.GetFirstTransactionsResponse
	104, // 83: billing_service.BillingService.GetTransaction:output_type -> billing_service.GetTransactionResponse
	93,  // 84: billing_service.BillingService.GetOperations:output_type -> billing_service.GetOperationsResponse
	91,  // 85: billing_service.BillingService.CalculateTax:output_type -> billing_service.CalculateTaxResponse
	107, // 86: billing_service.BillingService.GetOrders:output_type -> billing_service.GetOrdersResponse
	128, // 87: billing_service.BillingService.CreateOrder:output_type -> billing_service.Order
	86,  // 88: billing_service.BillingService.GetPurchasedStocks:output_type -> billing_service.GetPurchasedStocksResponse
	75,  // 89: billing_service.BillingService.GetInstrumentPurchaseStatus:output_type -> billing_service.GetInstrumentPurchaseStatusResponse
	131, // 90: billing_service.BillingService.FixPlaceOrder:output_type -> billing_service.FixOrderResponse
	130, // 91: billing_service.BillingService.FixCancelOrder:output_type -> google.protobuf.Empty
	70,  // 92: billing_service.BillingService.GetPocketName:output_type -> billing_service.GetPocketNameResponse
	130, // 93: billing_service.BillingService.UpsertComissionGroup:output_type -> google.protobuf.Empty
	130, // 94: billing_service.BillingService.UpsertComissionGroupRelation:output_type -> google.protobuf.Empty
	58,  // 95: billing_service.BillingService.UpdateTransactionStatus:output_type -> billing_service.UpdateTransactionStatusReponse
	130, // 96: billing_service.BillingService.SetSalesforceId:output_type -> google.protobuf.Empty
	32,  // 97: billing_service.BillingService.Test:output_type -> billing_service.Quote
	56,  // 98: billing_service.BillingService.GetTransactionsV2:output_type -> billing_service.GetTransactionsV2Response
	52,  // 99: billing_service.BillingService.GetInvoices:output_type -> billing_service.GetInvoicesResponse
	45,  // 100: billing_service.BillingService.GetLastQuote:output_type -> billing_service.GetLastQuoteResponse
	49,  // 101: billing_service.BillingService.GetLastQuoteMap:output_type -> billing_service.GetLastQuoteMapResponse
	43,  // 102: billing_service.BillingService.GetAveragePriceOfSymbols:output_type -> billing_service.GetAveragePriceOfSymbolsResponse
	40,  // 103: billing_service.BillingService.GetTransactionsById:output_type -> billing_service.GetTransactionByIdResponse
	37,  // 104: billing_service.BillingService.GetCountOfInstrumentsInTransit:output_type -> billing_service.GetCountOfInstrumentsInTransitResponse
	27,  // 105: billing_service.BillingService.GetMainGraphData:output_type -> billing_service.GetMainGraphDataResponse
	30,  // 106: billing_service.BillingService.GetMainGraph:output_type -> billing_service.GetInstrumentHistoryResponse
	18,  // 107: billing_service.BillingService.TestGetLastQuote:output_type -> billing_service.TestGetLastQuoteResponse
	23,  // 108: billing_service.BillingService.GetWithdrawalAmount:output_type -> billing_service.GetWithdrawalAmountResponse
	130, // 109: billing_service.BillingService.UpdateUserStock:output_type -> google.protobuf.Empty
	12,  // 110: billing_service.BillingService.CalculateGrowthPercentage:output_type -> billing_service.CalculateGrowthPercentageResponse
	15,  // 111: billing_service.BillingService.CalculateGrowthPercentageBySymbol:output_type -> billing_service.CalculateGrowthPercentageResponseBySymbol
	14,  // 112: billing_service.BillingService.CalculatePercentageBySymbol:output_type -> billing_service.CalculatePercentageResponseBySymbol
	7,   // 113: billing_service.BillingService.UpsertBroker:output_type -> billing_service.UpsertBrokerRequest
	6,   // 114: billing_service.BillingService.UpsertPartner:output_type -> billing_service.UpsertPartnerRequest
	3,   // 115: billing_service.BillingService.InvestorBillingData:output_type -> billing_service.InvestorBillingDataResponse
	130, // 116: billing_service.BillingService.CreateMainGraph:output_type -> google.protobuf.Empty
	80,  // [80:117] is the sub-list for method output_type
	43,  // [43:80] is the sub-list for method input_type
	43,  // [43:43] is the sub-list for extension type_name
	43,  // [43:43] is the sub-list for extension extendee
	0,   // [0:43] is the sub-list for field type_name
}

func init() { file_billing_service_proto_init() }
func file_billing_service_proto_init() {
	if File_billing_service_proto != nil {
		return
	}
	file_billing_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_billing_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMainGrapData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMainGraphRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvestorBillingDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvestorBillingDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvestorPockets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvestorInstruments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertPartnerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertBrokerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPocketsDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPocketsDataBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPocketsDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculateGrowthPercentageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculateGrowthPercentageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculatePercentageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculatePercentageResponseBySymbol); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculateGrowthPercentageResponseBySymbol); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserStockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestGetLastQuoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestGetLastQuoteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPocketSalesforceIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPocketSalesforceId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPocketSalesforceIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWithdrawalAmountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWithdrawalAmountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMainGraphDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMainGraphRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMainGraphData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMainGraphDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMainGraph); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMainGraphResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInstrumentHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstrumentHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Quote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCountOfInstrumentsInTransitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransitCurrenciesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransitAmounts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransitCurrenciesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCountOfInstrumentsInTransitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionById); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAveragePriceOfSymbolsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AverageSymbolPrice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAveragePriceOfSymbolsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLastQuoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLastQuoteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FixAskTicks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FixBidTicks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FixTicksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLastQuoteMapResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInvoicesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInvoicesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Invoices); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionsV2Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionsV2Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetSalesforceIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTransactionStatusReponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTransactionStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCurrentAssetValueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCurrentAssetValueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAssetListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAssetListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Asset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPocketAnalyticsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPocketAnalyticsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertComissionGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertComissionGroupRelationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPocketNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPocketNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FixCancelOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FixPlaceOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferPocketOrdersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePocketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInstrumentPurchaseStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConvertCurrencyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConvertCurrencyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNameBySalesforceIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNameBySalesforceIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecOperationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperationInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaxInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInstrumentPurchaseStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurchaseStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPurchasedStockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPurchasedStocksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurchasedStock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PocketDetailed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCurrenciesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePocketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculateTaxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculateTaxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOperationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecOperationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitializeUserPocketsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPocketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllPocketsOfUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllPocketsOfUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPocketTypesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFirstTransactionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFirstTransactions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFirstTransactionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrdersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrdersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCurrencyConvertorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCurrencyConvertorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCurrencyConvertorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCurrencyConvertorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCurrencyConvertorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCurrencyConvertorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCurrencyConvertorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_service_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCurrencyConvertorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_billing_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   121,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_billing_service_proto_goTypes,
		DependencyIndexes: file_billing_service_proto_depIdxs,
		MessageInfos:      file_billing_service_proto_msgTypes,
	}.Build()
	File_billing_service_proto = out.File
	file_billing_service_proto_rawDesc = nil
	file_billing_service_proto_goTypes = nil
	file_billing_service_proto_depIdxs = nil
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.6.1
// source: instrument_service.proto

package instrument_service

import (
	empty "github.com/golang/protobuf/ptypes/empty"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddFavouriteInstrumentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvestorId       string `protobuf:"bytes,1,opt,name=investor_id,json=investorId,proto3" json:"investor_id,omitempty"`
	InstrumentId     string `protobuf:"bytes,2,opt,name=instrument_id,json=instrumentId,proto3" json:"instrument_id,omitempty"`
	InstrumentTicker string `protobuf:"bytes,3,opt,name=instrument_ticker,json=instrumentTicker,proto3" json:"instrument_ticker,omitempty"`
}

func (x *AddFavouriteInstrumentRequest) Reset() {
	*x = AddFavouriteInstrumentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instrument_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFavouriteInstrumentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFavouriteInstrumentRequest) ProtoMessage() {}

func (x *AddFavouriteInstrumentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_instrument_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFavouriteInstrumentRequest.ProtoReflect.Descriptor instead.
func (*AddFavouriteInstrumentRequest) Descriptor() ([]byte, []int) {
	return file_instrument_service_proto_rawDescGZIP(), []int{0}
}

func (x *AddFavouriteInstrumentRequest) GetInvestorId() string {
	if x != nil {
		return x.InvestorId
	}
	return ""
}

func (x *AddFavouriteInstrumentRequest) GetInstrumentId() string {
	if x != nil {
		return x.InstrumentId
	}
	return ""
}

func (x *AddFavouriteInstrumentRequest) GetInstrumentTicker() string {
	if x != nil {
		return x.InstrumentTicker
	}
	return ""
}

type InvestorId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvestorId string `protobuf:"bytes,1,opt,name=investor_id,json=investorId,proto3" json:"investor_id,omitempty"`
}

func (x *InvestorId) Reset() {
	*x = InvestorId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instrument_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvestorId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvestorId) ProtoMessage() {}

func (x *InvestorId) ProtoReflect() protoreflect.Message {
	mi := &file_instrument_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvestorId.ProtoReflect.Descriptor instead.
func (*InvestorId) Descriptor() ([]byte, []int) {
	return file_instrument_service_proto_rawDescGZIP(), []int{1}
}

func (x *InvestorId) GetInvestorId() string {
	if x != nil {
		return x.InvestorId
	}
	return ""
}

type FavouriteInstrumentList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instruments []*FavouriteInstrument `protobuf:"bytes,1,rep,name=instruments,proto3" json:"instruments,omitempty"`
}

func (x *FavouriteInstrumentList) Reset() {
	*x = FavouriteInstrumentList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instrument_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FavouriteInstrumentList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavouriteInstrumentList) ProtoMessage() {}

func (x *FavouriteInstrumentList) ProtoReflect() protoreflect.Message {
	mi := &file_instrument_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavouriteInstrumentList.ProtoReflect.Descriptor instead.
func (*FavouriteInstrumentList) Descriptor() ([]byte, []int) {
	return file_instrument_service_proto_rawDescGZIP(), []int{2}
}

func (x *FavouriteInstrumentList) GetInstruments() []*FavouriteInstrument {
	if x != nil {
		return x.Instruments
	}
	return nil
}

type IsInstrumentFavouriteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsFavourite bool `protobuf:"varint,1,opt,name=is_favourite,json=isFavourite,proto3" json:"is_favourite,omitempty"`
}

func (x *IsInstrumentFavouriteResponse) Reset() {
	*x = IsInstrumentFavouriteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instrument_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsInstrumentFavouriteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsInstrumentFavouriteResponse) ProtoMessage() {}

func (x *IsInstrumentFavouriteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_instrument_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsInstrumentFavouriteResponse.ProtoReflect.Descriptor instead.
func (*IsInstrumentFavouriteResponse) Descriptor() ([]byte, []int) {
	return file_instrument_service_proto_rawDescGZIP(), []int{3}
}

func (x *IsInstrumentFavouriteResponse) GetIsFavourite() bool {
	if x != nil {
		return x.IsFavourite
	}
	return false
}

type GetInstrumentsByTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SymbolType string `protobuf:"bytes,1,opt,name=symbol_type,json=symbolType,proto3" json:"symbol_type,omitempty"`
}

func (x *GetInstrumentsByTypeRequest) Reset() {
	*x = GetInstrumentsByTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instrument_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInstrumentsByTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstrumentsByTypeRequest) ProtoMessage() {}

func (x *GetInstrumentsByTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_instrument_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInstrumentsByTypeRequest.ProtoReflect.Descriptor instead.
func (*GetInstrumentsByTypeRequest) Descriptor() ([]byte, []int) {
	return file_instrument_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetInstrumentsByTypeRequest) GetSymbolType() string {
	if x != nil {
		return x.SymbolType
	}
	return ""
}

type GetTypesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FixTypes []*FixType `protobuf:"bytes,1,rep,name=fix_types,json=fixTypes,proto3" json:"fix_types,omitempty"`
}

func (x *GetTypesResponse) Reset() {
	*x = GetTypesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instrument_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTypesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTypesResponse) ProtoMessage() {}

func (x *GetTypesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_instrument_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTypesResponse.ProtoReflect.Descriptor instead.
func (*GetTypesResponse) Descriptor() ([]byte, []int) {
	return file_instrument_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetTypesResponse) GetFixTypes() []*FixType {
	if x != nil {
		return x.FixTypes
	}
	return nil
}

type GetGroupsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Groups []*FixGroupResponse `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *GetGroupsResponse) Reset() {
	*x = GetGroupsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instrument_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupsResponse) ProtoMessage() {}

func (x *GetGroupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_instrument_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupsResponse.ProtoReflect.Descriptor instead.
func (*GetGroupsResponse) Descriptor() ([]byte, []int) {
	return file_instrument_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetGroupsResponse) GetGroups() []*FixGroupResponse {
	if x != nil {
		return x.Groups
	}
	return nil
}

type GetExchangesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exchanges []*FixExchangesResponse `protobuf:"bytes,1,rep,name=exchanges,proto3" json:"exchanges,omitempty"`
}

func (x *GetExchangesResponse) Reset() {
	*x = GetExchangesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instrument_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExchangesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExchangesResponse) ProtoMessage() {}

func (x *GetExchangesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_instrument_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExchangesResponse.ProtoReflect.Descriptor instead.
func (*GetExchangesResponse) Descriptor() ([]byte, []int) {
	return file_instrument_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetExchangesResponse) GetExchanges() []*FixExchangesResponse {
	if x != nil {
		return x.Exchanges
	}
	return nil
}

type RetrieveStoriesByIdsRequests struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *RetrieveStoriesByIdsRequests) Reset() {
	*x = RetrieveStoriesByIdsRequests{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instrument_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveStoriesByIdsRequests) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveStoriesByIdsRequests) ProtoMessage() {}

func (x *RetrieveStoriesByIdsRequests) ProtoReflect() protoreflect.Message {
	mi := &file_instrument_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveStoriesByIdsRequests.ProtoReflect.Descriptor instead.
func (*RetrieveStoriesByIdsRequests) Descriptor() ([]byte, []int) {
	return file_instrument_service_proto_rawDescGZIP(), []int{8}
}

func (x *RetrieveStoriesByIdsRequests) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type RetrieveStoriesByIdsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stories []*NewsStory `protobuf:"bytes,1,rep,name=stories,proto3" json:"stories,omitempty"`
}

func (x *RetrieveStoriesByIdsResponse) Reset() {
	*x = RetrieveStoriesByIdsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instrument_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveStoriesByIdsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveStoriesByIdsResponse) ProtoMessage() {}

func (x *RetrieveStoriesByIdsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_instrument_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveStoriesByIdsResponse.ProtoReflect.Descriptor instead.
func (*RetrieveStoriesByIdsResponse) Descriptor() ([]byte, []int) {
	return file_instrument_service_proto_rawDescGZIP(), []int{9}
}

func (x *RetrieveStoriesByIdsResponse) GetStories() []*NewsStory {
	if x != nil {
		return x.Stories
	}
	return nil
}

type NewsStory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Date  string `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	Story string `protobuf:"bytes,3,opt,name=story,proto3" json:"story,omitempty"`
}

func (x *NewsStory) Reset() {
	*x = NewsStory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instrument_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewsStory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewsStory) ProtoMessage() {}

func (x *NewsStory) ProtoReflect() protoreflect.Message {
	mi := &file_instrument_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewsStory.ProtoReflect.Descriptor instead.
func (*NewsStory) Descriptor() ([]byte, []int) {
	return file_instrument_service_proto_rawDescGZIP(), []int{10}
}

func (x *NewsStory) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NewsStory) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *NewsStory) GetStory() string {
	if x != nil {
		return x.Story
	}
	return ""
}

type GetApplicantInfoByExternalIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdDocType          string `protobuf:"bytes,1,opt,name=id_doc_type,json=idDocType,proto3" json:"id_doc_type,omitempty"`
	Country            string `protobuf:"bytes,2,opt,name=country,proto3" json:"country,omitempty"`
	FirstName          string `protobuf:"bytes,3,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	FirstNameEn        string `protobuf:"bytes,4,opt,name=first_name_en,json=firstNameEn,proto3" json:"first_name_en,omitempty"`
	LastName           string `protobuf:"bytes,5,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	LastNameEn         string `protobuf:"bytes,6,opt,name=last_name_en,json=lastNameEn,proto3" json:"last_name_en,omitempty"`
	IssuedDate         string `protobuf:"bytes,7,opt,name=issued_date,json=issuedDate,proto3" json:"issued_date,omitempty"`
	ValidUntil         string `protobuf:"bytes,8,opt,name=valid_until,json=validUntil,proto3" json:"valid_until,omitempty"`
	Number             string `protobuf:"bytes,9,opt,name=number,proto3" json:"number,omitempty"`
	AdditionalNumber   string `protobuf:"bytes,10,opt,name=additional_number,json=additionalNumber,proto3" json:"additional_number,omitempty"`
	DateOfBirth        string `protobuf:"bytes,11,opt,name=date_of_birth,json=dateOfBirth,proto3" json:"date_of_birth,omitempty"`
	PlaceOfBirthEn     string `protobuf:"bytes,12,opt,name=place_of_birth_en,json=placeOfBirthEn,proto3" json:"place_of_birth_en,omitempty"`
	Email              string `protobuf:"bytes,13,opt,name=email,proto3" json:"email,omitempty"`
	Phone              string `protobuf:"bytes,14,opt,name=phone,proto3" json:"phone,omitempty"`
	MiddleName         string `protobuf:"bytes,15,opt,name=middle_name,json=middleName,proto3" json:"middle_name,omitempty"`
	Gender             string `protobuf:"bytes,16,opt,name=gender,proto3" json:"gender,omitempty"`
	PlaceOfBirth       string `protobuf:"bytes,17,opt,name=place_of_birth,json=placeOfBirth,proto3" json:"place_of_birth,omitempty"`
	CountryOfResidence string `protobuf:"bytes,18,opt,name=country_of_residence,json=countryOfResidence,proto3" json:"country_of_residence,omitempty"`
	PostCode           string `protobuf:"bytes,19,opt,name=post_code,json=postCode,proto3" json:"post_code,omitempty"`
	Town               string `protobuf:"bytes,20,opt,name=town,proto3" json:"town,omitempty"`
	Street             string `protobuf:"bytes,21,opt,name=street,proto3" json:"street,omitempty"`
	State              string `protobuf:"bytes,22,opt,name=state,proto3" json:"state,omitempty"`
	FlatNumber         string `protobuf:"bytes,23,opt,name=flat_number,json=flatNumber,proto3" json:"flat_number,omitempty"`
}

func (x *GetApplicantInfoByExternalIdResponse) Reset() {
	*x = GetApplicantInfoByExternalIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instrument_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApplicantInfoByExternalIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApplicantInfoByExternalIdResponse) ProtoMessage() {}

func (x *GetApplicantInfoByExternalIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_instrument_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApplicantInfoByExternalIdResponse.ProtoReflect.Descriptor instead.
func (*GetApplicantInfoByExternalIdResponse) Descriptor() ([]byte, []int) {
	return file_instrument_service_proto_rawDescGZIP(), []int{11}
}

func (x *GetApplicantInfoByExternalIdResponse) GetIdDocType() string {
	if x != nil {
		return x.IdDocType
	}
	return ""
}

func (x *GetApplicantInfoByExternalIdResponse) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *GetApplicantInfoByExternalIdResponse) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *GetApplicantInfoByExternalIdResponse) GetFirstNameEn() string {
	if x != nil {
		return x.FirstNameEn
	}
	return ""
}

func (x *GetApplicantInfoByExternalIdResponse) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *GetApplicantInfoByExternalIdResponse) GetLastNameEn() string {
	if x != nil {
		return x.LastNameEn
	}
	return ""
}

func (x *GetApplicantInfoByExternalIdResponse) GetIssuedDate() string {
	if x != nil {
		return x.IssuedDate
	}
	return ""
}

func (x *GetApplicantInfoByExternalIdResponse) GetValidUntil() string {
	if x != nil {
		return x.ValidUntil
	}
	return ""
}

func (x *GetApplicantInfoByExternalIdResponse) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *GetApplicantInfoByExternalIdResponse) GetAdditionalNumber() string {
	if x != nil {
		return x.AdditionalNumber
	}
	return ""
}

func (x *GetApplicantInfoByExternalIdResponse) GetDateOfBirth() string {
	if x != nil {
		return x.DateOfBirth
	}
	return ""
}

func (x *GetApplicantInfoByExternalIdResponse) GetPlaceOfBirthEn() string {
	if x != nil {
		return x.PlaceOfBirthEn
	}
	return ""
}

func (x *GetApplicantInfoByExternalIdResponse) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GetApplicantInfoByExternalIdResponse) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *GetApplicantInfoByExternalIdResponse) GetMiddleName() string {
	if x != nil {
		return x.MiddleName
	}
	return ""
}

func (x *GetApplicantInfoByExternalIdResponse) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *GetApplicantInfoByExternalIdResponse) GetPlaceOfBirth() string {
	if x != nil {
		return x.PlaceOfBirth
	}
	return ""
}

func (x *GetApplicantInfoByExternalIdResponse) GetCountryOfResidence() string {
	if x != nil {
		return x.CountryOfResidence
	}
	return ""
}

func (x *GetApplicantInfoByExternalIdResponse) GetPostCode() string {
	if x != nil {
		return x.PostCode
	}
	return ""
}

func (x *GetApplicantInfoByExternalIdResponse) GetTown() string {
	if x != nil {
		return x.Town
	}
	return ""
}

func (x *GetApplicantInfoByExternalIdResponse) GetStreet() string {
	if x != nil {
		return x.Street
	}
	return ""
}

func (x *GetApplicantInfoByExternalIdResponse) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *GetApplicantInfoByExternalIdResponse) GetFlatNumber() string {
	if x != nil {
		return x.FlatNumber
	}
	return ""
}

type GetApplicantInfoByExternalIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExternalId string `protobuf:"bytes,1,opt,name=externalId,proto3" json:"externalId,omitempty"`
}

func (x *GetApplicantInfoByExternalIdRequest) Reset() {
	*x = GetApplicantInfoByExternalIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instrument_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApplicantInfoByExternalIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApplicantInfoByExternalIdRequest) ProtoMessage() {}

func (x *GetApplicantInfoByExternalIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_instrument_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApplicantInfoByExternalIdRequest.ProtoReflect.Descriptor instead.
func (*GetApplicantInfoByExternalIdRequest) Descriptor() ([]byte, []int) {
	return file_instrument_service_proto_rawDescGZIP(), []int{12}
}

func (x *GetApplicantInfoByExternalIdRequest) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

type GenerateTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GenerateTokenRequest) Reset() {
	*x = GenerateTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instrument_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateTokenRequest) ProtoMessage() {}

func (x *GenerateTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_instrument_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateTokenRequest.ProtoReflect.Descriptor instead.
func (*GenerateTokenRequest) Descriptor() ([]byte, []int) {
	return file_instrument_service_proto_rawDescGZIP(), []int{13}
}

func (x *GenerateTokenRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GenerateTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token  string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GenerateTokenResponse) Reset() {
	*x = GenerateTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instrument_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateTokenResponse) ProtoMessage() {}

func (x *GenerateTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_instrument_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateTokenResponse.ProtoReflect.Descriptor instead.
func (*GenerateTokenResponse) Descriptor() ([]byte, []int) {
	return file_instrument_service_proto_rawDescGZIP(), []int{14}
}

func (x *GenerateTokenResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *GenerateTokenResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetApplicantInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicantId string `protobuf:"bytes,1,opt,name=applicant_id,json=applicantId,proto3" json:"applicant_id,omitempty"`
}

func (x *GetApplicantInfoRequest) Reset() {
	*x = GetApplicantInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instrument_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApplicantInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApplicantInfoRequest) ProtoMessage() {}

func (x *GetApplicantInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_instrument_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApplicantInfoRequest.ProtoReflect.Descriptor instead.
func (*GetApplicantInfoRequest) Descriptor() ([]byte, []int) {
	return file_instrument_service_proto_rawDescGZIP(), []int{15}
}

func (x *GetApplicantInfoRequest) GetApplicantId() string {
	if x != nil {
		return x.ApplicantId
	}
	return ""
}

type GetApplicantInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdDocType        string `protobuf:"bytes,1,opt,name=id_doc_type,json=idDocType,proto3" json:"id_doc_type,omitempty"`
	Country          string `protobuf:"bytes,2,opt,name=country,proto3" json:"country,omitempty"`
	FirstName        string `protobuf:"bytes,3,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	FirstNameEn      string `protobuf:"bytes,4,opt,name=first_name_en,json=firstNameEn,proto3" json:"first_name_en,omitempty"`
	LastName         string `protobuf:"bytes,5,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	LastNameEn       string `protobuf:"bytes,6,opt,name=last_name_en,json=lastNameEn,proto3" json:"last_name_en,omitempty"`
	IssuedDate       string `protobuf:"bytes,7,opt,name=issued_date,json=issuedDate,proto3" json:"issued_date,omitempty"`
	ValidUntil       string `protobuf:"bytes,8,opt,name=valid_until,json=validUntil,proto3" json:"valid_until,omitempty"`
	Number           string `protobuf:"bytes,9,opt,name=number,proto3" json:"number,omitempty"`
	AdditionalNumber string `protobuf:"bytes,10,opt,name=additional_number,json=additionalNumber,proto3" json:"additional_number,omitempty"`
	DateOfBirth      string `protobuf:"bytes,11,opt,name=date_of_birth,json=dateOfBirth,proto3" json:"date_of_birth,omitempty"`
	PlaceOfBirthEn   string `protobuf:"bytes,12,opt,name=place_of_birth_en,json=placeOfBirthEn,proto3" json:"place_of_birth_en,omitempty"`
}

func (x *GetApplicantInfoResponse) Reset() {
	*x = GetApplicantInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instrument_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApplicantInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApplicantInfoResponse) ProtoMessage() {}

func (x *GetApplicantInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_instrument_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApplicantInfoResponse.ProtoReflect.Descriptor instead.
func (*GetApplicantInfoResponse) Descriptor() ([]byte, []int) {
	return file_instrument_service_proto_rawDescGZIP(), []int{16}
}

func (x *GetApplicantInfoResponse) GetIdDocType() string {
	if x != nil {
		return x.IdDocType
	}
	return ""
}

func (x *GetApplicantInfoResponse) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *GetApplicantInfoResponse) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *GetApplicantInfoResponse) GetFirstNameEn() string {
	if x != nil {
		return x.FirstNameEn
	}
	return ""
}

func (x *GetApplicantInfoResponse) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *GetApplicantInfoResponse) GetLastNameEn() string {
	if x != nil {
		return x.LastNameEn
	}
	return ""
}

func (x *GetApplicantInfoResponse) GetIssuedDate() string {
	if x != nil {
		return x.IssuedDate
	}
	return ""
}

func (x *GetApplicantInfoResponse) GetValidUntil() string {
	if x != nil {
		return x.ValidUntil
	}
	return ""
}

func (x *GetApplicantInfoResponse) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *GetApplicantInfoResponse) GetAdditionalNumber() string {
	if x != nil {
		return x.AdditionalNumber
	}
	return ""
}

func (x *GetApplicantInfoResponse) GetDateOfBirth() string {
	if x != nil {
		return x.DateOfBirth
	}
	return ""
}

func (x *GetApplicantInfoResponse) GetPlaceOfBirthEn() string {
	if x != nil {
		return x.PlaceOfBirthEn
	}
	return ""
}

type GetKeyStatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ric         string `protobuf:"bytes,1,opt,name=ric,proto3" json:"ric,omitempty"`
	Ticker      string `protobuf:"bytes,2,opt,name=ticker,proto3" json:"ticker,omitempty"`
	CountryCode string `protobuf:"bytes,3,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
}

func (x *GetKeyStatsRequest) Reset() {
	*x = GetKeyStatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instrument_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKeyStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKeyStatsRequest) ProtoMessage() {}

func (x *GetKeyStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_instrument_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKeyStatsRequest.ProtoReflect.Descriptor instead.
func (*GetKeyStatsRequest) Descriptor() ([]byte, []int) {
	return file_instrument_service_proto_rawDescGZIP(), []int{17}
}

func (x *GetKeyStatsRequest) GetRic() string {
	if x != nil {
		return x.Ric
	}
	return ""
}

func (x *GetKeyStatsRequest) GetTicker() string {
	if x != nil {
		return x.Ticker
	}
	return ""
}

func (x *GetKeyStatsRequest) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

type GetKeyStatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyStats *KeyStats `protobuf:"bytes,1,opt,name=key_stats,json=keyStats,proto3" json:"key_stats,omitempty"`
}

func (x *GetKeyStatsResponse) Reset() {
	*x = GetKeyStatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instrument_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKeyStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKeyStatsResponse) ProtoMessage() {}

func (x *GetKeyStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_instrument_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKeyStatsResponse.ProtoReflect.Descriptor instead.
func (*GetKeyStatsResponse) Descriptor() ([]byte, []int) {
	return file_instrument_service_proto_rawDescGZIP(), []int{18}
}

func (x *GetKeyStatsResponse) GetKeyStats() *KeyStats {
	if x != nil {
		return x.KeyStats
	}
	return nil
}

type GetBussinessSummaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ticker      string `protobuf:"bytes,1,opt,name=ticker,proto3" json:"ticker,omitempty"`
	CountryCode string `protobuf:"bytes,2,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	Lang        string `protobuf:"bytes,3,opt,name=lang,proto3" json:"lang,omitempty"`
	Ric         string `protobuf:"bytes,4,opt,name=ric,proto3" json:"ric,omitempty"`
}

func (x *GetBussinessSummaryRequest) Reset() {
	*x = GetBussinessSummaryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instrument_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBussinessSummaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBussinessSummaryRequest) ProtoMessage() {}

func (x *GetBussinessSummaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_instrument_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBussinessSummaryRequest.ProtoReflect.Descriptor instead.
func (*GetBussinessSummaryRequest) Descriptor() ([]byte, []int) {
	return file_instrument_service_proto_rawDescGZIP(), []int{19}
}

func (x *GetBussinessSummaryRequest) GetTicker() string {
	if x != nil {
		return x.Ticker
	}
	return ""
}

func (x *GetBussinessSummaryRequest) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *GetBussinessSummaryRequest) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *GetBussinessSummaryRequest) GetRic() string {
	if x != nil {
		return x.Ric
	}
	return ""
}

type GetStockNewsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
	Ric      string `protobuf:"bytes,2,opt,name=ric,proto3" json:"ric,omitempty"`
}

func (x *GetStockNewsRequest) Reset() {
	*x = GetStockNewsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instrument_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStockNewsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStockNewsRequest) ProtoMessage() {}

func (x *GetStockNewsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_instrument_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStockNewsRequest.ProtoReflect.Descriptor instead.
func (*GetStockNewsRequest) Descriptor() ([]byte, []int) {
	return file_instrument_service_proto_rawDescGZIP(), []int{20}
}

func (x *GetStockNewsRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *GetStockNewsRequest) GetRic() string {
	if x != nil {
		return x.Ric
	}
	return ""
}

type GetBussinessSummaryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BussinessSummary *BussinessSummary `protobuf:"bytes,1,opt,name=bussiness_summary,json=bussinessSummary,proto3" json:"bussiness_summary,omitempty"`
}

func (x *GetBussinessSummaryResponse) Reset() {
	*x = GetBussinessSummaryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instrument_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBussinessSummaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBussinessSummaryResponse) ProtoMessage() {}

func (x *GetBussinessSummaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_instrument_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBussinessSummaryResponse.ProtoReflect.Descriptor instead.
func (*GetBussinessSummaryResponse) Descriptor() ([]byte, []int) {
	return file_instrument_service_proto_rawDescGZIP(), []int{21}
}

func (x *GetBussinessSummaryResponse) GetBussinessSummary() *BussinessSummary {
	if x != nil {
		return x.BussinessSummary
	}
	return nil
}

type GetStockNewsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StockNews []*StockNews `protobuf:"bytes,1,rep,name=stock_news,json=stockNews,proto3" json:"stock_news,omitempty"`
}

func (x *GetStockNewsResponse) Reset() {
	*x = GetStockNewsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instrument_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStockNewsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStockNewsResponse) ProtoMessage() {}

func (x *GetStockNewsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_instrument_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStockNewsResponse.ProtoReflect.Descriptor instead.
func (*GetStockNewsResponse) Descriptor() ([]byte, []int) {
	return file_instrument_service_proto_rawDescGZIP(), []int{22}
}

func (x *GetStockNewsResponse) GetStockNews() []*StockNews {
	if x != nil {
		return x.StockNews
	}
	return nil
}

type CreateApplicantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvestorId   string        `protobuf:"bytes,1,opt,name=investor_id,json=investorId,proto3" json:"investor_id,omitempty"`
	Email        string        `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Phone        string        `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	PersonalInfo *PersonalInfo `protobuf:"bytes,4,opt,name=personal_info,json=personalInfo,proto3" json:"personal_info,omitempty"`
	Address      *Address      `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *CreateApplicantRequest) Reset() {
	*x = CreateApplicantRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instrument_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateApplicantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateApplicantRequest) ProtoMessage() {}

func (x *CreateApplicantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_instrument_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateApplicantRequest.ProtoReflect.Descriptor instead.
func (*CreateApplicantRequest) Descriptor() ([]byte, []int) {
	return file_instrument_service_proto_rawDescGZIP(), []int{23}
}

func (x *CreateApplicantRequest) GetInvestorId() string {
	if x != nil {
		return x.InvestorId
	}
	return ""
}

func (x *CreateApplicantRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CreateApplicantRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *CreateApplicantRequest) GetPersonalInfo() *PersonalInfo {
	if x != nil {
		return x.PersonalInfo
	}
	return nil
}

func (x *CreateApplicantRequest) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

type PersonalInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstName      string `protobuf:"bytes,4,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName       string `protobuf:"bytes,5,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	MiddleName     string `protobuf:"bytes,6,opt,name=middle_name,json=middleName,proto3" json:"middle_name,omitempty"`
	Gender         string `protobuf:"bytes,7,opt,name=gender,proto3" json:"gender,omitempty"`
	DateOfBirth    string `protobuf:"bytes,8,opt,name=date_of_birth,json=dateOfBirth,proto3" json:"date_of_birth,omitempty"`
	PlaceOfBirth   string `protobuf:"bytes,9,opt,name=place_of_birth,json=placeOfBirth,proto3" json:"place_of_birth,omitempty"`
	CountryOfBirth string `protobuf:"bytes,10,opt,name=country_of_birth,json=countryOfBirth,proto3" json:"country_of_birth,omitempty"`
	Country        string `protobuf:"bytes,11,opt,name=country,proto3" json:"country,omitempty"`
	Address        string `protobuf:"bytes,12,opt,name=address,proto3" json:"address,omitempty"`
	Nationality    string `protobuf:"bytes,13,opt,name=nationality,proto3" json:"nationality,omitempty"`
	PhoneNumber    string `protobuf:"bytes,14,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	ValidUntil     string `protobuf:"bytes,19,opt,name=valid_until,json=validUntil,proto3" json:"valid_until,omitempty"`
	IssuetDate     string `protobuf:"bytes,20,opt,name=issuet_date,json=issuetDate,proto3" json:"issuet_date,omitempty"`
	Citizenship    string `protobuf:"bytes,21,opt,name=citizenship,proto3" json:"citizenship,omitempty"`
	DateOfIssue    string `protobuf:"bytes,22,opt,name=date_of_issue,json=dateOfIssue,proto3" json:"date_of_issue,omitempty"`
	DateOfExpiry   string `protobuf:"bytes,23,opt,name=date_of_expiry,json=dateOfExpiry,proto3" json:"date_of_expiry,omitempty"`
	IssueBy        string `protobuf:"bytes,24,opt,name=issue_by,json=issueBy,proto3" json:"issue_by,omitempty"`
	PassportNumber string `protobuf:"bytes,25,opt,name=passport_number,json=passportNumber,proto3" json:"passport_number,omitempty"`
}

func (x *PersonalInfo) Reset() {
	*x = PersonalInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instrument_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PersonalInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PersonalInfo) ProtoMessage() {}

func (x *PersonalInfo) ProtoReflect() protoreflect.Message {
	mi := &file_instrument_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PersonalInfo.ProtoReflect.Descriptor instead.
func (*PersonalInfo) Descriptor() ([]byte, []int) {
	return file_instrument_service_proto_rawDescGZIP(), []int{24}
}

func (x *PersonalInfo) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *PersonalInfo) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *PersonalInfo) GetMiddleName() string {
	if x != nil {
		return x.MiddleName
	}
	return ""
}

func (x *PersonalInfo) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *PersonalInfo) GetDateOfBirth() string {
	if x != nil {
		return x.DateOfBirth
	}
	return ""
}

func (x *PersonalInfo) GetPlaceOfBirth() string {
	if x != nil {
		return x.PlaceOfBirth
	}
	return ""
}

func (x *PersonalInfo) GetCountryOfBirth() string {
	if x != nil {
		return x.CountryOfBirth
	}
	return ""
}

func (x *PersonalInfo) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *PersonalInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *PersonalInfo) GetNationality() string {
	if x != nil {
		return x.Nationality
	}
	return ""
}

func (x *PersonalInfo) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *PersonalInfo) GetValidUntil() string {
	if x != nil {
		return x.ValidUntil
	}
	return ""
}

func (x *PersonalInfo) GetIssuetDate() string {
	if x != nil {
		return x.IssuetDate
	}
	return ""
}

func (x *PersonalInfo) GetCitizenship() string {
	if x != nil {
		return x.Citizenship
	}
	return ""
}

func (x *PersonalInfo) GetDateOfIssue() string {
	if x != nil {
		return x.DateOfIssue
	}
	return ""
}

func (x *PersonalInfo) GetDateOfExpiry() string {
	if x != nil {
		return x.DateOfExpiry
	}
	return ""
}

func (x *PersonalInfo) GetIssueBy() string {
	if x != nil {
		return x.IssueBy
	}
	return ""
}

func (x *PersonalInfo) GetPassportNumber() string {
	if x != nil {
		return x.PassportNumber
	}
	return ""
}

type Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Country    string `protobuf:"bytes,1,opt,name=country,proto3" json:"country,omitempty"`
	Postcode   string `protobuf:"bytes,2,opt,name=postcode,proto3" json:"postcode,omitempty"`
	Town       string `protobuf:"bytes,3,opt,name=town,proto3" json:"town,omitempty"`
	Street     string `protobuf:"bytes,4,opt,name=street,proto3" json:"street,omitempty"`
	State      string `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`
	FlatNumber string `protobuf:"bytes,6,opt,name=flat_number,json=flatNumber,proto3" json:"flat_number,omitempty"`
}

func (x *Address) Reset() {
	*x = Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instrument_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Address) ProtoMessage() {}

func (x *Address) ProtoReflect() protoreflect.Message {
	mi := &file_instrument_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Address.ProtoReflect.Descriptor instead.
func (*Address) Descriptor() ([]byte, []int) {
	return file_instrument_service_proto_rawDescGZIP(), []int{25}
}

func (x *Address) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Address) GetPostcode() string {
	if x != nil {
		return x.Postcode
	}
	return ""
}

func (x *Address) GetTown() string {
	if x != nil {
		return x.Town
	}
	return ""
}

func (x *Address) GetStreet() string {
	if x != nil {
		return x.Street
	}
	return ""
}

func (x *Address) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Address) GetFlatNumber() string {
	if x != nil {
		return x.FlatNumber
	}
	return ""
}

type CreateApplicantResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationId string `protobuf:"bytes,1,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
	ReviewStatus  string `protobuf:"bytes,2,opt,name=review_status,json=reviewStatus,proto3" json:"review_status,omitempty"`
}

func (x *CreateApplicantResponse) Reset() {
	*x = CreateApplicantResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instrument_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateApplicantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateApplicantResponse) ProtoMessage() {}

func (x *CreateApplicantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_instrument_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateApplicantResponse.ProtoReflect.Descriptor instead.
func (*CreateApplicantResponse) Descriptor() ([]byte, []int) {
	return file_instrument_service_proto_rawDescGZIP(), []int{26}
}

func (x *CreateApplicantResponse) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

func (x *CreateApplicantResponse) GetReviewStatus() string {
	if x != nil {
		return x.ReviewStatus
	}
	return ""
}

type UploadDocumentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata  *UploadDocumentMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	MinioName string                  `protobuf:"bytes,2,opt,name=minio_name,json=minioName,proto3" json:"minio_name,omitempty"`
}

func (x *UploadDocumentRequest) Reset() {
	*x = UploadDocumentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instrument_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadDocumentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadDocumentRequest) ProtoMessage() {}

func (x *UploadDocumentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_instrument_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadDocumentRequest.ProtoReflect.Descriptor instead.
func (*UploadDocumentRequest) Descriptor() ([]byte, []int) {
	return file_instrument_service_proto_rawDescGZIP(), []int{27}
}

func (x *UploadDocumentRequest) GetMetadata() *UploadDocumentMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *UploadDocumentRequest) GetMinioName() string {
	if x != nil {
		return x.MinioName
	}
	return ""
}

type UploadDocumentMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvestorId   string `protobuf:"bytes,1,opt,name=investor_id,json=investorId,proto3" json:"investor_id,omitempty"`
	DocumentType string `protobuf:"bytes,2,opt,name=document_type,json=documentType,proto3" json:"document_type,omitempty"`
	DocumentName string `protobuf:"bytes,3,opt,name=document_name,json=documentName,proto3" json:"document_name,omitempty"`
}

func (x *UploadDocumentMetadata) Reset() {
	*x = UploadDocumentMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instrument_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadDocumentMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadDocumentMetadata) ProtoMessage() {}

func (x *UploadDocumentMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_instrument_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadDocumentMetadata.ProtoReflect.Descriptor instead.
func (*UploadDocumentMetadata) Descriptor() ([]byte, []int) {
	return file_instrument_service_proto_rawDescGZIP(), []int{28}
}

func (x *UploadDocumentMetadata) GetInvestorId() string {
	if x != nil {
		return x.InvestorId
	}
	return ""
}

func (x *UploadDocumentMetadata) GetDocumentType() string {
	if x != nil {
		return x.DocumentType
	}
	return ""
}

func (x *UploadDocumentMetadata) GetDocumentName() string {
	if x != nil {
		return x.DocumentName
	}
	return ""
}

type UploadDocumentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Errors   string `protobuf:"bytes,1,opt,name=errors,proto3" json:"errors,omitempty"`
	Warnings string `protobuf:"bytes,2,opt,name=warnings,proto3" json:"warnings,omitempty"`
}

func (x *UploadDocumentResponse) Reset() {
	*x = UploadDocumentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instrument_service_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadDocumentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadDocumentResponse) ProtoMessage() {}

func (x *UploadDocumentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_instrument_service_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadDocumentResponse.ProtoReflect.Descriptor instead.
func (*UploadDocumentResponse) Descriptor() ([]byte, []int) {
	return file_instrument_service_proto_rawDescGZIP(), []int{29}
}

func (x *UploadDocumentResponse) GetErrors() string {
	if x != nil {
		return x.Errors
	}
	return ""
}

func (x *UploadDocumentResponse) GetWarnings() string {
	if x != nil {
		return x.Warnings
	}
	return ""
}

type GetInstrumentHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SymbolId  string `protobuf:"bytes,1,opt,name=symbol_id,json=symbolId,proto3" json:"symbol_id,omitempty"`
	RangeType string `protobuf:"bytes,2,opt,name=range_type,json=rangeType,proto3" json:"range_type,omitempty"`
}

func (x *GetInstrumentHistoryRequest) Reset() {
	*x = GetInstrumentHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instrument_service_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInstrumentHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstrumentHistoryRequest) ProtoMessage() {}

func (x *GetInstrumentHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_instrument_service_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInstrumentHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetInstrumentHistoryRequest) Descriptor() ([]byte, []int) {
	return file_instrument_service_proto_rawDescGZIP(), []int{30}
}

func (x *GetInstrumentHistoryRequest) GetSymbolId() string {
	if x != nil {
		return x.SymbolId
	}
	return ""
}

func (x *GetInstrumentHistoryRequest) GetRangeType() string {
	if x != nil {
		return x.RangeType
	}
	return ""
}

type GetInstrumentByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstrumentId string `protobuf:"bytes,1,opt,name=instrument_id,json=instrumentId,proto3" json:"instrument_id,omitempty"`
	InvestorId   string `protobuf:"bytes,2,opt,name=investor_id,json=investorId,proto3" json:"investor_id,omitempty"`
}

func (x *GetInstrumentByIDRequest) Reset() {
	*x = GetInstrumentByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instrument_service_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInstrumentByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstrumentByIDRequest) ProtoMessage() {}

func (x *GetInstrumentByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_instrument_service_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInstrumentByIDRequest.ProtoReflect.Descriptor instead.
func (*GetInstrumentByIDRequest) Descriptor() ([]byte, []int) {
	return file_instrument_service_proto_rawDescGZIP(), []int{31}
}

func (x *GetInstrumentByIDRequest) GetInstrumentId() string {
	if x != nil {
		return x.InstrumentId
	}
	return ""
}

func (x *GetInstrumentByIDRequest) GetInvestorId() string {
	if x != nil {
		return x.InvestorId
	}
	return ""
}

type GetInstrumentHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instruents []*InstrumentHistory `protobuf:"bytes,1,rep,name=instruents,proto3" json:"instruents,omitempty"`
}

func (x *GetInstrumentHistoryResponse) Reset() {
	*x = GetInstrumentHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instrument_service_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInstrumentHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstrumentHistoryResponse) ProtoMessage() {}

func (x *GetInstrumentHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_instrument_service_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInstrumentHistoryResponse.ProtoReflect.Descriptor instead.
func (*GetInstrumentHistoryResponse) Descriptor() ([]byte, []int) {
	return file_instrument_service_proto_rawDescGZIP(), []int{32}
}

func (x *GetInstrumentHistoryResponse) GetInstruents() []*InstrumentHistory {
	if x != nil {
		return x.Instruents
	}
	return nil
}

type InstrumentHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SymbolId  string `protobuf:"bytes,1,opt,name=symbol_id,json=symbolId,proto3" json:"symbol_id,omitempty"`
	Timestamp int64  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Open      string `protobuf:"bytes,3,opt,name=open,proto3" json:"open,omitempty"`
	Close     string `protobuf:"bytes,4,opt,name=close,proto3" json:"close,omitempty"`
	High      string `protobuf:"bytes,5,opt,name=high,proto3" json:"high,omitempty"`
	Low       string `protobuf:"bytes,6,opt,name=low,proto3" json:"low,omitempty"`
	Volume    string `protobuf:"bytes,7,opt,name=volume,proto3" json:"volume,omitempty"`
}

func (x *InstrumentHistory) Reset() {
	*x = InstrumentHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instrument_service_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstrumentHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstrumentHistory) ProtoMessage() {}

func (x *InstrumentHistory) ProtoReflect() protoreflect.Message {
	mi := &file_instrument_service_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstrumentHistory.ProtoReflect.Descriptor instead.
func (*InstrumentHistory) Descriptor() ([]byte, []int) {
	return file_instrument_service_proto_rawDescGZIP(), []int{33}
}

func (x *InstrumentHistory) GetSymbolId() string {
	if x != nil {
		return x.SymbolId
	}
	return ""
}

func (x *InstrumentHistory) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *InstrumentHistory) GetOpen() string {
	if x != nil {
		return x.Open
	}
	return ""
}

func (x *InstrumentHistory) GetClose() string {
	if x != nil {
		return x.Close
	}
	return ""
}

func (x *InstrumentHistory) GetHigh() string {
	if x != nil {
		return x.High
	}
	return ""
}

func (x *InstrumentHistory) GetLow() string {
	if x != nil {
		return x.Low
	}
	return ""
}

func (x *InstrumentHistory) GetVolume() string {
	if x != nil {
		return x.Volume
	}
	return ""
}

type GetByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetByIDRequest) Reset() {
	*x = GetByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instrument_service_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetByIDRequest) ProtoMessage() {}

func (x *GetByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_instrument_service_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetByIDRequest.ProtoReflect.Descriptor instead.
func (*GetByIDRequest) Descriptor() ([]byte, []int) {
	return file_instrument_service_proto_rawDescGZIP(), []int{34}
}

func (x *GetByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type FilterInstrumentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instruments []*FilterInstrument `protobuf:"bytes,1,rep,name=instruments,proto3" json:"instruments,omitempty"`
}

func (x *FilterInstrumentsResponse) Reset() {
	*x = FilterInstrumentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instrument_service_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterInstrumentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterInstrumentsResponse) ProtoMessage() {}

func (x *FilterInstrumentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_instrument_service_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterInstrumentsResponse.ProtoReflect.Descriptor instead.
func (*FilterInstrumentsResponse) Descriptor() ([]byte, []int) {
	return file_instrument_service_proto_rawDescGZIP(), []int{35}
}

func (x *FilterInstrumentsResponse) GetInstruments() []*FilterInstrument {
	if x != nil {
		return x.Instruments
	}
	return nil
}

type FilterInstrument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Ticker string `protobuf:"bytes,2,opt,name=ticker,proto3" json:"ticker,omitempty"`
	Icon   string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
	Name   string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *FilterInstrument) Reset() {
	*x = FilterInstrument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instrument_service_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterInstrument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterInstrument) ProtoMessage() {}

func (x *FilterInstrument) ProtoReflect() protoreflect.Message {
	mi := &file_instrument_service_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterInstrument.ProtoReflect.Descriptor instead.
func (*FilterInstrument) Descriptor() ([]byte, []int) {
	return file_instrument_service_proto_rawDescGZIP(), []int{36}
}

func (x *FilterInstrument) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FilterInstrument) GetTicker() string {
	if x != nil {
		return x.Ticker
	}
	return ""
}

func (x *FilterInstrument) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *FilterInstrument) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetExchangesByTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *GetExchangesByTypeRequest) Reset() {
	*x = GetExchangesByTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instrument_service_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExchangesByTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExchangesByTypeRequest) ProtoMessage() {}

func (x *GetExchangesByTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_instrument_service_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExchangesByTypeRequest.ProtoReflect.Descriptor instead.
func (*GetExchangesByTypeRequest) Descriptor() ([]byte, []int) {
	return file_instrument_service_proto_rawDescGZIP(), []int{37}
}

func (x *GetExchangesByTypeRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type FilterInstrumentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group      string `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	ExchangeId string `protobuf:"bytes,2,opt,name=exchange_id,json=exchangeId,proto3" json:"exchange_id,omitempty"`
	Type       string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Name       string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Id         string `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`
	Limit      int32  `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	Page       int32  `protobuf:"varint,7,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *FilterInstrumentsRequest) Reset() {
	*x = FilterInstrumentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instrument_service_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterInstrumentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterInstrumentsRequest) ProtoMessage() {}

func (x *FilterInstrumentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_instrument_service_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterInstrumentsRequest.ProtoReflect.Descriptor instead.
func (*FilterInstrumentsRequest) Descriptor() ([]byte, []int) {
	return file_instrument_service_proto_rawDescGZIP(), []int{38}
}

func (x *FilterInstrumentsRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *FilterInstrumentsRequest) GetExchangeId() string {
	if x != nil {
		return x.ExchangeId
	}
	return ""
}

func (x *FilterInstrumentsRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *FilterInstrumentsRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FilterInstrumentsRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FilterInstrumentsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *FilterInstrumentsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetShortDetailsByStocksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbols []string `protobuf:"bytes,1,rep,name=symbols,proto3" json:"symbols,omitempty"`
}

func (x *GetShortDetailsByStocksRequest) Reset() {
	*x = GetShortDetailsByStocksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instrument_service_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShortDetailsByStocksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShortDetailsByStocksRequest) ProtoMessage() {}

func (x *GetShortDetailsByStocksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_instrument_service_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShortDetailsByStocksRequest.ProtoReflect.Descriptor instead.
func (*GetShortDetailsByStocksRequest) Descriptor() ([]byte, []int) {
	return file_instrument_service_proto_rawDescGZIP(), []int{39}
}

func (x *GetShortDetailsByStocksRequest) GetSymbols() []string {
	if x != nil {
		return x.Symbols
	}
	return nil
}

type GetShortDetailsByStocksData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Icon string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
}

func (x *GetShortDetailsByStocksData) Reset() {
	*x = GetShortDetailsByStocksData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instrument_service_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShortDetailsByStocksData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShortDetailsByStocksData) ProtoMessage() {}

func (x *GetShortDetailsByStocksData) ProtoReflect() protoreflect.Message {
	mi := &file_instrument_service_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShortDetailsByStocksData.ProtoReflect.Descriptor instead.
func (*GetShortDetailsByStocksData) Descriptor() ([]byte, []int) {
	return file_instrument_service_proto_rawDescGZIP(), []int{40}
}

func (x *GetShortDetailsByStocksData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetShortDetailsByStocksData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetShortDetailsByStocksData) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

type GetShortDetailsByStocksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instruments []*GetShortDetailsByStocksData `protobuf:"bytes,1,rep,name=instruments,proto3" json:"instruments,omitempty"`
}

func (x *GetShortDetailsByStocksResponse) Reset() {
	*x = GetShortDetailsByStocksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instrument_service_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShortDetailsByStocksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShortDetailsByStocksResponse) ProtoMessage() {}

func (x *GetShortDetailsByStocksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_instrument_service_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShortDetailsByStocksResponse.ProtoReflect.Descriptor instead.
func (*GetShortDetailsByStocksResponse) Descriptor() ([]byte, []int) {
	return file_instrument_service_proto_rawDescGZIP(), []int{41}
}

func (x *GetShortDetailsByStocksResponse) GetInstruments() []*GetShortDetailsByStocksData {
	if x != nil {
		return x.Instruments
	}
	return nil
}

type GetSymbolIdsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *GetSymbolIdsResponse) Reset() {
	*x = GetSymbolIdsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instrument_service_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSymbolIdsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSymbolIdsResponse) ProtoMessage() {}

func (x *GetSymbolIdsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_instrument_service_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSymbolIdsResponse.ProtoReflect.Descriptor instead.
func (*GetSymbolIdsResponse) Descriptor() ([]byte, []int) {
	return file_instrument_service_proto_rawDescGZIP(), []int{42}
}

func (x *GetSymbolIdsResponse) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

var File_instrument_service_proto protoreflect.FileDescriptor

var file_instrument_service_proto_rawDesc = []byte{
	0x0a, 0x18, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x69, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x10,
	0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x92, 0x01,
	0x0a, 0x1d, 0x41, 0x64, 0x64, 0x46, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x69, 0x74, 0x65, 0x49, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x49, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x72, 0x22, 0x2d, 0x0a, 0x0a, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x49,
	0x64, 0x22, 0x64, 0x0a, 0x17, 0x46, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x69, 0x74, 0x65, 0x49, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x49, 0x0a, 0x0b,
	0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x69, 0x74, 0x65,
	0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x69, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x42, 0x0a, 0x1d, 0x49, 0x73, 0x49, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x69, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x66,
	0x61, 0x76, 0x6f, 0x75, 0x72, 0x69, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x69, 0x73, 0x46, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x69, 0x74, 0x65, 0x22, 0x3e, 0x0a, 0x1b, 0x47,
	0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x22, 0x4c, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x38, 0x0a, 0x09, 0x66, 0x69, 0x78, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x78, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x08, 0x66, 0x69, 0x78, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0x51, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c,
	0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x78, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0x5e, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x09, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x78,
	0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x09, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x22, 0x30, 0x0a, 0x1c,
	0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x42,
	0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x57,
	0x0a, 0x1c, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x69, 0x65,
	0x73, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37,
	0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x4e, 0x65, 0x77, 0x73, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x07,
	0x73, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x22, 0x45, 0x0a, 0x09, 0x4e, 0x65, 0x77, 0x73, 0x53,
	0x74, 0x6f, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x22, 0xf5,
	0x05, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x42, 0x79, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0b, 0x69, 0x64, 0x5f, 0x64, 0x6f,
	0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x64,
	0x44, 0x6f, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x22, 0x0a, 0x0d, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x65,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x45, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x65,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x45, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x75, 0x6e,
	0x74, 0x69, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x55, 0x6e, 0x74, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2b, 0x0a,
	0x11, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0d, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x62, 0x69, 0x72, 0x74, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x42, 0x69, 0x72, 0x74, 0x68, 0x12, 0x29,
	0x0a, 0x11, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x62, 0x69, 0x72, 0x74, 0x68,
	0x5f, 0x65, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x6c, 0x61, 0x63, 0x65,
	0x4f, 0x66, 0x42, 0x69, 0x72, 0x74, 0x68, 0x45, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x24,
	0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x62, 0x69, 0x72, 0x74, 0x68,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x66, 0x42,
	0x69, 0x72, 0x74, 0x68, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f,
	0x6f, 0x66, 0x5f, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x4f, 0x66, 0x52, 0x65, 0x73,
	0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x6f, 0x77, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x6f, 0x77, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x65, 0x65,
	0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6c, 0x61, 0x74, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x6c, 0x61, 0x74,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x45, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x45, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x22, 0x2f, 0x0a,
	0x14, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x46,
	0x0a, 0x15, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x3c, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x22, 0xac, 0x03, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1e, 0x0a, 0x0b, 0x69, 0x64, 0x5f, 0x64, 0x6f, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x64, 0x44, 0x6f, 0x63, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x12, 0x1b,
	0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x12, 0x1f, 0x0a,
	0x0b, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x12,
	0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x64, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6f, 0x66, 0x5f,
	0x62, 0x69, 0x72, 0x74, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x61, 0x74,
	0x65, 0x4f, 0x66, 0x42, 0x69, 0x72, 0x74, 0x68, 0x12, 0x29, 0x0a, 0x11, 0x70, 0x6c, 0x61, 0x63,
	0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x62, 0x69, 0x72, 0x74, 0x68, 0x5f, 0x65, 0x6e, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x66, 0x42, 0x69, 0x72, 0x74,
	0x68, 0x45, 0x6e, 0x22, 0x61, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x69, 0x63,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x69, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x50, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a,
	0x09, 0x6b, 0x65, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4b, 0x65, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x08,
	0x6b, 0x65, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x22, 0x7d, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x42,
	0x75, 0x73, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x21,
	0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x69, 0x63, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x72, 0x69, 0x63, 0x22, 0x43, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x6f, 0x63, 0x6b, 0x4e, 0x65, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x69,
	0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x69, 0x63, 0x22, 0x70, 0x0a, 0x1b,
	0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x11, 0x62,
	0x75, 0x73, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x75, 0x73, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x10, 0x62, 0x75,
	0x73, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x22, 0x54,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4e, 0x65, 0x77, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x5f,
	0x6e, 0x65, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x69, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4e, 0x65, 0x77, 0x73, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x63, 0x6b,
	0x4e, 0x65, 0x77, 0x73, 0x22, 0xe3, 0x01, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x45, 0x0a, 0x0d,
	0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61,
	0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x35, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xe2, 0x04, 0x0a, 0x0c, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c,
	0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x69, 0x64, 0x64, 0x6c,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x69,
	0x64, 0x64, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x12, 0x22, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x62, 0x69, 0x72, 0x74,
	0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x42,
	0x69, 0x72, 0x74, 0x68, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f, 0x6f, 0x66,
	0x5f, 0x62, 0x69, 0x72, 0x74, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x6c,
	0x61, 0x63, 0x65, 0x4f, 0x66, 0x42, 0x69, 0x72, 0x74, 0x68, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x6f, 0x66, 0x5f, 0x62, 0x69, 0x72, 0x74, 0x68, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x4f, 0x66, 0x42,
	0x69, 0x72, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f, 0x0a,
	0x0b, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x12, 0x1f,
	0x0a, 0x0b, 0x69, 0x73, 0x73, 0x75, 0x65, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x73, 0x73, 0x75, 0x65, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x73, 0x68, 0x69,
	0x70, 0x12, 0x22, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x69, 0x73, 0x73,
	0x75, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x66,
	0x49, 0x73, 0x73, 0x75, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6f, 0x66,
	0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64,
	0x61, 0x74, 0x65, 0x4f, 0x66, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x69,
	0x73, 0x73, 0x75, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69,
	0x73, 0x73, 0x75, 0x65, 0x42, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x61, 0x73, 0x73, 0x70, 0x6f,
	0x72, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x70, 0x61, 0x73, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22,
	0xa2, 0x01, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x6f, 0x77, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x6f, 0x77, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6c, 0x61, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x6c, 0x61, 0x74, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x22, 0x65, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x7e, 0x0a, 0x15, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a,
	0x6d, 0x69, 0x6e, 0x69, 0x6f, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6d, 0x69, 0x6e, 0x69, 0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x83, 0x01, 0x0a, 0x16,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74,
	0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x76,
	0x65, 0x73, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x4c, 0x0a, 0x16, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x22,
	0x59, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x60, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69,
	0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x22, 0x65, 0x0a, 0x1c,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0a,
	0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x65,
	0x6e, 0x74, 0x73, 0x22, 0xb6, 0x01, 0x0a, 0x11, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x73,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x68, 0x69, 0x67, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x69,
	0x67, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x77, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6c, 0x6f, 0x77, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x22, 0x20, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x63,
	0x0a, 0x19, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0b, 0x69,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x22, 0x62, 0x0a, 0x10, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69,
	0x63, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x2f, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x45, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x42, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xb3, 0x01, 0x0a, 0x18, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x65,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x3a,
	0x0a, 0x1e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x42, 0x79, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x22, 0x55, 0x0a, 0x1b, 0x47, 0x65,
	0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x42, 0x79, 0x53,
	0x74, 0x6f, 0x63, 0x6b, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x22, 0x74, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x42, 0x79, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x69, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x42, 0x79,
	0x53, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0b, 0x69, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x28, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64,
	0x73, 0x32, 0x9b, 0x15, 0x0a, 0x10, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x53, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x55, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x28, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a,
	0x0c, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x22, 0x2e,
	0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x25, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0b, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x24, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x72, 0x0a, 0x11, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2c,
	0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x69,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x62, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79,
	0x49, 0x44, 0x12, 0x2c, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1d, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x78, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x22,
	0x00, 0x12, 0x78, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x2e, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x42, 0x75, 0x73, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x42, 0x75, 0x73, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x0c, 0x47,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x49, 0x44, 0x12, 0x22, 0x2e, 0x69, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x24, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x78, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x45, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x79, 0x49, 0x44, 0x12, 0x22, 0x2e, 0x69, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28,
	0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x78, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6f, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x42, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x2d, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x42, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x28, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x84, 0x01, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x42,
	0x79, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x32, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x42, 0x79, 0x53, 0x74,
	0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x69, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x42, 0x79, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x57, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x63, 0x6f, 0x6e,
	0x12, 0x2f, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x7b, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x12, 0x2f, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x0e, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x29, 0x2e, 0x69, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x93, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x49, 0x44, 0x12, 0x37, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x45, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e,
	0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x42, 0x79, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6f, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2b, 0x2e,
	0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x69, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6c, 0x0a, 0x0f, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x12, 0x2a, 0x2e,
	0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x69, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x6f, 0x63, 0x6b, 0x4e, 0x65, 0x77, 0x73, 0x12, 0x27, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4e, 0x65, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x28, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4e,
	0x65, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7c, 0x0a,
	0x14, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73,
	0x42, 0x79, 0x49, 0x64, 0x73, 0x12, 0x30, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x1a, 0x30, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x74,
	0x72, 0x69, 0x65, 0x76, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x42, 0x79, 0x49, 0x64,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x4b, 0x65, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x26, 0x2e, 0x69, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x27, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x66, 0x0a,
	0x0d, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x28,
	0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x28, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x49, 0x64,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x76, 0x0a, 0x16, 0x41,
	0x64, 0x64, 0x46, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x69, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x31, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x61,
	0x76, 0x6f, 0x75, 0x72, 0x69, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x61,
	0x76, 0x6f, 0x75, 0x72, 0x69, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x46, 0x61, 0x76, 0x6f, 0x75, 0x72,
	0x69, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1e,
	0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x1a, 0x2b,
	0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x46, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x69, 0x74, 0x65, 0x49, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x69, 0x0a,
	0x13, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x46, 0x61, 0x76, 0x6f, 0x75,
	0x72, 0x69, 0x74, 0x65, 0x12, 0x27, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x61, 0x76, 0x6f, 0x75, 0x72,
	0x69, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x27, 0x2e,
	0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x46, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x69, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x00, 0x12, 0x75, 0x0a, 0x15, 0x49, 0x73, 0x49, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x69, 0x74,
	0x65, 0x12, 0x27, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x69, 0x74, 0x65,
	0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x31, 0x2e, 0x69, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x49, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x61, 0x76, 0x6f,
	0x75, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x1d, 0x5a, 0x1b, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x69, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_instrument_service_proto_rawDescOnce sync.Once
	file_instrument_service_proto_rawDescData = file_instrument_service_proto_rawDesc
)

func file_instrument_service_proto_rawDescGZIP() []byte {
	file_instrument_service_proto_rawDescOnce.Do(func() {
		file_instrument_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_instrument_service_proto_rawDescData)
	})
	return file_instrument_service_proto_rawDescData
}

var file_instrument_service_proto_msgTypes = make([]protoimpl.MessageInfo, 43)
var file_instrument_service_proto_goTypes = []interface{}{
	(*AddFavouriteInstrumentRequest)(nil),        // 0: instrument_service.AddFavouriteInstrumentRequest
	(*InvestorId)(nil),                           // 1: instrument_service.InvestorId
	(*FavouriteInstrumentList)(nil),              // 2: instrument_service.FavouriteInstrumentList
	(*IsInstrumentFavouriteResponse)(nil),        // 3: instrument_service.IsInstrumentFavouriteResponse
	(*GetInstrumentsByTypeRequest)(nil),          // 4: instrument_service.GetInstrumentsByTypeRequest
	(*GetTypesResponse)(nil),                     // 5: instrument_service.GetTypesResponse
	(*GetGroupsResponse)(nil),                    // 6: instrument_service.GetGroupsResponse
	(*GetExchangesResponse)(nil),                 // 7: instrument_service.GetExchangesResponse
	(*RetrieveStoriesByIdsRequests)(nil),         // 8: instrument_service.RetrieveStoriesByIdsRequests
	(*RetrieveStoriesByIdsResponse)(nil),         // 9: instrument_service.RetrieveStoriesByIdsResponse
	(*NewsStory)(nil),                            // 10: instrument_service.NewsStory
	(*GetApplicantInfoByExternalIdResponse)(nil), // 11: instrument_service.GetApplicantInfoByExternalIdResponse
	(*GetApplicantInfoByExternalIdRequest)(nil),  // 12: instrument_service.GetApplicantInfoByExternalIdRequest
	(*GenerateTokenRequest)(nil),                 // 13: instrument_service.GenerateTokenRequest
	(*GenerateTokenResponse)(nil),                // 14: instrument_service.GenerateTokenResponse
	(*GetApplicantInfoRequest)(nil),              // 15: instrument_service.GetApplicantInfoRequest
	(*GetApplicantInfoResponse)(nil),             // 16: instrument_service.GetApplicantInfoResponse
	(*GetKeyStatsRequest)(nil),                   // 17: instrument_service.GetKeyStatsRequest
	(*GetKeyStatsResponse)(nil),                  // 18: instrument_service.GetKeyStatsResponse
	(*GetBussinessSummaryRequest)(nil),           // 19: instrument_service.GetBussinessSummaryRequest
	(*GetStockNewsRequest)(nil),                  // 20: instrument_service.GetStockNewsRequest
	(*GetBussinessSummaryResponse)(nil),          // 21: instrument_service.GetBussinessSummaryResponse
	(*GetStockNewsResponse)(nil),                 // 22: instrument_service.GetStockNewsResponse
	(*CreateApplicantRequest)(nil),               // 23: instrument_service.CreateApplicantRequest
	(*PersonalInfo)(nil),                         // 24: instrument_service.PersonalInfo
	(*Address)(nil),                              // 25: instrument_service.Address
	(*CreateApplicantResponse)(nil),              // 26: instrument_service.CreateApplicantResponse
	(*UploadDocumentRequest)(nil),                // 27: instrument_service.UploadDocumentRequest
	(*UploadDocumentMetadata)(nil),               // 28: instrument_service.UploadDocumentMetadata
	(*UploadDocumentResponse)(nil),               // 29: instrument_service.UploadDocumentResponse
	(*GetInstrumentHistoryRequest)(nil),          // 30: instrument_service.GetInstrumentHistoryRequest
	(*GetInstrumentByIDRequest)(nil),             // 31: instrument_service.GetInstrumentByIDRequest
	(*GetInstrumentHistoryResponse)(nil),         // 32: instrument_service.GetInstrumentHistoryResponse
	(*InstrumentHistory)(nil),                    // 33: instrument_service.InstrumentHistory
	(*GetByIDRequest)(nil),                       // 34: instrument_service.GetByIDRequest
	(*FilterInstrumentsResponse)(nil),            // 35: instrument_service.FilterInstrumentsResponse
	(*FilterInstrument)(nil),                     // 36: instrument_service.FilterInstrument
	(*GetExchangesByTypeRequest)(nil),            // 37: instrument_service.GetExchangesByTypeRequest
	(*FilterInstrumentsRequest)(nil),             // 38: instrument_service.FilterInstrumentsRequest
	(*GetShortDetailsByStocksRequest)(nil),       // 39: instrument_service.GetShortDetailsByStocksRequest
	(*GetShortDetailsByStocksData)(nil),          // 40: instrument_service.GetShortDetailsByStocksData
	(*GetShortDetailsByStocksResponse)(nil),      // 41: instrument_service.GetShortDetailsByStocksResponse
	(*GetSymbolIdsResponse)(nil),                 // 42: instrument_service.GetSymbolIdsResponse
	(*FavouriteInstrument)(nil),                  // 43: instrument_service.FavouriteInstrument
	(*FixType)(nil),                              // 44: instrument_service.FixType
	(*FixGroupResponse)(nil),                     // 45: instrument_service.FixGroupResponse
	(*FixExchangesResponse)(nil),                 // 46: instrument_service.FixExchangesResponse
	(*KeyStats)(nil),                             // 47: instrument_service.KeyStats
	(*BussinessSummary)(nil),                     // 48: instrument_service.BussinessSummary
	(*StockNews)(nil),                            // 49: instrument_service.StockNews
	(*empty.Empty)(nil),                          // 50: google.protobuf.Empty
	(*FixSymbol)(nil),                            // 51: instrument_service.FixSymbol
}
var file_instrument_service_proto_depIdxs = []int32{
	43, // 0: instrument_service.FavouriteInstrumentList.instruments:type_name -> instrument_service.FavouriteInstrument
	44, // 1: instrument_service.GetTypesResponse.fix_types:type_name -> instrument_service.FixType
	45, // 2: instrument_service.GetGroupsResponse.groups:type_name -> instrument_service.FixGroupResponse
	46, // 3: instrument_service.GetExchangesResponse.exchanges:type_name -> instrument_service.FixExchangesResponse
	10, // 4: instrument_service.RetrieveStoriesByIdsResponse.stories:type_name -> instrument_service.NewsStory
	47, // 5: instrument_service.GetKeyStatsResponse.key_stats:type_name -> instrument_service.KeyStats
	48, // 6: instrument_service.GetBussinessSummaryResponse.bussiness_summary:type_name -> instrument_service.BussinessSummary
	49, // 7: instrument_service.GetStockNewsResponse.stock_news:type_name -> instrument_service.StockNews
	24, // 8: instrument_service.CreateApplicantRequest.personal_info:type_name -> instrument_service.PersonalInfo
	25, // 9: instrument_service.CreateApplicantRequest.address:type_name -> instrument_service.Address
	28, // 10: instrument_service.UploadDocumentRequest.metadata:type_name -> instrument_service.UploadDocumentMetadata
	33, // 11: instrument_service.GetInstrumentHistoryResponse.instruents:type_name -> instrument_service.InstrumentHistory
	36, // 12: instrument_service.FilterInstrumentsResponse.instruments:type_name -> instrument_service.FilterInstrument
	40, // 13: instrument_service.GetShortDetailsByStocksResponse.instruments:type_name -> instrument_service.GetShortDetailsByStocksData
	50, // 14: instrument_service.InstrumentSevice.GetAllExchanges:input_type -> google.protobuf.Empty
	34, // 15: instrument_service.InstrumentSevice.GetAllGroups:input_type -> instrument_service.GetByIDRequest
	50, // 16: instrument_service.InstrumentSevice.GetAllTypes:input_type -> google.protobuf.Empty
	38, // 17: instrument_service.InstrumentSevice.FilterInstruments:input_type -> instrument_service.FilterInstrumentsRequest
	31, // 18: instrument_service.InstrumentSevice.GetInstrumentByID:input_type -> instrument_service.GetInstrumentByIDRequest
	19, // 19: instrument_service.InstrumentSevice.GetBussinessSummary:input_type -> instrument_service.GetBussinessSummaryRequest
	34, // 20: instrument_service.InstrumentSevice.GetGroupByID:input_type -> instrument_service.GetByIDRequest
	34, // 21: instrument_service.InstrumentSevice.GetExchangeByID:input_type -> instrument_service.GetByIDRequest
	37, // 22: instrument_service.InstrumentSevice.GetExchangesByType:input_type -> instrument_service.GetExchangesByTypeRequest
	39, // 23: instrument_service.InstrumentSevice.GetShortDetailsByStocks:input_type -> instrument_service.GetShortDetailsByStocksRequest
	4,  // 24: instrument_service.InstrumentSevice.UpdateIcon:input_type -> instrument_service.GetInstrumentsByTypeRequest
	30, // 25: instrument_service.InstrumentSevice.GetInstrumentHistory:input_type -> instrument_service.GetInstrumentHistoryRequest
	27, // 26: instrument_service.InstrumentSevice.UploadDocument:input_type -> instrument_service.UploadDocumentRequest
	12, // 27: instrument_service.InstrumentSevice.GetApplicantInfoByExternalID:input_type -> instrument_service.GetApplicantInfoByExternalIdRequest
	15, // 28: instrument_service.InstrumentSevice.GetApplicantInfo:input_type -> instrument_service.GetApplicantInfoRequest
	23, // 29: instrument_service.InstrumentSevice.CreateApplicant:input_type -> instrument_service.CreateApplicantRequest
	20, // 30: instrument_service.InstrumentSevice.GetStockNews:input_type -> instrument_service.GetStockNewsRequest
	8,  // 31: instrument_service.InstrumentSevice.RetrieveStoriesByIds:input_type -> instrument_service.RetrieveStoriesByIdsRequests
	17, // 32: instrument_service.InstrumentSevice.GetKeyStats:input_type -> instrument_service.GetKeyStatsRequest
	13, // 33: instrument_service.InstrumentSevice.GenerateToken:input_type -> instrument_service.GenerateTokenRequest
	50, // 34: instrument_service.InstrumentSevice.GetAllSymbolId:input_type -> google.protobuf.Empty
	0,  // 35: instrument_service.InstrumentSevice.AddFavouriteInstrument:input_type -> instrument_service.AddFavouriteInstrumentRequest
	1,  // 36: instrument_service.InstrumentSevice.GetFavouriteInstruments:input_type -> instrument_service.InvestorId
	43, // 37: instrument_service.InstrumentSevice.RemoveFromFavourite:input_type -> instrument_service.FavouriteInstrument
	43, // 38: instrument_service.InstrumentSevice.IsInstrumentFavourite:input_type -> instrument_service.FavouriteInstrument
	7,  // 39: instrument_service.InstrumentSevice.GetAllExchanges:output_type -> instrument_service.GetExchangesResponse
	6,  // 40: instrument_service.InstrumentSevice.GetAllGroups:output_type -> instrument_service.GetGroupsResponse
	5,  // 41: instrument_service.InstrumentSevice.GetAllTypes:output_type -> instrument_service.GetTypesResponse
	35, // 42: instrument_service.InstrumentSevice.FilterInstruments:output_type -> instrument_service.FilterInstrumentsResponse
	51, // 43: instrument_service.InstrumentSevice.GetInstrumentByID:output_type -> instrument_service.FixSymbol
	21, // 44: instrument_service.InstrumentSevice.GetBussinessSummary:output_type -> instrument_service.GetBussinessSummaryResponse
	45, // 45: instrument_service.InstrumentSevice.GetGroupByID:output_type -> instrument_service.FixGroupResponse
	46, // 46: instrument_service.InstrumentSevice.GetExchangeByID:output_type -> instrument_service.FixExchangesResponse
	7,  // 47: instrument_service.InstrumentSevice.GetExchangesByType:output_type -> instrument_service.GetExchangesResponse
	41, // 48: instrument_service.InstrumentSevice.GetShortDetailsByStocks:output_type -> instrument_service.GetShortDetailsByStocksResponse
	50, // 49: instrument_service.InstrumentSevice.UpdateIcon:output_type -> google.protobuf.Empty
	32, // 50: instrument_service.InstrumentSevice.GetInstrumentHistory:output_type -> instrument_service.GetInstrumentHistoryResponse
	29, // 51: instrument_service.InstrumentSevice.UploadDocument:output_type -> instrument_service.UploadDocumentResponse
	11, // 52: instrument_service.InstrumentSevice.GetApplicantInfoByExternalID:output_type -> instrument_service.GetApplicantInfoByExternalIdResponse
	16, // 53: instrument_service.InstrumentSevice.GetApplicantInfo:output_type -> instrument_service.GetApplicantInfoResponse
	26, // 54: instrument_service.InstrumentSevice.CreateApplicant:output_type -> instrument_service.CreateApplicantResponse
	22, // 55: instrument_service.InstrumentSevice.GetStockNews:output_type -> instrument_service.GetStockNewsResponse
	9,  // 56: instrument_service.InstrumentSevice.RetrieveStoriesByIds:output_type -> instrument_service.RetrieveStoriesByIdsResponse
	18, // 57: instrument_service.InstrumentSevice.GetKeyStats:output_type -> instrument_service.GetKeyStatsResponse
	14, // 58: instrument_service.InstrumentSevice.GenerateToken:output_type -> instrument_service.GenerateTokenResponse
	42, // 59: instrument_service.InstrumentSevice.GetAllSymbolId:output_type -> instrument_service.GetSymbolIdsResponse
	43, // 60: instrument_service.InstrumentSevice.AddFavouriteInstrument:output_type -> instrument_service.FavouriteInstrument
	2,  // 61: instrument_service.InstrumentSevice.GetFavouriteInstruments:output_type -> instrument_service.FavouriteInstrumentList
	43, // 62: instrument_service.InstrumentSevice.RemoveFromFavourite:output_type -> instrument_service.FavouriteInstrument
	3,  // 63: instrument_service.InstrumentSevice.IsInstrumentFavourite:output_type -> instrument_service.IsInstrumentFavouriteResponse
	39, // [39:64] is the sub-list for method output_type
	14, // [14:39] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_instrument_service_proto_init() }
func file_instrument_service_proto_init() {
	if File_instrument_service_proto != nil {
		return
	}
	file_instrument_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_instrument_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFavouriteInstrumentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instrument_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvestorId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instrument_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FavouriteInstrumentList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instrument_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsInstrumentFavouriteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instrument_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInstrumentsByTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instrument_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTypesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instrument_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instrument_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExchangesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instrument_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveStoriesByIdsRequests); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instrument_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveStoriesByIdsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instrument_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewsStory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instrument_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetApplicantInfoByExternalIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instrument_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetApplicantInfoByExternalIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instrument_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instrument_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instrument_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetApplicantInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instrument_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetApplicantInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instrument_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKeyStatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instrument_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKeyStatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instrument_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBussinessSummaryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instrument_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStockNewsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instrument_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBussinessSummaryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instrument_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStockNewsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instrument_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateApplicantRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instrument_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PersonalInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instrument_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instrument_service_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateApplicantResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instrument_service_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadDocumentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instrument_service_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadDocumentMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instrument_service_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadDocumentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instrument_service_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInstrumentHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instrument_service_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInstrumentByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instrument_service_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInstrumentHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instrument_service_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstrumentHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instrument_service_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instrument_service_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterInstrumentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instrument_service_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterInstrument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instrument_service_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExchangesByTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instrument_service_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterInstrumentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instrument_service_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShortDetailsByStocksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instrument_service_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShortDetailsByStocksData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instrument_service_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShortDetailsByStocksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instrument_service_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSymbolIdsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_instrument_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   43,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_instrument_service_proto_goTypes,
		DependencyIndexes: file_instrument_service_proto_depIdxs,
		MessageInfos:      file_instrument_service_proto_msgTypes,
	}.Build()
	File_instrument_service_proto = out.File
	file_instrument_service_proto_rawDesc = nil
	file_instrument_service_proto_goTypes = nil
	file_instrument_service_proto_depIdxs = nil
}

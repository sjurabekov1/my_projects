// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.6.1
// source: integration.proto

package integration_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FixType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *FixType) Reset() {
	*x = FixType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FixType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FixType) ProtoMessage() {}

func (x *FixType) ProtoReflect() protoreflect.Message {
	mi := &file_integration_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FixType.ProtoReflect.Descriptor instead.
func (*FixType) Descriptor() ([]byte, []int) {
	return file_integration_proto_rawDescGZIP(), []int{0}
}

func (x *FixType) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type FixSymbolOptionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OptionGroupId string `protobuf:"bytes,1,opt,name=option_group_id,json=optionGroupId,proto3" json:"option_group_id,omitempty"`
	Right         string `protobuf:"bytes,2,opt,name=right,proto3" json:"right,omitempty"`
	StrikePrice   string `protobuf:"bytes,3,opt,name=strike_price,json=strikePrice,proto3" json:"strike_price,omitempty"`
}

func (x *FixSymbolOptionData) Reset() {
	*x = FixSymbolOptionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FixSymbolOptionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FixSymbolOptionData) ProtoMessage() {}

func (x *FixSymbolOptionData) ProtoReflect() protoreflect.Message {
	mi := &file_integration_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FixSymbolOptionData.ProtoReflect.Descriptor instead.
func (*FixSymbolOptionData) Descriptor() ([]byte, []int) {
	return file_integration_proto_rawDescGZIP(), []int{1}
}

func (x *FixSymbolOptionData) GetOptionGroupId() string {
	if x != nil {
		return x.OptionGroupId
	}
	return ""
}

func (x *FixSymbolOptionData) GetRight() string {
	if x != nil {
		return x.Right
	}
	return ""
}

func (x *FixSymbolOptionData) GetStrikePrice() string {
	if x != nil {
		return x.StrikePrice
	}
	return ""
}

type FixSymbolIdentifiers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ISIN  string `protobuf:"bytes,1,opt,name=ISIN,proto3" json:"ISIN,omitempty"`
	FIGI  string `protobuf:"bytes,2,opt,name=FIGI,proto3" json:"FIGI,omitempty"`
	CUSIP string `protobuf:"bytes,3,opt,name=CUSIP,proto3" json:"CUSIP,omitempty"`
	RIC   string `protobuf:"bytes,4,opt,name=RIC,proto3" json:"RIC,omitempty"`
	SEDOL string `protobuf:"bytes,5,opt,name=SEDOL,proto3" json:"SEDOL,omitempty"`
}

func (x *FixSymbolIdentifiers) Reset() {
	*x = FixSymbolIdentifiers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FixSymbolIdentifiers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FixSymbolIdentifiers) ProtoMessage() {}

func (x *FixSymbolIdentifiers) ProtoReflect() protoreflect.Message {
	mi := &file_integration_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FixSymbolIdentifiers.ProtoReflect.Descriptor instead.
func (*FixSymbolIdentifiers) Descriptor() ([]byte, []int) {
	return file_integration_proto_rawDescGZIP(), []int{2}
}

func (x *FixSymbolIdentifiers) GetISIN() string {
	if x != nil {
		return x.ISIN
	}
	return ""
}

func (x *FixSymbolIdentifiers) GetFIGI() string {
	if x != nil {
		return x.FIGI
	}
	return ""
}

func (x *FixSymbolIdentifiers) GetCUSIP() string {
	if x != nil {
		return x.CUSIP
	}
	return ""
}

func (x *FixSymbolIdentifiers) GetRIC() string {
	if x != nil {
		return x.RIC
	}
	return ""
}

func (x *FixSymbolIdentifiers) GetSEDOL() string {
	if x != nil {
		return x.SEDOL
	}
	return ""
}

type FixSymbol struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Ticker             string                `protobuf:"bytes,2,opt,name=ticker,proto3" json:"ticker,omitempty"`
	Name               string                `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description        string                `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Group              string                `protobuf:"bytes,5,opt,name=group,proto3" json:"group,omitempty"`
	UnderlyingSymbolId string                `protobuf:"bytes,6,opt,name=underlying_symbol_id,json=underlyingSymbolId,proto3" json:"underlying_symbol_id,omitempty"`
	Exchange           string                `protobuf:"bytes,7,opt,name=exchange,proto3" json:"exchange,omitempty"`
	Expiration         int64                 `protobuf:"varint,8,opt,name=expiration,proto3" json:"expiration,omitempty"`
	Country            string                `protobuf:"bytes,9,opt,name=country,proto3" json:"country,omitempty"`
	Type               string                `protobuf:"bytes,10,opt,name=type,proto3" json:"type,omitempty"`
	OptionData         *FixSymbolOptionData  `protobuf:"bytes,11,opt,name=option_data,json=optionData,proto3" json:"option_data,omitempty"`
	Mpi                string                `protobuf:"bytes,12,opt,name=mpi,proto3" json:"mpi,omitempty"`
	Currency           string                `protobuf:"bytes,13,opt,name=currency,proto3" json:"currency,omitempty"`
	Identifiers        *FixSymbolIdentifiers `protobuf:"bytes,14,opt,name=identifiers,proto3" json:"identifiers,omitempty"`
	Icon               string                `protobuf:"bytes,15,opt,name=icon,proto3" json:"icon,omitempty"`
	IsFavorite         bool                  `protobuf:"varint,16,opt,name=is_favorite,json=isFavorite,proto3" json:"is_favorite,omitempty"`
	Musaffa            *MusaffoData          `protobuf:"bytes,17,opt,name=musaffa,proto3" json:"musaffa,omitempty"`
	BussinessSummary   *BussinessSummary     `protobuf:"bytes,18,opt,name=bussiness_summary,json=bussinessSummary,proto3" json:"bussiness_summary,omitempty"`
	KeyStats           *KeyStats             `protobuf:"bytes,19,opt,name=key_stats,json=keyStats,proto3" json:"key_stats,omitempty"`
	PurchaseStatuses   []*PurchaseStatus     `protobuf:"bytes,20,rep,name=purchase_statuses,json=purchaseStatuses,proto3" json:"purchase_statuses,omitempty"`
	IsBuyable          bool                  `protobuf:"varint,21,opt,name=is_buyable,json=isBuyable,proto3" json:"is_buyable,omitempty"`
	IsSellabe          bool                  `protobuf:"varint,22,opt,name=is_sellabe,json=isSellabe,proto3" json:"is_sellabe,omitempty"`
	Active             bool                  `protobuf:"varint,23,opt,name=active,proto3" json:"active,omitempty"`
	StockType          string                `protobuf:"bytes,24,opt,name=stock_type,json=stockType,proto3" json:"stock_type,omitempty"`
}

func (x *FixSymbol) Reset() {
	*x = FixSymbol{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FixSymbol) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FixSymbol) ProtoMessage() {}

func (x *FixSymbol) ProtoReflect() protoreflect.Message {
	mi := &file_integration_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FixSymbol.ProtoReflect.Descriptor instead.
func (*FixSymbol) Descriptor() ([]byte, []int) {
	return file_integration_proto_rawDescGZIP(), []int{3}
}

func (x *FixSymbol) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FixSymbol) GetTicker() string {
	if x != nil {
		return x.Ticker
	}
	return ""
}

func (x *FixSymbol) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FixSymbol) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *FixSymbol) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *FixSymbol) GetUnderlyingSymbolId() string {
	if x != nil {
		return x.UnderlyingSymbolId
	}
	return ""
}

func (x *FixSymbol) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *FixSymbol) GetExpiration() int64 {
	if x != nil {
		return x.Expiration
	}
	return 0
}

func (x *FixSymbol) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *FixSymbol) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *FixSymbol) GetOptionData() *FixSymbolOptionData {
	if x != nil {
		return x.OptionData
	}
	return nil
}

func (x *FixSymbol) GetMpi() string {
	if x != nil {
		return x.Mpi
	}
	return ""
}

func (x *FixSymbol) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *FixSymbol) GetIdentifiers() *FixSymbolIdentifiers {
	if x != nil {
		return x.Identifiers
	}
	return nil
}

func (x *FixSymbol) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *FixSymbol) GetIsFavorite() bool {
	if x != nil {
		return x.IsFavorite
	}
	return false
}

func (x *FixSymbol) GetMusaffa() *MusaffoData {
	if x != nil {
		return x.Musaffa
	}
	return nil
}

func (x *FixSymbol) GetBussinessSummary() *BussinessSummary {
	if x != nil {
		return x.BussinessSummary
	}
	return nil
}

func (x *FixSymbol) GetKeyStats() *KeyStats {
	if x != nil {
		return x.KeyStats
	}
	return nil
}

func (x *FixSymbol) GetPurchaseStatuses() []*PurchaseStatus {
	if x != nil {
		return x.PurchaseStatuses
	}
	return nil
}

func (x *FixSymbol) GetIsBuyable() bool {
	if x != nil {
		return x.IsBuyable
	}
	return false
}

func (x *FixSymbol) GetIsSellabe() bool {
	if x != nil {
		return x.IsSellabe
	}
	return false
}

func (x *FixSymbol) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *FixSymbol) GetStockType() string {
	if x != nil {
		return x.StockType
	}
	return ""
}

type KeyStatsNew struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AverageDailyVolumeForLast_10Days float32 `protobuf:"fixed32,2,opt,name=average_daily_volume_for_last_10_days,json=averageDailyVolumeForLast10Days,proto3" json:"average_daily_volume_for_last_10_days,omitempty"`
	MarketCapitalization             float32 `protobuf:"fixed32,3,opt,name=market_capitalization,json=marketCapitalization,proto3" json:"market_capitalization,omitempty"`
	PriceChange_1Day                 float32 `protobuf:"fixed32,4,opt,name=price_change_1_day,json=priceChange1Day,proto3" json:"price_change_1_day,omitempty"`
	PriceChange_5Day                 float32 `protobuf:"fixed32,5,opt,name=price_change_5_day,json=priceChange5Day,proto3" json:"price_change_5_day,omitempty"`
	Eps                              float32 `protobuf:"fixed32,6,opt,name=eps,proto3" json:"eps,omitempty"`
	DividientPerShare                float32 `protobuf:"fixed32,7,opt,name=dividient_per_share,json=dividientPerShare,proto3" json:"dividient_per_share,omitempty"`
	PE                               float32 `protobuf:"fixed32,8,opt,name=p_e,json=pE,proto3" json:"p_e,omitempty"`
	DividientYield                   float32 `protobuf:"fixed32,9,opt,name=dividient_yield,json=dividientYield,proto3" json:"dividient_yield,omitempty"`
	CurrentRatio                     float32 `protobuf:"fixed32,10,opt,name=current_ratio,json=currentRatio,proto3" json:"current_ratio,omitempty"`
	LTDebtEquility                   float32 `protobuf:"fixed32,11,opt,name=l_t_debt_equility,json=lTDebtEquility,proto3" json:"l_t_debt_equility,omitempty"`
	QuickRatio                       float32 `protobuf:"fixed32,12,opt,name=quick_ratio,json=quickRatio,proto3" json:"quick_ratio,omitempty"`
	Roa                              float32 `protobuf:"fixed32,13,opt,name=roa,proto3" json:"roa,omitempty"`
	Roi                              float32 `protobuf:"fixed32,14,opt,name=roi,proto3" json:"roi,omitempty"`
	TotalDebtEquity                  float32 `protobuf:"fixed32,17,opt,name=total_debt_equity,json=totalDebtEquity,proto3" json:"total_debt_equity,omitempty"`
	Dividient                        float64 `protobuf:"fixed64,15,opt,name=dividient,proto3" json:"dividient,omitempty"`
	DividientYieldRatio              float64 `protobuf:"fixed64,16,opt,name=dividient_yield_ratio,json=dividientYieldRatio,proto3" json:"dividient_yield_ratio,omitempty"`
}

func (x *KeyStatsNew) Reset() {
	*x = KeyStatsNew{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyStatsNew) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyStatsNew) ProtoMessage() {}

func (x *KeyStatsNew) ProtoReflect() protoreflect.Message {
	mi := &file_integration_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyStatsNew.ProtoReflect.Descriptor instead.
func (*KeyStatsNew) Descriptor() ([]byte, []int) {
	return file_integration_proto_rawDescGZIP(), []int{4}
}

func (x *KeyStatsNew) GetAverageDailyVolumeForLast_10Days() float32 {
	if x != nil {
		return x.AverageDailyVolumeForLast_10Days
	}
	return 0
}

func (x *KeyStatsNew) GetMarketCapitalization() float32 {
	if x != nil {
		return x.MarketCapitalization
	}
	return 0
}

func (x *KeyStatsNew) GetPriceChange_1Day() float32 {
	if x != nil {
		return x.PriceChange_1Day
	}
	return 0
}

func (x *KeyStatsNew) GetPriceChange_5Day() float32 {
	if x != nil {
		return x.PriceChange_5Day
	}
	return 0
}

func (x *KeyStatsNew) GetEps() float32 {
	if x != nil {
		return x.Eps
	}
	return 0
}

func (x *KeyStatsNew) GetDividientPerShare() float32 {
	if x != nil {
		return x.DividientPerShare
	}
	return 0
}

func (x *KeyStatsNew) GetPE() float32 {
	if x != nil {
		return x.PE
	}
	return 0
}

func (x *KeyStatsNew) GetDividientYield() float32 {
	if x != nil {
		return x.DividientYield
	}
	return 0
}

func (x *KeyStatsNew) GetCurrentRatio() float32 {
	if x != nil {
		return x.CurrentRatio
	}
	return 0
}

func (x *KeyStatsNew) GetLTDebtEquility() float32 {
	if x != nil {
		return x.LTDebtEquility
	}
	return 0
}

func (x *KeyStatsNew) GetQuickRatio() float32 {
	if x != nil {
		return x.QuickRatio
	}
	return 0
}

func (x *KeyStatsNew) GetRoa() float32 {
	if x != nil {
		return x.Roa
	}
	return 0
}

func (x *KeyStatsNew) GetRoi() float32 {
	if x != nil {
		return x.Roi
	}
	return 0
}

func (x *KeyStatsNew) GetTotalDebtEquity() float32 {
	if x != nil {
		return x.TotalDebtEquity
	}
	return 0
}

func (x *KeyStatsNew) GetDividient() float64 {
	if x != nil {
		return x.Dividient
	}
	return 0
}

func (x *KeyStatsNew) GetDividientYieldRatio() float64 {
	if x != nil {
		return x.DividientYieldRatio
	}
	return 0
}

type PurchaseStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PocketId  string `protobuf:"bytes,1,opt,name=pocket_id,json=pocketId,proto3" json:"pocket_id,omitempty"`
	Count     int32  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	SellCount int32  `protobuf:"varint,3,opt,name=sell_count,json=sellCount,proto3" json:"sell_count,omitempty"`
}

func (x *PurchaseStatus) Reset() {
	*x = PurchaseStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchaseStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseStatus) ProtoMessage() {}

func (x *PurchaseStatus) ProtoReflect() protoreflect.Message {
	mi := &file_integration_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseStatus.ProtoReflect.Descriptor instead.
func (*PurchaseStatus) Descriptor() ([]byte, []int) {
	return file_integration_proto_rawDescGZIP(), []int{5}
}

func (x *PurchaseStatus) GetPocketId() string {
	if x != nil {
		return x.PocketId
	}
	return ""
}

func (x *PurchaseStatus) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *PurchaseStatus) GetSellCount() int32 {
	if x != nil {
		return x.SellCount
	}
	return 0
}

type MusaffoData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdMusaffo                          string                              `protobuf:"bytes,1,opt,name=id_musaffo,json=idMusaffo,proto3" json:"id_musaffo,omitempty"`
	CompanyName                        string                              `protobuf:"bytes,2,opt,name=company_name,json=companyName,proto3" json:"company_name,omitempty"`
	StockName                          string                              `protobuf:"bytes,3,opt,name=stock_name,json=stockName,proto3" json:"stock_name,omitempty"`
	ShariahComplianceStatus            string                              `protobuf:"bytes,4,opt,name=shariah_compliance_status,json=shariahComplianceStatus,proto3" json:"shariah_compliance_status,omitempty"`
	ComplianceRanking                  int64                               `protobuf:"varint,5,opt,name=compliance_ranking,json=complianceRanking,proto3" json:"compliance_ranking,omitempty"`
	BusinessActivity                   *BusinessActivity                   `protobuf:"bytes,6,opt,name=business_activity,json=businessActivity,proto3" json:"business_activity,omitempty"`
	InterestBearingSecuritiesAndAssets *InterestBearingSecuritiesAndAssets `protobuf:"bytes,7,opt,name=interest_bearing_securities_and_assets,json=interestBearingSecuritiesAndAssets,proto3" json:"interest_bearing_securities_and_assets,omitempty"`
	InterestBearingDebt                *InterestBearingDebt                `protobuf:"bytes,8,opt,name=interest_bearing_debt,json=interestBearingDebt,proto3" json:"interest_bearing_debt,omitempty"`
	ReportSource                       string                              `protobuf:"bytes,9,opt,name=report_source,json=reportSource,proto3" json:"report_source,omitempty"`
	ReportDate                         string                              `protobuf:"bytes,10,opt,name=report_date,json=reportDate,proto3" json:"report_date,omitempty"`
	TotalRevenue                       float64                             `protobuf:"fixed64,11,opt,name=total_revenue,json=totalRevenue,proto3" json:"total_revenue,omitempty"`
	Trailing_36MonthAvrCap             float64                             `protobuf:"fixed64,12,opt,name=trailing_36_month_avr_cap,json=trailing36MonthAvrCap,proto3" json:"trailing_36_month_avr_cap,omitempty"`
	LastUpdate                         string                              `protobuf:"bytes,13,opt,name=last_update,json=lastUpdate,proto3" json:"last_update,omitempty"`
}

func (x *MusaffoData) Reset() {
	*x = MusaffoData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MusaffoData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MusaffoData) ProtoMessage() {}

func (x *MusaffoData) ProtoReflect() protoreflect.Message {
	mi := &file_integration_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MusaffoData.ProtoReflect.Descriptor instead.
func (*MusaffoData) Descriptor() ([]byte, []int) {
	return file_integration_proto_rawDescGZIP(), []int{6}
}

func (x *MusaffoData) GetIdMusaffo() string {
	if x != nil {
		return x.IdMusaffo
	}
	return ""
}

func (x *MusaffoData) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *MusaffoData) GetStockName() string {
	if x != nil {
		return x.StockName
	}
	return ""
}

func (x *MusaffoData) GetShariahComplianceStatus() string {
	if x != nil {
		return x.ShariahComplianceStatus
	}
	return ""
}

func (x *MusaffoData) GetComplianceRanking() int64 {
	if x != nil {
		return x.ComplianceRanking
	}
	return 0
}

func (x *MusaffoData) GetBusinessActivity() *BusinessActivity {
	if x != nil {
		return x.BusinessActivity
	}
	return nil
}

func (x *MusaffoData) GetInterestBearingSecuritiesAndAssets() *InterestBearingSecuritiesAndAssets {
	if x != nil {
		return x.InterestBearingSecuritiesAndAssets
	}
	return nil
}

func (x *MusaffoData) GetInterestBearingDebt() *InterestBearingDebt {
	if x != nil {
		return x.InterestBearingDebt
	}
	return nil
}

func (x *MusaffoData) GetReportSource() string {
	if x != nil {
		return x.ReportSource
	}
	return ""
}

func (x *MusaffoData) GetReportDate() string {
	if x != nil {
		return x.ReportDate
	}
	return ""
}

func (x *MusaffoData) GetTotalRevenue() float64 {
	if x != nil {
		return x.TotalRevenue
	}
	return 0
}

func (x *MusaffoData) GetTrailing_36MonthAvrCap() float64 {
	if x != nil {
		return x.Trailing_36MonthAvrCap
	}
	return 0
}

func (x *MusaffoData) GetLastUpdate() string {
	if x != nil {
		return x.LastUpdate
	}
	return ""
}

type InterestBearingSecuritiesAndAssets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InterestRatio float32 `protobuf:"fixed32,1,opt,name=interestRatio,proto3" json:"interestRatio,omitempty"`
	Status        string  `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Amount        float32 `protobuf:"fixed32,3,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *InterestBearingSecuritiesAndAssets) Reset() {
	*x = InterestBearingSecuritiesAndAssets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterestBearingSecuritiesAndAssets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterestBearingSecuritiesAndAssets) ProtoMessage() {}

func (x *InterestBearingSecuritiesAndAssets) ProtoReflect() protoreflect.Message {
	mi := &file_integration_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterestBearingSecuritiesAndAssets.ProtoReflect.Descriptor instead.
func (*InterestBearingSecuritiesAndAssets) Descriptor() ([]byte, []int) {
	return file_integration_proto_rawDescGZIP(), []int{7}
}

func (x *InterestBearingSecuritiesAndAssets) GetInterestRatio() float32 {
	if x != nil {
		return x.InterestRatio
	}
	return 0
}

func (x *InterestBearingSecuritiesAndAssets) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *InterestBearingSecuritiesAndAssets) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type InterestBearingDebt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DebtRatio float32 `protobuf:"fixed32,1,opt,name=debtRatio,proto3" json:"debtRatio,omitempty"`
	Status    string  `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Amount    float32 `protobuf:"fixed32,3,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *InterestBearingDebt) Reset() {
	*x = InterestBearingDebt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterestBearingDebt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterestBearingDebt) ProtoMessage() {}

func (x *InterestBearingDebt) ProtoReflect() protoreflect.Message {
	mi := &file_integration_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterestBearingDebt.ProtoReflect.Descriptor instead.
func (*InterestBearingDebt) Descriptor() ([]byte, []int) {
	return file_integration_proto_rawDescGZIP(), []int{8}
}

func (x *InterestBearingDebt) GetDebtRatio() float32 {
	if x != nil {
		return x.DebtRatio
	}
	return 0
}

func (x *InterestBearingDebt) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *InterestBearingDebt) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type BusinessActivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotHalal        float64 `protobuf:"fixed64,1,opt,name=not_halal,json=notHalal,proto3" json:"not_halal,omitempty"`
	Questionable    float64 `protobuf:"fixed64,2,opt,name=questionable,proto3" json:"questionable,omitempty"`
	Halal           float64 `protobuf:"fixed64,3,opt,name=halal,proto3" json:"halal,omitempty"`
	Status          string  `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	HahalRevenue    float64 `protobuf:"fixed64,5,opt,name=hahal_revenue,json=hahalRevenue,proto3" json:"hahal_revenue,omitempty"`
	DoubtfulRevenue float64 `protobuf:"fixed64,6,opt,name=doubtful_revenue,json=doubtfulRevenue,proto3" json:"doubtful_revenue,omitempty"`
	NotHalalRevenue float64 `protobuf:"fixed64,7,opt,name=not_halal_revenue,json=notHalalRevenue,proto3" json:"not_halal_revenue,omitempty"`
}

func (x *BusinessActivity) Reset() {
	*x = BusinessActivity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BusinessActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BusinessActivity) ProtoMessage() {}

func (x *BusinessActivity) ProtoReflect() protoreflect.Message {
	mi := &file_integration_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BusinessActivity.ProtoReflect.Descriptor instead.
func (*BusinessActivity) Descriptor() ([]byte, []int) {
	return file_integration_proto_rawDescGZIP(), []int{9}
}

func (x *BusinessActivity) GetNotHalal() float64 {
	if x != nil {
		return x.NotHalal
	}
	return 0
}

func (x *BusinessActivity) GetQuestionable() float64 {
	if x != nil {
		return x.Questionable
	}
	return 0
}

func (x *BusinessActivity) GetHalal() float64 {
	if x != nil {
		return x.Halal
	}
	return 0
}

func (x *BusinessActivity) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *BusinessActivity) GetHahalRevenue() float64 {
	if x != nil {
		return x.HahalRevenue
	}
	return 0
}

func (x *BusinessActivity) GetDoubtfulRevenue() float64 {
	if x != nil {
		return x.DoubtfulRevenue
	}
	return 0
}

func (x *BusinessActivity) GetNotHalalRevenue() float64 {
	if x != nil {
		return x.NotHalalRevenue
	}
	return 0
}

type FixUserAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status    string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	AccountId string `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
}

func (x *FixUserAccount) Reset() {
	*x = FixUserAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FixUserAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FixUserAccount) ProtoMessage() {}

func (x *FixUserAccount) ProtoReflect() protoreflect.Message {
	mi := &file_integration_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FixUserAccount.ProtoReflect.Descriptor instead.
func (*FixUserAccount) Descriptor() ([]byte, []int) {
	return file_integration_proto_rawDescGZIP(), []int{10}
}

func (x *FixUserAccount) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *FixUserAccount) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

type FixOrderParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId      string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Instrument     string `protobuf:"bytes,2,opt,name=instrument,proto3" json:"instrument,omitempty"`
	SymbolId       string `protobuf:"bytes,3,opt,name=symbol_id,json=symbolId,proto3" json:"symbol_id,omitempty"`
	Side           string `protobuf:"bytes,4,opt,name=side,proto3" json:"side,omitempty"`
	Quantity       string `protobuf:"bytes,5,opt,name=quantity,proto3" json:"quantity,omitempty"`
	OrderType      string `protobuf:"bytes,6,opt,name=order_type,json=orderType,proto3" json:"order_type,omitempty"`
	StopPrice      string `protobuf:"bytes,7,opt,name=stop_price,json=stopPrice,proto3" json:"stop_price,omitempty"`
	LimitPrice     string `protobuf:"bytes,8,opt,name=limit_price,json=limitPrice,proto3" json:"limit_price,omitempty"`
	PartQuantity   string `protobuf:"bytes,9,opt,name=part_quantity,json=partQuantity,proto3" json:"part_quantity,omitempty"`
	PlaceInterval  string `protobuf:"bytes,10,opt,name=place_interval,json=placeInterval,proto3" json:"place_interval,omitempty"`
	PriceDistance  string `protobuf:"bytes,11,opt,name=price_distance,json=priceDistance,proto3" json:"price_distance,omitempty"`
	Duration       string `protobuf:"bytes,12,opt,name=duration,proto3" json:"duration,omitempty"`
	GttExpiration  string `protobuf:"bytes,13,opt,name=gtt_expiration,json=gttExpiration,proto3" json:"gtt_expiration,omitempty"`
	ClientTag      string `protobuf:"bytes,14,opt,name=client_tag,json=clientTag,proto3" json:"client_tag,omitempty"`
	TakeProfit     string `protobuf:"bytes,15,opt,name=take_profit,json=takeProfit,proto3" json:"take_profit,omitempty"`
	StopLoss       string `protobuf:"bytes,16,opt,name=stop_loss,json=stopLoss,proto3" json:"stop_loss,omitempty"`
	OcoGroup       string `protobuf:"bytes,17,opt,name=oco_group,json=ocoGroup,proto3" json:"oco_group,omitempty"`
	IfDoneParentId string `protobuf:"bytes,18,opt,name=if_done_parent_id,json=ifDoneParentId,proto3" json:"if_done_parent_id,omitempty"`
	UserId         string `protobuf:"bytes,19,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *FixOrderParameters) Reset() {
	*x = FixOrderParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FixOrderParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FixOrderParameters) ProtoMessage() {}

func (x *FixOrderParameters) ProtoReflect() protoreflect.Message {
	mi := &file_integration_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FixOrderParameters.ProtoReflect.Descriptor instead.
func (*FixOrderParameters) Descriptor() ([]byte, []int) {
	return file_integration_proto_rawDescGZIP(), []int{11}
}

func (x *FixOrderParameters) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *FixOrderParameters) GetInstrument() string {
	if x != nil {
		return x.Instrument
	}
	return ""
}

func (x *FixOrderParameters) GetSymbolId() string {
	if x != nil {
		return x.SymbolId
	}
	return ""
}

func (x *FixOrderParameters) GetSide() string {
	if x != nil {
		return x.Side
	}
	return ""
}

func (x *FixOrderParameters) GetQuantity() string {
	if x != nil {
		return x.Quantity
	}
	return ""
}

func (x *FixOrderParameters) GetOrderType() string {
	if x != nil {
		return x.OrderType
	}
	return ""
}

func (x *FixOrderParameters) GetStopPrice() string {
	if x != nil {
		return x.StopPrice
	}
	return ""
}

func (x *FixOrderParameters) GetLimitPrice() string {
	if x != nil {
		return x.LimitPrice
	}
	return ""
}

func (x *FixOrderParameters) GetPartQuantity() string {
	if x != nil {
		return x.PartQuantity
	}
	return ""
}

func (x *FixOrderParameters) GetPlaceInterval() string {
	if x != nil {
		return x.PlaceInterval
	}
	return ""
}

func (x *FixOrderParameters) GetPriceDistance() string {
	if x != nil {
		return x.PriceDistance
	}
	return ""
}

func (x *FixOrderParameters) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *FixOrderParameters) GetGttExpiration() string {
	if x != nil {
		return x.GttExpiration
	}
	return ""
}

func (x *FixOrderParameters) GetClientTag() string {
	if x != nil {
		return x.ClientTag
	}
	return ""
}

func (x *FixOrderParameters) GetTakeProfit() string {
	if x != nil {
		return x.TakeProfit
	}
	return ""
}

func (x *FixOrderParameters) GetStopLoss() string {
	if x != nil {
		return x.StopLoss
	}
	return ""
}

func (x *FixOrderParameters) GetOcoGroup() string {
	if x != nil {
		return x.OcoGroup
	}
	return ""
}

func (x *FixOrderParameters) GetIfDoneParentId() string {
	if x != nil {
		return x.IfDoneParentId
	}
	return ""
}

func (x *FixOrderParameters) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type FixOrderFills struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time      string `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	Timestamp string `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Quantity  string `protobuf:"bytes,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Price     string `protobuf:"bytes,4,opt,name=price,proto3" json:"price,omitempty"`
	Position  int32  `protobuf:"varint,5,opt,name=position,proto3" json:"position,omitempty"`
}

func (x *FixOrderFills) Reset() {
	*x = FixOrderFills{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FixOrderFills) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FixOrderFills) ProtoMessage() {}

func (x *FixOrderFills) ProtoReflect() protoreflect.Message {
	mi := &file_integration_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FixOrderFills.ProtoReflect.Descriptor instead.
func (*FixOrderFills) Descriptor() ([]byte, []int) {
	return file_integration_proto_rawDescGZIP(), []int{12}
}

func (x *FixOrderFills) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *FixOrderFills) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *FixOrderFills) GetQuantity() string {
	if x != nil {
		return x.Quantity
	}
	return ""
}

func (x *FixOrderFills) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *FixOrderFills) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

type FixOrderState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status     string           `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	LastUpdate string           `protobuf:"bytes,2,opt,name=last_update,json=lastUpdate,proto3" json:"last_update,omitempty"`
	Fills      []*FixOrderFills `protobuf:"bytes,3,rep,name=fills,proto3" json:"fills,omitempty"`
	Reason     string           `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *FixOrderState) Reset() {
	*x = FixOrderState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FixOrderState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FixOrderState) ProtoMessage() {}

func (x *FixOrderState) ProtoReflect() protoreflect.Message {
	mi := &file_integration_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FixOrderState.ProtoReflect.Descriptor instead.
func (*FixOrderState) Descriptor() ([]byte, []int) {
	return file_integration_proto_rawDescGZIP(), []int{13}
}

func (x *FixOrderState) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *FixOrderState) GetLastUpdate() string {
	if x != nil {
		return x.LastUpdate
	}
	return ""
}

func (x *FixOrderState) GetFills() []*FixOrderFills {
	if x != nil {
		return x.Fills
	}
	return nil
}

func (x *FixOrderState) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type FixOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	OrderId               string              `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	PlaceTime             string              `protobuf:"bytes,3,opt,name=place_time,json=placeTime,proto3" json:"place_time,omitempty"`
	CurrentModificationId string              `protobuf:"bytes,4,opt,name=current_modification_id,json=currentModificationId,proto3" json:"current_modification_id,omitempty"`
	AccountId             string              `protobuf:"bytes,5,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Username              string              `protobuf:"bytes,6,opt,name=username,proto3" json:"username,omitempty"`
	ClientTag             string              `protobuf:"bytes,7,opt,name=client_tag,json=clientTag,proto3" json:"client_tag,omitempty"`
	OrderType             string              `protobuf:"bytes,8,opt,name=order_type,json=orderType,proto3" json:"order_type,omitempty"`
	StopPrice             string              `protobuf:"bytes,9,opt,name=stop_price,json=stopPrice,proto3" json:"stop_price,omitempty"`
	OrderState            *FixOrderState      `protobuf:"bytes,10,opt,name=OrderState,proto3" json:"OrderState,omitempty"`
	OrderParameters       *FixOrderParameters `protobuf:"bytes,11,opt,name=OrderParameters,proto3" json:"OrderParameters,omitempty"`
}

func (x *FixOrderResponse) Reset() {
	*x = FixOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FixOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FixOrderResponse) ProtoMessage() {}

func (x *FixOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_integration_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FixOrderResponse.ProtoReflect.Descriptor instead.
func (*FixOrderResponse) Descriptor() ([]byte, []int) {
	return file_integration_proto_rawDescGZIP(), []int{14}
}

func (x *FixOrderResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FixOrderResponse) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *FixOrderResponse) GetPlaceTime() string {
	if x != nil {
		return x.PlaceTime
	}
	return ""
}

func (x *FixOrderResponse) GetCurrentModificationId() string {
	if x != nil {
		return x.CurrentModificationId
	}
	return ""
}

func (x *FixOrderResponse) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *FixOrderResponse) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *FixOrderResponse) GetClientTag() string {
	if x != nil {
		return x.ClientTag
	}
	return ""
}

func (x *FixOrderResponse) GetOrderType() string {
	if x != nil {
		return x.OrderType
	}
	return ""
}

func (x *FixOrderResponse) GetStopPrice() string {
	if x != nil {
		return x.StopPrice
	}
	return ""
}

func (x *FixOrderResponse) GetOrderState() *FixOrderState {
	if x != nil {
		return x.OrderState
	}
	return nil
}

func (x *FixOrderResponse) GetOrderParameters() *FixOrderParameters {
	if x != nil {
		return x.OrderParameters
	}
	return nil
}

type FixCurrencyPositionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code           string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Value          string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	ConvertedValue string `protobuf:"bytes,3,opt,name=converted_value,json=convertedValue,proto3" json:"converted_value,omitempty"`
}

func (x *FixCurrencyPositionResponse) Reset() {
	*x = FixCurrencyPositionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FixCurrencyPositionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FixCurrencyPositionResponse) ProtoMessage() {}

func (x *FixCurrencyPositionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_integration_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FixCurrencyPositionResponse.ProtoReflect.Descriptor instead.
func (*FixCurrencyPositionResponse) Descriptor() ([]byte, []int) {
	return file_integration_proto_rawDescGZIP(), []int{15}
}

func (x *FixCurrencyPositionResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *FixCurrencyPositionResponse) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *FixCurrencyPositionResponse) GetConvertedValue() string {
	if x != nil {
		return x.ConvertedValue
	}
	return ""
}

type FixInstrumentPositionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SymbolType     string `protobuf:"bytes,2,opt,name=symbol_type,json=symbolType,proto3" json:"symbol_type,omitempty"`
	Quantity       string `protobuf:"bytes,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Currency       string `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
	Price          string `protobuf:"bytes,5,opt,name=price,proto3" json:"price,omitempty"`
	AveragePrice   string `protobuf:"bytes,6,opt,name=average_price,json=averagePrice,proto3" json:"average_price,omitempty"`
	Pnl            string `protobuf:"bytes,7,opt,name=pnl,proto3" json:"pnl,omitempty"`
	ConvertedPnl   string `protobuf:"bytes,8,opt,name=converted_pnl,json=convertedPnl,proto3" json:"converted_pnl,omitempty"`
	Value          string `protobuf:"bytes,9,opt,name=value,proto3" json:"value,omitempty"`
	ConvertedValue string `protobuf:"bytes,10,opt,name=converted_value,json=convertedValue,proto3" json:"converted_value,omitempty"`
}

func (x *FixInstrumentPositionResponse) Reset() {
	*x = FixInstrumentPositionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FixInstrumentPositionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FixInstrumentPositionResponse) ProtoMessage() {}

func (x *FixInstrumentPositionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_integration_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FixInstrumentPositionResponse.ProtoReflect.Descriptor instead.
func (*FixInstrumentPositionResponse) Descriptor() ([]byte, []int) {
	return file_integration_proto_rawDescGZIP(), []int{16}
}

func (x *FixInstrumentPositionResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FixInstrumentPositionResponse) GetSymbolType() string {
	if x != nil {
		return x.SymbolType
	}
	return ""
}

func (x *FixInstrumentPositionResponse) GetQuantity() string {
	if x != nil {
		return x.Quantity
	}
	return ""
}

func (x *FixInstrumentPositionResponse) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *FixInstrumentPositionResponse) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *FixInstrumentPositionResponse) GetAveragePrice() string {
	if x != nil {
		return x.AveragePrice
	}
	return ""
}

func (x *FixInstrumentPositionResponse) GetPnl() string {
	if x != nil {
		return x.Pnl
	}
	return ""
}

func (x *FixInstrumentPositionResponse) GetConvertedPnl() string {
	if x != nil {
		return x.ConvertedPnl
	}
	return ""
}

func (x *FixInstrumentPositionResponse) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *FixInstrumentPositionResponse) GetConvertedValue() string {
	if x != nil {
		return x.ConvertedValue
	}
	return ""
}

type FixAccountSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account            string                           `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Currency           string                           `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	SessionDate        string                           `protobuf:"bytes,3,opt,name=session_date,json=sessionDate,proto3" json:"session_date,omitempty"`
	Timestamp          int64                            `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	NetAssetValue      string                           `protobuf:"bytes,5,opt,name=net_asset_value,json=netAssetValue,proto3" json:"net_asset_value,omitempty"`
	FreeMoney          string                           `protobuf:"bytes,6,opt,name=free_money,json=freeMoney,proto3" json:"free_money,omitempty"`
	MoneyUsedForMargin string                           `protobuf:"bytes,7,opt,name=money_used_for_margin,json=moneyUsedForMargin,proto3" json:"money_used_for_margin,omitempty"`
	MarginUtilization  string                           `protobuf:"bytes,8,opt,name=margin_utilization,json=marginUtilization,proto3" json:"margin_utilization,omitempty"`
	Currencies         []*FixCurrencyPositionResponse   `protobuf:"bytes,9,rep,name=currencies,proto3" json:"currencies,omitempty"`
	Positions          []*FixInstrumentPositionResponse `protobuf:"bytes,10,rep,name=positions,proto3" json:"positions,omitempty"`
}

func (x *FixAccountSummary) Reset() {
	*x = FixAccountSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FixAccountSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FixAccountSummary) ProtoMessage() {}

func (x *FixAccountSummary) ProtoReflect() protoreflect.Message {
	mi := &file_integration_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FixAccountSummary.ProtoReflect.Descriptor instead.
func (*FixAccountSummary) Descriptor() ([]byte, []int) {
	return file_integration_proto_rawDescGZIP(), []int{17}
}

func (x *FixAccountSummary) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *FixAccountSummary) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *FixAccountSummary) GetSessionDate() string {
	if x != nil {
		return x.SessionDate
	}
	return ""
}

func (x *FixAccountSummary) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *FixAccountSummary) GetNetAssetValue() string {
	if x != nil {
		return x.NetAssetValue
	}
	return ""
}

func (x *FixAccountSummary) GetFreeMoney() string {
	if x != nil {
		return x.FreeMoney
	}
	return ""
}

func (x *FixAccountSummary) GetMoneyUsedForMargin() string {
	if x != nil {
		return x.MoneyUsedForMargin
	}
	return ""
}

func (x *FixAccountSummary) GetMarginUtilization() string {
	if x != nil {
		return x.MarginUtilization
	}
	return ""
}

func (x *FixAccountSummary) GetCurrencies() []*FixCurrencyPositionResponse {
	if x != nil {
		return x.Currencies
	}
	return nil
}

func (x *FixAccountSummary) GetPositions() []*FixInstrumentPositionResponse {
	if x != nil {
		return x.Positions
	}
	return nil
}

type FixGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group    string   `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	Name     string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Types    []string `protobuf:"bytes,3,rep,name=types,proto3" json:"types,omitempty"`
	Exchange string   `protobuf:"bytes,4,opt,name=exchange,proto3" json:"exchange,omitempty"`
}

func (x *FixGroupResponse) Reset() {
	*x = FixGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FixGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FixGroupResponse) ProtoMessage() {}

func (x *FixGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_integration_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FixGroupResponse.ProtoReflect.Descriptor instead.
func (*FixGroupResponse) Descriptor() ([]byte, []int) {
	return file_integration_proto_rawDescGZIP(), []int{18}
}

func (x *FixGroupResponse) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *FixGroupResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FixGroupResponse) GetTypes() []string {
	if x != nil {
		return x.Types
	}
	return nil
}

func (x *FixGroupResponse) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

type FixExchangesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Country string `protobuf:"bytes,3,opt,name=country,proto3" json:"country,omitempty"`
}

func (x *FixExchangesResponse) Reset() {
	*x = FixExchangesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FixExchangesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FixExchangesResponse) ProtoMessage() {}

func (x *FixExchangesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_integration_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FixExchangesResponse.ProtoReflect.Descriptor instead.
func (*FixExchangesResponse) Descriptor() ([]byte, []int) {
	return file_integration_proto_rawDescGZIP(), []int{19}
}

func (x *FixExchangesResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FixExchangesResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FixExchangesResponse) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

type FixOHLCResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp int64  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Open      string `protobuf:"bytes,2,opt,name=open,proto3" json:"open,omitempty"`
	High      string `protobuf:"bytes,3,opt,name=high,proto3" json:"high,omitempty"`
	Low       string `protobuf:"bytes,4,opt,name=low,proto3" json:"low,omitempty"`
	Close     string `protobuf:"bytes,5,opt,name=close,proto3" json:"close,omitempty"`
	Volume    string `protobuf:"bytes,6,opt,name=volume,proto3" json:"volume,omitempty"`
}

func (x *FixOHLCResponse) Reset() {
	*x = FixOHLCResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FixOHLCResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FixOHLCResponse) ProtoMessage() {}

func (x *FixOHLCResponse) ProtoReflect() protoreflect.Message {
	mi := &file_integration_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FixOHLCResponse.ProtoReflect.Descriptor instead.
func (*FixOHLCResponse) Descriptor() ([]byte, []int) {
	return file_integration_proto_rawDescGZIP(), []int{20}
}

func (x *FixOHLCResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *FixOHLCResponse) GetOpen() string {
	if x != nil {
		return x.Open
	}
	return ""
}

func (x *FixOHLCResponse) GetHigh() string {
	if x != nil {
		return x.High
	}
	return ""
}

func (x *FixOHLCResponse) GetLow() string {
	if x != nil {
		return x.Low
	}
	return ""
}

func (x *FixOHLCResponse) GetClose() string {
	if x != nil {
		return x.Close
	}
	return ""
}

func (x *FixOHLCResponse) GetVolume() string {
	if x != nil {
		return x.Volume
	}
	return ""
}

type FixDailyChangeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SymbolId    string `protobuf:"bytes,1,opt,name=symbol_id,json=symbolId,proto3" json:"symbol_id,omitempty"`
	BasePrice   string `protobuf:"bytes,2,opt,name=base_price,json=basePrice,proto3" json:"base_price,omitempty"`
	DailyChange string `protobuf:"bytes,3,opt,name=daily_change,json=dailyChange,proto3" json:"daily_change,omitempty"`
}

func (x *FixDailyChangeResponse) Reset() {
	*x = FixDailyChangeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FixDailyChangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FixDailyChangeResponse) ProtoMessage() {}

func (x *FixDailyChangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_integration_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FixDailyChangeResponse.ProtoReflect.Descriptor instead.
func (*FixDailyChangeResponse) Descriptor() ([]byte, []int) {
	return file_integration_proto_rawDescGZIP(), []int{21}
}

func (x *FixDailyChangeResponse) GetSymbolId() string {
	if x != nil {
		return x.SymbolId
	}
	return ""
}

func (x *FixDailyChangeResponse) GetBasePrice() string {
	if x != nil {
		return x.BasePrice
	}
	return ""
}

func (x *FixDailyChangeResponse) GetDailyChange() string {
	if x != nil {
		return x.DailyChange
	}
	return ""
}

type FixAskTicks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Size  string `protobuf:"bytes,2,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *FixAskTicks) Reset() {
	*x = FixAskTicks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FixAskTicks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FixAskTicks) ProtoMessage() {}

func (x *FixAskTicks) ProtoReflect() protoreflect.Message {
	mi := &file_integration_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FixAskTicks.ProtoReflect.Descriptor instead.
func (*FixAskTicks) Descriptor() ([]byte, []int) {
	return file_integration_proto_rawDescGZIP(), []int{22}
}

func (x *FixAskTicks) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *FixAskTicks) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

type FixBidTicks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Size  string `protobuf:"bytes,2,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *FixBidTicks) Reset() {
	*x = FixBidTicks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FixBidTicks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FixBidTicks) ProtoMessage() {}

func (x *FixBidTicks) ProtoReflect() protoreflect.Message {
	mi := &file_integration_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FixBidTicks.ProtoReflect.Descriptor instead.
func (*FixBidTicks) Descriptor() ([]byte, []int) {
	return file_integration_proto_rawDescGZIP(), []int{23}
}

func (x *FixBidTicks) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *FixBidTicks) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

type FixTicksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp uint64         `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	SymbolId  string         `protobuf:"bytes,2,opt,name=symbolId,proto3" json:"symbolId,omitempty"`
	Bid       []*FixBidTicks `protobuf:"bytes,3,rep,name=bid,proto3" json:"bid,omitempty"`
	Ask       []*FixAskTicks `protobuf:"bytes,4,rep,name=ask,proto3" json:"ask,omitempty"`
	Value     string         `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	Size      string         `protobuf:"bytes,6,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *FixTicksResponse) Reset() {
	*x = FixTicksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FixTicksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FixTicksResponse) ProtoMessage() {}

func (x *FixTicksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_integration_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FixTicksResponse.ProtoReflect.Descriptor instead.
func (*FixTicksResponse) Descriptor() ([]byte, []int) {
	return file_integration_proto_rawDescGZIP(), []int{24}
}

func (x *FixTicksResponse) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *FixTicksResponse) GetSymbolId() string {
	if x != nil {
		return x.SymbolId
	}
	return ""
}

func (x *FixTicksResponse) GetBid() []*FixBidTicks {
	if x != nil {
		return x.Bid
	}
	return nil
}

func (x *FixTicksResponse) GetAsk() []*FixAskTicks {
	if x != nil {
		return x.Ask
	}
	return nil
}

func (x *FixTicksResponse) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *FixTicksResponse) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

type FixOrderUpdatesStream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event string            `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	Order *FixOrderResponse `protobuf:"bytes,2,opt,name=order,proto3" json:"order,omitempty"`
}

func (x *FixOrderUpdatesStream) Reset() {
	*x = FixOrderUpdatesStream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FixOrderUpdatesStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FixOrderUpdatesStream) ProtoMessage() {}

func (x *FixOrderUpdatesStream) ProtoReflect() protoreflect.Message {
	mi := &file_integration_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FixOrderUpdatesStream.ProtoReflect.Descriptor instead.
func (*FixOrderUpdatesStream) Descriptor() ([]byte, []int) {
	return file_integration_proto_rawDescGZIP(), []int{25}
}

func (x *FixOrderUpdatesStream) GetEvent() string {
	if x != nil {
		return x.Event
	}
	return ""
}

func (x *FixOrderUpdatesStream) GetOrder() *FixOrderResponse {
	if x != nil {
		return x.Order
	}
	return nil
}

type SumsubPassportInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValidUntil string `protobuf:"bytes,1,opt,name=valid_until,json=validUntil,proto3" json:"valid_until,omitempty"`
	IssuetDate string `protobuf:"bytes,2,opt,name=issuet_date,json=issuetDate,proto3" json:"issuet_date,omitempty"`
	Number     string `protobuf:"bytes,3,opt,name=number,proto3" json:"number,omitempty"`
}

func (x *SumsubPassportInfo) Reset() {
	*x = SumsubPassportInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SumsubPassportInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SumsubPassportInfo) ProtoMessage() {}

func (x *SumsubPassportInfo) ProtoReflect() protoreflect.Message {
	mi := &file_integration_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SumsubPassportInfo.ProtoReflect.Descriptor instead.
func (*SumsubPassportInfo) Descriptor() ([]byte, []int) {
	return file_integration_proto_rawDescGZIP(), []int{26}
}

func (x *SumsubPassportInfo) GetValidUntil() string {
	if x != nil {
		return x.ValidUntil
	}
	return ""
}

func (x *SumsubPassportInfo) GetIssuetDate() string {
	if x != nil {
		return x.IssuetDate
	}
	return ""
}

func (x *SumsubPassportInfo) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

type BussinessSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastUpdated       string `protobuf:"bytes,1,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	Lang              string `protobuf:"bytes,2,opt,name=lang,proto3" json:"lang,omitempty"`
	SourceFillingDate string `protobuf:"bytes,3,opt,name=source_filling_date,json=sourceFillingDate,proto3" json:"source_filling_date,omitempty"`
	SourceFillingType string `protobuf:"bytes,4,opt,name=source_filling_type,json=sourceFillingType,proto3" json:"source_filling_type,omitempty"`
	Value             string `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	Ticker            string `protobuf:"bytes,6,opt,name=ticker,proto3" json:"ticker,omitempty"`
}

func (x *BussinessSummary) Reset() {
	*x = BussinessSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BussinessSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BussinessSummary) ProtoMessage() {}

func (x *BussinessSummary) ProtoReflect() protoreflect.Message {
	mi := &file_integration_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BussinessSummary.ProtoReflect.Descriptor instead.
func (*BussinessSummary) Descriptor() ([]byte, []int) {
	return file_integration_proto_rawDescGZIP(), []int{27}
}

func (x *BussinessSummary) GetLastUpdated() string {
	if x != nil {
		return x.LastUpdated
	}
	return ""
}

func (x *BussinessSummary) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *BussinessSummary) GetSourceFillingDate() string {
	if x != nil {
		return x.SourceFillingDate
	}
	return ""
}

func (x *BussinessSummary) GetSourceFillingType() string {
	if x != nil {
		return x.SourceFillingType
	}
	return ""
}

func (x *BussinessSummary) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *BussinessSummary) GetTicker() string {
	if x != nil {
		return x.Ticker
	}
	return ""
}

type KeyStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AverageDailyVolumeForLast_10Days string  `protobuf:"bytes,1,opt,name=average_daily_volume_for_last_10_days,json=averageDailyVolumeForLast10Days,proto3" json:"average_daily_volume_for_last_10_days,omitempty"`
	MarketCapitalization             string  `protobuf:"bytes,2,opt,name=market_capitalization,json=marketCapitalization,proto3" json:"market_capitalization,omitempty"`
	PriceChange_1Day                 string  `protobuf:"bytes,3,opt,name=price_change_1_day,json=priceChange1Day,proto3" json:"price_change_1_day,omitempty"`
	PriceChange_5Day                 string  `protobuf:"bytes,4,opt,name=price_change_5_day,json=priceChange5Day,proto3" json:"price_change_5_day,omitempty"`
	Eps                              string  `protobuf:"bytes,5,opt,name=eps,proto3" json:"eps,omitempty"`
	DividientPerShare                string  `protobuf:"bytes,6,opt,name=dividient_per_share,json=dividientPerShare,proto3" json:"dividient_per_share,omitempty"`
	PE                               string  `protobuf:"bytes,7,opt,name=p_e,json=pE,proto3" json:"p_e,omitempty"`
	DividientYield                   string  `protobuf:"bytes,8,opt,name=dividient_yield,json=dividientYield,proto3" json:"dividient_yield,omitempty"`
	CurrentRatio                     string  `protobuf:"bytes,9,opt,name=current_ratio,json=currentRatio,proto3" json:"current_ratio,omitempty"`
	LTDebtEquility                   string  `protobuf:"bytes,10,opt,name=l_t_debt_equility,json=lTDebtEquility,proto3" json:"l_t_debt_equility,omitempty"`
	QuickRatio                       string  `protobuf:"bytes,11,opt,name=quick_ratio,json=quickRatio,proto3" json:"quick_ratio,omitempty"`
	Roa                              string  `protobuf:"bytes,12,opt,name=roa,proto3" json:"roa,omitempty"`
	Roi                              string  `protobuf:"bytes,13,opt,name=roi,proto3" json:"roi,omitempty"`
	TotalDebtEquity                  string  `protobuf:"bytes,14,opt,name=total_debt_equity,json=totalDebtEquity,proto3" json:"total_debt_equity,omitempty"`
	Dividient                        float64 `protobuf:"fixed64,15,opt,name=dividient,proto3" json:"dividient,omitempty"`
	DividientYieldRatio              float64 `protobuf:"fixed64,16,opt,name=dividient_yield_ratio,json=dividientYieldRatio,proto3" json:"dividient_yield_ratio,omitempty"`
	TotalAssets                      string  `protobuf:"bytes,17,opt,name=total_assets,json=totalAssets,proto3" json:"total_assets,omitempty"`
	Beta                             string  `protobuf:"bytes,18,opt,name=beta,proto3" json:"beta,omitempty"`
	Ebit                             string  `protobuf:"bytes,19,opt,name=ebit,proto3" json:"ebit,omitempty"`
	Roce                             string  `protobuf:"bytes,20,opt,name=roce,proto3" json:"roce,omitempty"`
}

func (x *KeyStats) Reset() {
	*x = KeyStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyStats) ProtoMessage() {}

func (x *KeyStats) ProtoReflect() protoreflect.Message {
	mi := &file_integration_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyStats.ProtoReflect.Descriptor instead.
func (*KeyStats) Descriptor() ([]byte, []int) {
	return file_integration_proto_rawDescGZIP(), []int{28}
}

func (x *KeyStats) GetAverageDailyVolumeForLast_10Days() string {
	if x != nil {
		return x.AverageDailyVolumeForLast_10Days
	}
	return ""
}

func (x *KeyStats) GetMarketCapitalization() string {
	if x != nil {
		return x.MarketCapitalization
	}
	return ""
}

func (x *KeyStats) GetPriceChange_1Day() string {
	if x != nil {
		return x.PriceChange_1Day
	}
	return ""
}

func (x *KeyStats) GetPriceChange_5Day() string {
	if x != nil {
		return x.PriceChange_5Day
	}
	return ""
}

func (x *KeyStats) GetEps() string {
	if x != nil {
		return x.Eps
	}
	return ""
}

func (x *KeyStats) GetDividientPerShare() string {
	if x != nil {
		return x.DividientPerShare
	}
	return ""
}

func (x *KeyStats) GetPE() string {
	if x != nil {
		return x.PE
	}
	return ""
}

func (x *KeyStats) GetDividientYield() string {
	if x != nil {
		return x.DividientYield
	}
	return ""
}

func (x *KeyStats) GetCurrentRatio() string {
	if x != nil {
		return x.CurrentRatio
	}
	return ""
}

func (x *KeyStats) GetLTDebtEquility() string {
	if x != nil {
		return x.LTDebtEquility
	}
	return ""
}

func (x *KeyStats) GetQuickRatio() string {
	if x != nil {
		return x.QuickRatio
	}
	return ""
}

func (x *KeyStats) GetRoa() string {
	if x != nil {
		return x.Roa
	}
	return ""
}

func (x *KeyStats) GetRoi() string {
	if x != nil {
		return x.Roi
	}
	return ""
}

func (x *KeyStats) GetTotalDebtEquity() string {
	if x != nil {
		return x.TotalDebtEquity
	}
	return ""
}

func (x *KeyStats) GetDividient() float64 {
	if x != nil {
		return x.Dividient
	}
	return 0
}

func (x *KeyStats) GetDividientYieldRatio() float64 {
	if x != nil {
		return x.DividientYieldRatio
	}
	return 0
}

func (x *KeyStats) GetTotalAssets() string {
	if x != nil {
		return x.TotalAssets
	}
	return ""
}

func (x *KeyStats) GetBeta() string {
	if x != nil {
		return x.Beta
	}
	return ""
}

func (x *KeyStats) GetEbit() string {
	if x != nil {
		return x.Ebit
	}
	return ""
}

func (x *KeyStats) GetRoce() string {
	if x != nil {
		return x.Roce
	}
	return ""
}

type StockNews struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Header    string `protobuf:"bytes,2,opt,name=header,proto3" json:"header,omitempty"`
	CreatedAt string `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Ric       string `protobuf:"bytes,4,opt,name=ric,proto3" json:"ric,omitempty"`
}

func (x *StockNews) Reset() {
	*x = StockNews{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StockNews) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockNews) ProtoMessage() {}

func (x *StockNews) ProtoReflect() protoreflect.Message {
	mi := &file_integration_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockNews.ProtoReflect.Descriptor instead.
func (*StockNews) Descriptor() ([]byte, []int) {
	return file_integration_proto_rawDescGZIP(), []int{29}
}

func (x *StockNews) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StockNews) GetHeader() string {
	if x != nil {
		return x.Header
	}
	return ""
}

func (x *StockNews) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *StockNews) GetRic() string {
	if x != nil {
		return x.Ric
	}
	return ""
}

type FavouriteInstrument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	InvestorId       string `protobuf:"bytes,2,opt,name=investor_id,json=investorId,proto3" json:"investor_id,omitempty"`
	InstrumentId     string `protobuf:"bytes,3,opt,name=instrument_id,json=instrumentId,proto3" json:"instrument_id,omitempty"`
	InstrumentTicker string `protobuf:"bytes,4,opt,name=instrument_ticker,json=instrumentTicker,proto3" json:"instrument_ticker,omitempty"`
	Name             string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Icon             string `protobuf:"bytes,6,opt,name=icon,proto3" json:"icon,omitempty"`
}

func (x *FavouriteInstrument) Reset() {
	*x = FavouriteInstrument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FavouriteInstrument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavouriteInstrument) ProtoMessage() {}

func (x *FavouriteInstrument) ProtoReflect() protoreflect.Message {
	mi := &file_integration_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavouriteInstrument.ProtoReflect.Descriptor instead.
func (*FavouriteInstrument) Descriptor() ([]byte, []int) {
	return file_integration_proto_rawDescGZIP(), []int{30}
}

func (x *FavouriteInstrument) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FavouriteInstrument) GetInvestorId() string {
	if x != nil {
		return x.InvestorId
	}
	return ""
}

func (x *FavouriteInstrument) GetInstrumentId() string {
	if x != nil {
		return x.InstrumentId
	}
	return ""
}

func (x *FavouriteInstrument) GetInstrumentTicker() string {
	if x != nil {
		return x.InstrumentTicker
	}
	return ""
}

func (x *FavouriteInstrument) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FavouriteInstrument) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

type Currency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FractionDigits int32  `protobuf:"varint,2,opt,name=fraction_digits,json=fractionDigits,proto3" json:"fraction_digits,omitempty"`
	Icon           string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
}

func (x *Currency) Reset() {
	*x = Currency{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Currency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Currency) ProtoMessage() {}

func (x *Currency) ProtoReflect() protoreflect.Message {
	mi := &file_integration_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Currency.ProtoReflect.Descriptor instead.
func (*Currency) Descriptor() ([]byte, []int) {
	return file_integration_proto_rawDescGZIP(), []int{31}
}

func (x *Currency) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Currency) GetFractionDigits() int32 {
	if x != nil {
		return x.FractionDigits
	}
	return 0
}

func (x *Currency) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

type POR struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IssuedDate string `protobuf:"bytes,1,opt,name=issued_date,json=issuedDate,proto3" json:"issued_date,omitempty"`
	VerfieidAt string `protobuf:"bytes,2,opt,name=verfieid_at,json=verfieidAt,proto3" json:"verfieid_at,omitempty"`
	Address    string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	FrontPhoto string `protobuf:"bytes,4,opt,name=front_photo,json=frontPhoto,proto3" json:"front_photo,omitempty"`
	BackPhoto  string `protobuf:"bytes,5,opt,name=back_photo,json=backPhoto,proto3" json:"back_photo,omitempty"`
	ZipCode    string `protobuf:"bytes,6,opt,name=zip_code,json=zipCode,proto3" json:"zip_code,omitempty"`
	Country    string `protobuf:"bytes,7,opt,name=country,proto3" json:"country,omitempty"`
}

func (x *POR) Reset() {
	*x = POR{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *POR) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*POR) ProtoMessage() {}

func (x *POR) ProtoReflect() protoreflect.Message {
	mi := &file_integration_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use POR.ProtoReflect.Descriptor instead.
func (*POR) Descriptor() ([]byte, []int) {
	return file_integration_proto_rawDescGZIP(), []int{32}
}

func (x *POR) GetIssuedDate() string {
	if x != nil {
		return x.IssuedDate
	}
	return ""
}

func (x *POR) GetVerfieidAt() string {
	if x != nil {
		return x.VerfieidAt
	}
	return ""
}

func (x *POR) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *POR) GetFrontPhoto() string {
	if x != nil {
		return x.FrontPhoto
	}
	return ""
}

func (x *POR) GetBackPhoto() string {
	if x != nil {
		return x.BackPhoto
	}
	return ""
}

func (x *POR) GetZipCode() string {
	if x != nil {
		return x.ZipCode
	}
	return ""
}

func (x *POR) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

type ReviewResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReviewAnswer string `protobuf:"bytes,1,opt,name=reviewAnswer,proto3" json:"reviewAnswer,omitempty"`
}

func (x *ReviewResult) Reset() {
	*x = ReviewResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReviewResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReviewResult) ProtoMessage() {}

func (x *ReviewResult) ProtoReflect() protoreflect.Message {
	mi := &file_integration_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReviewResult.ProtoReflect.Descriptor instead.
func (*ReviewResult) Descriptor() ([]byte, []int) {
	return file_integration_proto_rawDescGZIP(), []int{33}
}

func (x *ReviewResult) GetReviewAnswer() string {
	if x != nil {
		return x.ReviewAnswer
	}
	return ""
}

type Identity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type         string        `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	ReviewResult *ReviewResult `protobuf:"bytes,2,opt,name=reviewResult,proto3" json:"reviewResult,omitempty"`
	ImageIds     []int64       `protobuf:"varint,3,rep,packed,name=imageIds,proto3" json:"imageIds,omitempty"`
}

func (x *Identity) Reset() {
	*x = Identity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Identity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Identity) ProtoMessage() {}

func (x *Identity) ProtoReflect() protoreflect.Message {
	mi := &file_integration_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Identity.ProtoReflect.Descriptor instead.
func (*Identity) Descriptor() ([]byte, []int) {
	return file_integration_proto_rawDescGZIP(), []int{34}
}

func (x *Identity) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Identity) GetReviewResult() *ReviewResult {
	if x != nil {
		return x.ReviewResult
	}
	return nil
}

func (x *Identity) GetImageIds() []int64 {
	if x != nil {
		return x.ImageIds
	}
	return nil
}

var File_integration_proto protoreflect.FileDescriptor

var file_integration_proto_rawDesc = []byte{
	0x0a, 0x11, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x13, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x19, 0x0a, 0x07, 0x46, 0x69, 0x78, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x76, 0x0a, 0x13, 0x46, 0x69, 0x78, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x26, 0x0a, 0x0f, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x72, 0x69, 0x67, 0x68, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x69,
	0x6b, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x73, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x7c, 0x0a, 0x14, 0x46,
	0x69, 0x78, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x53, 0x49, 0x4e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x49, 0x53, 0x49, 0x4e, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x49, 0x47, 0x49, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x46, 0x49, 0x47, 0x49, 0x12, 0x14, 0x0a, 0x05, 0x43,
	0x55, 0x53, 0x49, 0x50, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x43, 0x55, 0x53, 0x49,
	0x50, 0x12, 0x10, 0x0a, 0x03, 0x52, 0x49, 0x43, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x52, 0x49, 0x43, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x45, 0x44, 0x4f, 0x4c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x53, 0x45, 0x44, 0x4f, 0x4c, 0x22, 0xa9, 0x07, 0x0a, 0x09, 0x46, 0x69,
	0x78, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x30, 0x0a, 0x14, 0x75,
	0x6e, 0x64, 0x65, 0x72, 0x6c, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x75, 0x6e, 0x64, 0x65, 0x72,
	0x6c, 0x79, 0x69, 0x6e, 0x67, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x49, 0x0a, 0x0b, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x46, 0x69, 0x78, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x70, 0x69, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x70, 0x69, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x12, 0x4b, 0x0a, 0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x78, 0x53,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73,
	0x52, 0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69,
	0x74, 0x65, 0x12, 0x3a, 0x0a, 0x07, 0x6d, 0x75, 0x73, 0x61, 0x66, 0x66, 0x61, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x75, 0x73, 0x61, 0x66, 0x66,
	0x6f, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x6d, 0x75, 0x73, 0x61, 0x66, 0x66, 0x61, 0x12, 0x52,
	0x0a, 0x11, 0x62, 0x75, 0x73, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x73, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x42, 0x75, 0x73, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x52, 0x10, 0x62, 0x75, 0x73, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x12, 0x3a, 0x0a, 0x09, 0x6b, 0x65, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4b, 0x65, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x50,
	0x0a, 0x11, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x65, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x10,
	0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x62, 0x75, 0x79, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x42, 0x75, 0x79, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x65, 0x6c, 0x6c, 0x61, 0x62, 0x65, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x65, 0x6c, 0x6c, 0x61, 0x62, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x63,
	0x6b, 0x54, 0x79, 0x70, 0x65, 0x22, 0xfb, 0x04, 0x0a, 0x0b, 0x4b, 0x65, 0x79, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x4e, 0x65, 0x77, 0x12, 0x4e, 0x0a, 0x25, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65,
	0x5f, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x66, 0x6f,
	0x72, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x31, 0x30, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x1f, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x44, 0x61, 0x69,
	0x6c, 0x79, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x46, 0x6f, 0x72, 0x4c, 0x61, 0x73, 0x74, 0x31,
	0x30, 0x44, 0x61, 0x79, 0x73, 0x12, 0x33, 0x0a, 0x15, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f,
	0x63, 0x61, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x14, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x43, 0x61, 0x70, 0x69,
	0x74, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x12, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x31, 0x5f, 0x64, 0x61, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x31, 0x44, 0x61, 0x79, 0x12, 0x2b, 0x0a, 0x12, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x35, 0x5f, 0x64, 0x61, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x35, 0x44, 0x61, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x70, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x03, 0x65, 0x70, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x64, 0x69, 0x76, 0x69, 0x64, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x11, 0x64, 0x69, 0x76, 0x69, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x65,
	0x72, 0x53, 0x68, 0x61, 0x72, 0x65, 0x12, 0x0f, 0x0a, 0x03, 0x70, 0x5f, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x02, 0x70, 0x45, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x69, 0x76, 0x69, 0x64,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x79, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0e, 0x64, 0x69, 0x76, 0x69, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x59, 0x69, 0x65, 0x6c, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x29, 0x0a, 0x11, 0x6c, 0x5f, 0x74, 0x5f, 0x64, 0x65, 0x62,
	0x74, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0e, 0x6c, 0x54, 0x44, 0x65, 0x62, 0x74, 0x45, 0x71, 0x75, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x12, 0x1f, 0x0a, 0x0b, 0x71, 0x75, 0x69, 0x63, 0x6b, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x71, 0x75, 0x69, 0x63, 0x6b, 0x52, 0x61, 0x74, 0x69,
	0x6f, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x6f, 0x61, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03,
	0x72, 0x6f, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x6f, 0x69, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x03, 0x72, 0x6f, 0x69, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x64,
	0x65, 0x62, 0x74, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x74, 0x79, 0x18, 0x11, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x65, 0x62, 0x74, 0x45, 0x71, 0x75, 0x69, 0x74,
	0x79, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x76, 0x69, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x64, 0x69, 0x76, 0x69, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x12,
	0x32, 0x0a, 0x15, 0x64, 0x69, 0x76, 0x69, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x79, 0x69, 0x65,
	0x6c, 0x64, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x10, 0x20, 0x01, 0x28, 0x01, 0x52, 0x13,
	0x64, 0x69, 0x76, 0x69, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x59, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x61,
	0x74, 0x69, 0x6f, 0x22, 0x62, 0x0a, 0x0e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x6c, 0x6c,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x65,
	0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xdf, 0x05, 0x0a, 0x0b, 0x4d, 0x75, 0x73, 0x61,
	0x66, 0x66, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x64, 0x5f, 0x6d, 0x75,
	0x73, 0x61, 0x66, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x64, 0x4d,
	0x75, 0x73, 0x61, 0x66, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f,
	0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x74, 0x6f, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x19, 0x73, 0x68, 0x61, 0x72,
	0x69, 0x61, 0x68, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x73, 0x68, 0x61,
	0x72, 0x69, 0x61, 0x68, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e,
	0x63, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x11, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x61, 0x6e, 0x6b,
	0x69, 0x6e, 0x67, 0x12, 0x52, 0x0a, 0x11, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x10, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x8b, 0x01, 0x0a, 0x26, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x65, 0x73, 0x74, 0x5f, 0x62, 0x65, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x69, 0x65, 0x73, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x42, 0x65, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x65,
	0x63, 0x75, 0x72, 0x69, 0x74, 0x69, 0x65, 0x73, 0x41, 0x6e, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x73, 0x52, 0x22, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x42, 0x65, 0x61, 0x72, 0x69,
	0x6e, 0x67, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x69, 0x65, 0x73, 0x41, 0x6e, 0x64, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x73, 0x12, 0x5c, 0x0a, 0x15, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73,
	0x74, 0x5f, 0x62, 0x65, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x65, 0x62, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x65, 0x73, 0x74, 0x42, 0x65, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x62, 0x74, 0x52, 0x13,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x42, 0x65, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x44,
	0x65, 0x62, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x12, 0x38,
	0x0a, 0x19, 0x74, 0x72, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x33, 0x36, 0x5f, 0x6d, 0x6f,
	0x6e, 0x74, 0x68, 0x5f, 0x61, 0x76, 0x72, 0x5f, 0x63, 0x61, 0x70, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x15, 0x74, 0x72, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x33, 0x36, 0x4d, 0x6f, 0x6e,
	0x74, 0x68, 0x41, 0x76, 0x72, 0x43, 0x61, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c,
	0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0x7a, 0x0a, 0x22, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x42, 0x65, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x69, 0x65, 0x73, 0x41, 0x6e, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12,
	0x24, 0x0a, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74,
	0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x63, 0x0a, 0x13, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73,
	0x74, 0x42, 0x65, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x62, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x64, 0x65, 0x62, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x09, 0x64, 0x65, 0x62, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xfd, 0x01, 0x0a, 0x10, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12,
	0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x74, 0x5f, 0x68, 0x61, 0x6c, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x08, 0x6e, 0x6f, 0x74, 0x48, 0x61, 0x6c, 0x61, 0x6c, 0x12, 0x22, 0x0a, 0x0c,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0c, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x68, 0x61, 0x6c, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x05, 0x68, 0x61, 0x6c, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23,
	0x0a, 0x0d, 0x68, 0x61, 0x68, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x68, 0x61, 0x68, 0x61, 0x6c, 0x52, 0x65, 0x76, 0x65,
	0x6e, 0x75, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x6f, 0x75, 0x62, 0x74, 0x66, 0x75, 0x6c, 0x5f,
	0x72, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x64,
	0x6f, 0x75, 0x62, 0x74, 0x66, 0x75, 0x6c, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x12, 0x2a,
	0x0a, 0x11, 0x6e, 0x6f, 0x74, 0x5f, 0x68, 0x61, 0x6c, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x76, 0x65,
	0x6e, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x6e, 0x6f, 0x74, 0x48, 0x61,
	0x6c, 0x61, 0x6c, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x22, 0x47, 0x0a, 0x0e, 0x46, 0x69,
	0x78, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x22, 0xf3, 0x04, 0x0a, 0x12, 0x46, 0x69, 0x78, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x64, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x70, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61,
	0x72, 0x74, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x6c,
	0x61, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x67, 0x74, 0x74, 0x5f, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x67, 0x74,
	0x74, 0x45, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61,
	0x6b, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x74, 0x61, 0x6b, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x74, 0x6f, 0x70, 0x5f, 0x6c, 0x6f, 0x73, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x74, 0x6f, 0x70, 0x4c, 0x6f, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x63, 0x6f, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x63, 0x6f,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x29, 0x0a, 0x11, 0x69, 0x66, 0x5f, 0x64, 0x6f, 0x6e, 0x65,
	0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x69, 0x66, 0x44, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x8f, 0x01, 0x0a, 0x0d, 0x46, 0x69,
	0x78, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x6c, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1a, 0x0a,
	0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9a, 0x01, 0x0a, 0x0d,
	0x46, 0x69, 0x78, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x6c, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x78, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x6c, 0x73, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x6c, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0xc3, 0x03, 0x0a, 0x10, 0x46, 0x69, 0x78,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x63,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x6c,
	0x61, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x17, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x70,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74,
	0x6f, 0x70, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x42, 0x0a, 0x0a, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x46, 0x69, 0x78, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x0a, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x51, 0x0a, 0x0f, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x78, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x0f, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x22, 0x70,
	0x0a, 0x1b, 0x46, 0x69, 0x78, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x74, 0x65, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0xb9, 0x02, 0x0a, 0x1d, 0x46, 0x69, 0x78, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67,
	0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6e, 0x6c, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x6e, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x6e, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x65, 0x64, 0x50, 0x6e, 0x6c, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x65, 0x64,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x74, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xd7, 0x03, 0x0a,
	0x11, 0x46, 0x69, 0x78, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x74,
	0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x72, 0x65, 0x65, 0x4d, 0x6f, 0x6e, 0x65, 0x79,
	0x12, 0x31, 0x0a, 0x15, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x66,
	0x6f, 0x72, 0x5f, 0x6d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x12, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x55, 0x73, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x4d, 0x61, 0x72,
	0x67, 0x69, 0x6e, 0x12, 0x2d, 0x0a, 0x12, 0x6d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x5f, 0x75, 0x74,
	0x69, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x6d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x55, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x50, 0x0a, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x78,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x69, 0x65, 0x73, 0x12, 0x50, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69,
	0x78, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x09, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x6e, 0x0a, 0x10, 0x46, 0x69, 0x78, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x54, 0x0a, 0x14, 0x46, 0x69, 0x78, 0x45, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x97, 0x01, 0x0a,
	0x0f, 0x46, 0x69, 0x78, 0x4f, 0x48, 0x4c, 0x43, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x70,
	0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x69, 0x67, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x68, 0x69, 0x67, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x77, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6c, 0x6f, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x73,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x22, 0x77, 0x0a, 0x16, 0x46, 0x69, 0x78, 0x44, 0x61, 0x69,
	0x6c, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x62, 0x61, 0x73, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x64, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x22,
	0x37, 0x0a, 0x0b, 0x46, 0x69, 0x78, 0x41, 0x73, 0x6b, 0x54, 0x69, 0x63, 0x6b, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x37, 0x0a, 0x0b, 0x46, 0x69, 0x78, 0x42,
	0x69, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x22, 0xde, 0x01, 0x0a, 0x10, 0x46, 0x69, 0x78, 0x54, 0x69, 0x63, 0x6b, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x49, 0x64,
	0x12, 0x32, 0x0a, 0x03, 0x62, 0x69, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x78, 0x42, 0x69, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x73, 0x52,
	0x03, 0x62, 0x69, 0x64, 0x12, 0x32, 0x0a, 0x03, 0x61, 0x73, 0x6b, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x78, 0x41, 0x73, 0x6b, 0x54, 0x69,
	0x63, 0x6b, 0x73, 0x52, 0x03, 0x61, 0x73, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x22, 0x6a, 0x0a, 0x15, 0x46, 0x69, 0x78, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x73, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x3b, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x78, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x6e,
	0x0a, 0x12, 0x53, 0x75, 0x6d, 0x73, 0x75, 0x62, 0x50, 0x61, 0x73, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x75, 0x6e,
	0x74, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x55, 0x6e, 0x74, 0x69, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x73, 0x75, 0x65, 0x74, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x73, 0x73, 0x75,
	0x65, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xd7,
	0x01, 0x0a, 0x10, 0x42, 0x75, 0x73, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x46,
	0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x46,
	0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x22, 0xd7, 0x05, 0x0a, 0x08, 0x4b, 0x65, 0x79,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x4e, 0x0a, 0x25, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65,
	0x5f, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x66, 0x6f,
	0x72, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x31, 0x30, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x1f, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x44, 0x61, 0x69,
	0x6c, 0x79, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x46, 0x6f, 0x72, 0x4c, 0x61, 0x73, 0x74, 0x31,
	0x30, 0x44, 0x61, 0x79, 0x73, 0x12, 0x33, 0x0a, 0x15, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f,
	0x63, 0x61, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x43, 0x61, 0x70, 0x69,
	0x74, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x12, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x31, 0x5f, 0x64, 0x61, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x31, 0x44, 0x61, 0x79, 0x12, 0x2b, 0x0a, 0x12, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x35, 0x5f, 0x64, 0x61, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x35, 0x44, 0x61, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x70, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x65, 0x70, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x64, 0x69, 0x76, 0x69, 0x64, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x64, 0x69, 0x76, 0x69, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x65,
	0x72, 0x53, 0x68, 0x61, 0x72, 0x65, 0x12, 0x0f, 0x0a, 0x03, 0x70, 0x5f, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x70, 0x45, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x69, 0x76, 0x69, 0x64,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x79, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x64, 0x69, 0x76, 0x69, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x59, 0x69, 0x65, 0x6c, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x29, 0x0a, 0x11, 0x6c, 0x5f, 0x74, 0x5f, 0x64, 0x65, 0x62,
	0x74, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x6c, 0x54, 0x44, 0x65, 0x62, 0x74, 0x45, 0x71, 0x75, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x12, 0x1f, 0x0a, 0x0b, 0x71, 0x75, 0x69, 0x63, 0x6b, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x71, 0x75, 0x69, 0x63, 0x6b, 0x52, 0x61, 0x74, 0x69,
	0x6f, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x6f, 0x61, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x72, 0x6f, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x6f, 0x69, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x72, 0x6f, 0x69, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x64,
	0x65, 0x62, 0x74, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x74, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x65, 0x62, 0x74, 0x45, 0x71, 0x75, 0x69, 0x74,
	0x79, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x76, 0x69, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x64, 0x69, 0x76, 0x69, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x12,
	0x32, 0x0a, 0x15, 0x64, 0x69, 0x76, 0x69, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x79, 0x69, 0x65,
	0x6c, 0x64, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x10, 0x20, 0x01, 0x28, 0x01, 0x52, 0x13,
	0x64, 0x69, 0x76, 0x69, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x59, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x61,
	0x74, 0x69, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x65, 0x74, 0x61, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x65, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x62,
	0x69, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x65, 0x62, 0x69, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x72, 0x6f, 0x63, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f,
	0x63, 0x65, 0x22, 0x64, 0x0a, 0x09, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4e, 0x65, 0x77, 0x73, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x69, 0x63, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x69, 0x63, 0x22, 0xc0, 0x01, 0x0a, 0x13, 0x46, 0x61, 0x76,
	0x6f, 0x75, 0x72, 0x69, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x49,
	0x64, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x22, 0x57, 0x0a, 0x08, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x69, 0x67, 0x69, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0e, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x67, 0x69, 0x74, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x69, 0x63, 0x6f, 0x6e, 0x22, 0xd6, 0x01, 0x0a, 0x03, 0x50, 0x4f, 0x52, 0x12, 0x1f, 0x0a, 0x0b,
	0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x76, 0x65, 0x72, 0x66, 0x69, 0x65, 0x69, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x76, 0x65, 0x72, 0x66, 0x69, 0x65, 0x69, 0x64, 0x41, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x72, 0x6f, 0x6e,
	0x74, 0x5f, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66,
	0x72, 0x6f, 0x6e, 0x74, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x63,
	0x6b, 0x5f, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62,
	0x61, 0x63, 0x6b, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x7a, 0x69, 0x70, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x7a, 0x69, 0x70, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x32, 0x0a,
	0x0c, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x22, 0x0a,
	0x0c, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x41, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x22, 0x81, 0x01, 0x0a, 0x08, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x45, 0x0a, 0x0c, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0c, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x08, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x49, 0x64, 0x73, 0x42, 0x1e, 0x5a, 0x1c, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_integration_proto_rawDescOnce sync.Once
	file_integration_proto_rawDescData = file_integration_proto_rawDesc
)

func file_integration_proto_rawDescGZIP() []byte {
	file_integration_proto_rawDescOnce.Do(func() {
		file_integration_proto_rawDescData = protoimpl.X.CompressGZIP(file_integration_proto_rawDescData)
	})
	return file_integration_proto_rawDescData
}

var file_integration_proto_msgTypes = make([]protoimpl.MessageInfo, 35)
var file_integration_proto_goTypes = []interface{}{
	(*FixType)(nil),                            // 0: integration_service.FixType
	(*FixSymbolOptionData)(nil),                // 1: integration_service.FixSymbolOptionData
	(*FixSymbolIdentifiers)(nil),               // 2: integration_service.FixSymbolIdentifiers
	(*FixSymbol)(nil),                          // 3: integration_service.FixSymbol
	(*KeyStatsNew)(nil),                        // 4: integration_service.KeyStatsNew
	(*PurchaseStatus)(nil),                     // 5: integration_service.PurchaseStatus
	(*MusaffoData)(nil),                        // 6: integration_service.MusaffoData
	(*InterestBearingSecuritiesAndAssets)(nil), // 7: integration_service.interestBearingSecuritiesAndAssets
	(*InterestBearingDebt)(nil),                // 8: integration_service.interestBearingDebt
	(*BusinessActivity)(nil),                   // 9: integration_service.BusinessActivity
	(*FixUserAccount)(nil),                     // 10: integration_service.FixUserAccount
	(*FixOrderParameters)(nil),                 // 11: integration_service.FixOrderParameters
	(*FixOrderFills)(nil),                      // 12: integration_service.FixOrderFills
	(*FixOrderState)(nil),                      // 13: integration_service.FixOrderState
	(*FixOrderResponse)(nil),                   // 14: integration_service.FixOrderResponse
	(*FixCurrencyPositionResponse)(nil),        // 15: integration_service.FixCurrencyPositionResponse
	(*FixInstrumentPositionResponse)(nil),      // 16: integration_service.FixInstrumentPositionResponse
	(*FixAccountSummary)(nil),                  // 17: integration_service.FixAccountSummary
	(*FixGroupResponse)(nil),                   // 18: integration_service.FixGroupResponse
	(*FixExchangesResponse)(nil),               // 19: integration_service.FixExchangesResponse
	(*FixOHLCResponse)(nil),                    // 20: integration_service.FixOHLCResponse
	(*FixDailyChangeResponse)(nil),             // 21: integration_service.FixDailyChangeResponse
	(*FixAskTicks)(nil),                        // 22: integration_service.FixAskTicks
	(*FixBidTicks)(nil),                        // 23: integration_service.FixBidTicks
	(*FixTicksResponse)(nil),                   // 24: integration_service.FixTicksResponse
	(*FixOrderUpdatesStream)(nil),              // 25: integration_service.FixOrderUpdatesStream
	(*SumsubPassportInfo)(nil),                 // 26: integration_service.SumsubPassportInfo
	(*BussinessSummary)(nil),                   // 27: integration_service.BussinessSummary
	(*KeyStats)(nil),                           // 28: integration_service.KeyStats
	(*StockNews)(nil),                          // 29: integration_service.StockNews
	(*FavouriteInstrument)(nil),                // 30: integration_service.FavouriteInstrument
	(*Currency)(nil),                           // 31: integration_service.Currency
	(*POR)(nil),                                // 32: integration_service.POR
	(*ReviewResult)(nil),                       // 33: integration_service.reviewResult
	(*Identity)(nil),                           // 34: integration_service.Identity
}
var file_integration_proto_depIdxs = []int32{
	1,  // 0: integration_service.FixSymbol.option_data:type_name -> integration_service.FixSymbolOptionData
	2,  // 1: integration_service.FixSymbol.identifiers:type_name -> integration_service.FixSymbolIdentifiers
	6,  // 2: integration_service.FixSymbol.musaffa:type_name -> integration_service.MusaffoData
	27, // 3: integration_service.FixSymbol.bussiness_summary:type_name -> integration_service.BussinessSummary
	28, // 4: integration_service.FixSymbol.key_stats:type_name -> integration_service.KeyStats
	5,  // 5: integration_service.FixSymbol.purchase_statuses:type_name -> integration_service.PurchaseStatus
	9,  // 6: integration_service.MusaffoData.business_activity:type_name -> integration_service.BusinessActivity
	7,  // 7: integration_service.MusaffoData.interest_bearing_securities_and_assets:type_name -> integration_service.interestBearingSecuritiesAndAssets
	8,  // 8: integration_service.MusaffoData.interest_bearing_debt:type_name -> integration_service.interestBearingDebt
	12, // 9: integration_service.FixOrderState.fills:type_name -> integration_service.FixOrderFills
	13, // 10: integration_service.FixOrderResponse.OrderState:type_name -> integration_service.FixOrderState
	11, // 11: integration_service.FixOrderResponse.OrderParameters:type_name -> integration_service.FixOrderParameters
	15, // 12: integration_service.FixAccountSummary.currencies:type_name -> integration_service.FixCurrencyPositionResponse
	16, // 13: integration_service.FixAccountSummary.positions:type_name -> integration_service.FixInstrumentPositionResponse
	23, // 14: integration_service.FixTicksResponse.bid:type_name -> integration_service.FixBidTicks
	22, // 15: integration_service.FixTicksResponse.ask:type_name -> integration_service.FixAskTicks
	14, // 16: integration_service.FixOrderUpdatesStream.order:type_name -> integration_service.FixOrderResponse
	33, // 17: integration_service.Identity.reviewResult:type_name -> integration_service.reviewResult
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_integration_proto_init() }
func file_integration_proto_init() {
	if File_integration_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_integration_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FixType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FixSymbolOptionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FixSymbolIdentifiers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FixSymbol); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyStatsNew); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurchaseStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MusaffoData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterestBearingSecuritiesAndAssets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterestBearingDebt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BusinessActivity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FixUserAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FixOrderParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FixOrderFills); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FixOrderState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FixOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FixCurrencyPositionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FixInstrumentPositionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FixAccountSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FixGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FixExchangesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FixOHLCResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FixDailyChangeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FixAskTicks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FixBidTicks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FixTicksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FixOrderUpdatesStream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SumsubPassportInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BussinessSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StockNews); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FavouriteInstrument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Currency); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*POR); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReviewResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Identity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_integration_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   35,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_integration_proto_goTypes,
		DependencyIndexes: file_integration_proto_depIdxs,
		MessageInfos:      file_integration_proto_msgTypes,
	}.Build()
	File_integration_proto = out.File
	file_integration_proto_rawDesc = nil
	file_integration_proto_goTypes = nil
	file_integration_proto_depIdxs = nil
}

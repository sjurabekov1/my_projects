// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.6.1
// source: integration_service.proto

package integration_service

import (
	empty "github.com/golang/protobuf/ptypes/empty"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetIndustry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IndustryName string `protobuf:"bytes,1,opt,name=industry_name,json=industryName,proto3" json:"industry_name,omitempty"`
}

func (x *GetIndustry) Reset() {
	*x = GetIndustry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIndustry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIndustry) ProtoMessage() {}

func (x *GetIndustry) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIndustry.ProtoReflect.Descriptor instead.
func (*GetIndustry) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetIndustry) GetIndustryName() string {
	if x != nil {
		return x.IndustryName
	}
	return ""
}

type GetIndustriesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Industries []*GetIndustry `protobuf:"bytes,1,rep,name=industries,proto3" json:"industries,omitempty"`
}

func (x *GetIndustriesResponse) Reset() {
	*x = GetIndustriesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIndustriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIndustriesResponse) ProtoMessage() {}

func (x *GetIndustriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIndustriesResponse.ProtoReflect.Descriptor instead.
func (*GetIndustriesResponse) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetIndustriesResponse) GetIndustries() []*GetIndustry {
	if x != nil {
		return x.Industries
	}
	return nil
}

type DeletecommissionruleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvestorId string `protobuf:"bytes,1,opt,name=investor_id,json=investorId,proto3" json:"investor_id,omitempty"`
}

func (x *DeletecommissionruleRequest) Reset() {
	*x = DeletecommissionruleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletecommissionruleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletecommissionruleRequest) ProtoMessage() {}

func (x *DeletecommissionruleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletecommissionruleRequest.ProtoReflect.Descriptor instead.
func (*DeletecommissionruleRequest) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{2}
}

func (x *DeletecommissionruleRequest) GetInvestorId() string {
	if x != nil {
		return x.InvestorId
	}
	return ""
}

type CommissionRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region     string `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	Id         string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	InvestorId string `protobuf:"bytes,3,opt,name=investor_id,json=investorId,proto3" json:"investor_id,omitempty"`
}

func (x *CommissionRule) Reset() {
	*x = CommissionRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommissionRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommissionRule) ProtoMessage() {}

func (x *CommissionRule) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommissionRule.ProtoReflect.Descriptor instead.
func (*CommissionRule) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{3}
}

func (x *CommissionRule) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *CommissionRule) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CommissionRule) GetInvestorId() string {
	if x != nil {
		return x.InvestorId
	}
	return ""
}

type GetUserCommissionruleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvestorId string `protobuf:"bytes,1,opt,name=investor_id,json=investorId,proto3" json:"investor_id,omitempty"`
}

func (x *GetUserCommissionruleRequest) Reset() {
	*x = GetUserCommissionruleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserCommissionruleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserCommissionruleRequest) ProtoMessage() {}

func (x *GetUserCommissionruleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserCommissionruleRequest.ProtoReflect.Descriptor instead.
func (*GetUserCommissionruleRequest) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetUserCommissionruleRequest) GetInvestorId() string {
	if x != nil {
		return x.InvestorId
	}
	return ""
}

type UpdateCompaileQuestionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompaileQuestions []*CompaileQuestions `protobuf:"bytes,1,rep,name=CompaileQuestions,proto3" json:"CompaileQuestions,omitempty"`
}

func (x *UpdateCompaileQuestionsRequest) Reset() {
	*x = UpdateCompaileQuestionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCompaileQuestionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCompaileQuestionsRequest) ProtoMessage() {}

func (x *UpdateCompaileQuestionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCompaileQuestionsRequest.ProtoReflect.Descriptor instead.
func (*UpdateCompaileQuestionsRequest) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateCompaileQuestionsRequest) GetCompaileQuestions() []*CompaileQuestions {
	if x != nil {
		return x.CompaileQuestions
	}
	return nil
}

type CompaileQuestions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Question string `protobuf:"bytes,2,opt,name=question,proto3" json:"question,omitempty"`
	Answer   string `protobuf:"bytes,3,opt,name=answer,proto3" json:"answer,omitempty"`
}

func (x *CompaileQuestions) Reset() {
	*x = CompaileQuestions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompaileQuestions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompaileQuestions) ProtoMessage() {}

func (x *CompaileQuestions) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompaileQuestions.ProtoReflect.Descriptor instead.
func (*CompaileQuestions) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{6}
}

func (x *CompaileQuestions) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CompaileQuestions) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *CompaileQuestions) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

type GetLevelUpEmailTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetLevelUpEmailTemplateResponse) Reset() {
	*x = GetLevelUpEmailTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLevelUpEmailTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLevelUpEmailTemplateResponse) ProtoMessage() {}

func (x *GetLevelUpEmailTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLevelUpEmailTemplateResponse.ProtoReflect.Descriptor instead.
func (*GetLevelUpEmailTemplateResponse) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{7}
}

type EmailTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Template string `protobuf:"bytes,1,opt,name=template,proto3" json:"template,omitempty"`
	Subject  string `protobuf:"bytes,2,opt,name=subject,proto3" json:"subject,omitempty"`
}

func (x *EmailTemplate) Reset() {
	*x = EmailTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailTemplate) ProtoMessage() {}

func (x *EmailTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailTemplate.ProtoReflect.Descriptor instead.
func (*EmailTemplate) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{8}
}

func (x *EmailTemplate) GetTemplate() string {
	if x != nil {
		return x.Template
	}
	return ""
}

func (x *EmailTemplate) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

type GetLevelUpEmailTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	To    string  `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	Name  string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Level float32 `protobuf:"fixed32,3,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *GetLevelUpEmailTemplateRequest) Reset() {
	*x = GetLevelUpEmailTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLevelUpEmailTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLevelUpEmailTemplateRequest) ProtoMessage() {}

func (x *GetLevelUpEmailTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLevelUpEmailTemplateRequest.ProtoReflect.Descriptor instead.
func (*GetLevelUpEmailTemplateRequest) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetLevelUpEmailTemplateRequest) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *GetLevelUpEmailTemplateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetLevelUpEmailTemplateRequest) GetLevel() float32 {
	if x != nil {
		return x.Level
	}
	return 0
}

type CheckEmailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *CheckEmailRequest) Reset() {
	*x = CheckEmailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckEmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckEmailRequest) ProtoMessage() {}

func (x *CheckEmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckEmailRequest.ProtoReflect.Descriptor instead.
func (*CheckEmailRequest) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{10}
}

func (x *CheckEmailRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type CheckEmailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CheckEmailResponse) Reset() {
	*x = CheckEmailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckEmailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckEmailResponse) ProtoMessage() {}

func (x *CheckEmailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckEmailResponse.ProtoReflect.Descriptor instead.
func (*CheckEmailResponse) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{11}
}

func (x *CheckEmailResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CreateUsersFromWebRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Email           string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Name            string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	NumberOfFriends string `protobuf:"bytes,4,opt,name=number_of_friends,json=numberOfFriends,proto3" json:"number_of_friends,omitempty"`
	Referal         string `protobuf:"bytes,5,opt,name=referal,proto3" json:"referal,omitempty"`
	Date            string `protobuf:"bytes,6,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *CreateUsersFromWebRequest) Reset() {
	*x = CreateUsersFromWebRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUsersFromWebRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUsersFromWebRequest) ProtoMessage() {}

func (x *CreateUsersFromWebRequest) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUsersFromWebRequest.ProtoReflect.Descriptor instead.
func (*CreateUsersFromWebRequest) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{12}
}

func (x *CreateUsersFromWebRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateUsersFromWebRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CreateUsersFromWebRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateUsersFromWebRequest) GetNumberOfFriends() string {
	if x != nil {
		return x.NumberOfFriends
	}
	return ""
}

func (x *CreateUsersFromWebRequest) GetReferal() string {
	if x != nil {
		return x.Referal
	}
	return ""
}

func (x *CreateUsersFromWebRequest) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type InsertSumsubCommentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *InsertSumsubCommentsRequest) Reset() {
	*x = InsertSumsubCommentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertSumsubCommentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertSumsubCommentsRequest) ProtoMessage() {}

func (x *InsertSumsubCommentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertSumsubCommentsRequest.ProtoReflect.Descriptor instead.
func (*InsertSumsubCommentsRequest) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{13}
}

func (x *InsertSumsubCommentsRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type InsertSumsubComments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ButtonId      string `protobuf:"bytes,1,opt,name=button_id,json=buttonId,proto3" json:"button_id,omitempty"`
	RejectLabel   string `protobuf:"bytes,2,opt,name=reject_label,json=rejectLabel,proto3" json:"reject_label,omitempty"`
	RejectType    string `protobuf:"bytes,3,opt,name=reject_type,json=rejectType,proto3" json:"reject_type,omitempty"`
	Comment       string `protobuf:"bytes,4,opt,name=comment,proto3" json:"comment,omitempty"`
	ClientComment string `protobuf:"bytes,5,opt,name=client_comment,json=clientComment,proto3" json:"client_comment,omitempty"`
}

func (x *InsertSumsubComments) Reset() {
	*x = InsertSumsubComments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertSumsubComments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertSumsubComments) ProtoMessage() {}

func (x *InsertSumsubComments) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertSumsubComments.ProtoReflect.Descriptor instead.
func (*InsertSumsubComments) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{14}
}

func (x *InsertSumsubComments) GetButtonId() string {
	if x != nil {
		return x.ButtonId
	}
	return ""
}

func (x *InsertSumsubComments) GetRejectLabel() string {
	if x != nil {
		return x.RejectLabel
	}
	return ""
}

func (x *InsertSumsubComments) GetRejectType() string {
	if x != nil {
		return x.RejectType
	}
	return ""
}

func (x *InsertSumsubComments) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *InsertSumsubComments) GetClientComment() string {
	if x != nil {
		return x.ClientComment
	}
	return ""
}

type InsertSumsubCommentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Comments []*InsertSumsubComments `protobuf:"bytes,1,rep,name=comments,proto3" json:"comments,omitempty"`
}

func (x *InsertSumsubCommentsResponse) Reset() {
	*x = InsertSumsubCommentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertSumsubCommentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertSumsubCommentsResponse) ProtoMessage() {}

func (x *InsertSumsubCommentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertSumsubCommentsResponse.ProtoReflect.Descriptor instead.
func (*InsertSumsubCommentsResponse) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{15}
}

func (x *InsertSumsubCommentsResponse) GetComments() []*InsertSumsubComments {
	if x != nil {
		return x.Comments
	}
	return nil
}

type GetInstrumentByISIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Isin       string `protobuf:"bytes,1,opt,name=isin,proto3" json:"isin,omitempty"`
	InvestorId string `protobuf:"bytes,2,opt,name=investor_id,json=investorId,proto3" json:"investor_id,omitempty"`
}

func (x *GetInstrumentByISIDRequest) Reset() {
	*x = GetInstrumentByISIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInstrumentByISIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstrumentByISIDRequest) ProtoMessage() {}

func (x *GetInstrumentByISIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInstrumentByISIDRequest.ProtoReflect.Descriptor instead.
func (*GetInstrumentByISIDRequest) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{16}
}

func (x *GetInstrumentByISIDRequest) GetIsin() string {
	if x != nil {
		return x.Isin
	}
	return ""
}

func (x *GetInstrumentByISIDRequest) GetInvestorId() string {
	if x != nil {
		return x.InvestorId
	}
	return ""
}

type GetStreetEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SymbolId string `protobuf:"bytes,1,opt,name=symbol_id,json=symbolId,proto3" json:"symbol_id,omitempty"`
	From     string `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To       string `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	Limit    int32  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Page     int32  `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetStreetEventsRequest) Reset() {
	*x = GetStreetEventsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStreetEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStreetEventsRequest) ProtoMessage() {}

func (x *GetStreetEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStreetEventsRequest.ProtoReflect.Descriptor instead.
func (*GetStreetEventsRequest) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{17}
}

func (x *GetStreetEventsRequest) GetSymbolId() string {
	if x != nil {
		return x.SymbolId
	}
	return ""
}

func (x *GetStreetEventsRequest) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *GetStreetEventsRequest) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *GetStreetEventsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetStreetEventsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetStreetEventsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreetEvents []*StreetEvent `protobuf:"bytes,1,rep,name=street_events,json=streetEvents,proto3" json:"street_events,omitempty"`
}

func (x *GetStreetEventsResponse) Reset() {
	*x = GetStreetEventsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStreetEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStreetEventsResponse) ProtoMessage() {}

func (x *GetStreetEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStreetEventsResponse.ProtoReflect.Descriptor instead.
func (*GetStreetEventsResponse) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{18}
}

func (x *GetStreetEventsResponse) GetStreetEvents() []*StreetEvent {
	if x != nil {
		return x.StreetEvents
	}
	return nil
}

type StreetEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CountryCode             string `protobuf:"bytes,1,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	EventType               string `protobuf:"bytes,2,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	EndDateTime             string `protobuf:"bytes,3,opt,name=end_date_time,json=endDateTime,proto3" json:"end_date_time,omitempty"`
	EndQualifier            string `protobuf:"bytes,4,opt,name=end_qualifier,json=endQualifier,proto3" json:"end_qualifier,omitempty"`
	IsEstimate              bool   `protobuf:"varint,5,opt,name=is_estimate,json=isEstimate,proto3" json:"is_estimate,omitempty"`
	StartDateTime           string `protobuf:"bytes,6,opt,name=start_date_time,json=startDateTime,proto3" json:"start_date_time,omitempty"`
	StartQualifier          string `protobuf:"bytes,7,opt,name=start_qualifier,json=startQualifier,proto3" json:"start_qualifier,omitempty"`
	EventId                 int32  `protobuf:"varint,8,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	LastUpdate              string `protobuf:"bytes,9,opt,name=last_update,json=lastUpdate,proto3" json:"last_update,omitempty"`
	Name                    string `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	OrganizationName        string `protobuf:"bytes,11,opt,name=organization_name,json=organizationName,proto3" json:"organization_name,omitempty"`
	OrganizationSymbolType  string `protobuf:"bytes,12,opt,name=organization_symbol_type,json=organizationSymbolType,proto3" json:"organization_symbol_type,omitempty"`
	OrganizationSymbolValue string `protobuf:"bytes,13,opt,name=organization_symbol_value,json=organizationSymbolValue,proto3" json:"organization_symbol_value,omitempty"`
	RsvpRequired            bool   `protobuf:"varint,14,opt,name=rsvp_required,json=rsvpRequired,proto3" json:"rsvp_required,omitempty"`
	Url                     string `protobuf:"bytes,15,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *StreetEvent) Reset() {
	*x = StreetEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreetEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreetEvent) ProtoMessage() {}

func (x *StreetEvent) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreetEvent.ProtoReflect.Descriptor instead.
func (*StreetEvent) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{19}
}

func (x *StreetEvent) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *StreetEvent) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *StreetEvent) GetEndDateTime() string {
	if x != nil {
		return x.EndDateTime
	}
	return ""
}

func (x *StreetEvent) GetEndQualifier() string {
	if x != nil {
		return x.EndQualifier
	}
	return ""
}

func (x *StreetEvent) GetIsEstimate() bool {
	if x != nil {
		return x.IsEstimate
	}
	return false
}

func (x *StreetEvent) GetStartDateTime() string {
	if x != nil {
		return x.StartDateTime
	}
	return ""
}

func (x *StreetEvent) GetStartQualifier() string {
	if x != nil {
		return x.StartQualifier
	}
	return ""
}

func (x *StreetEvent) GetEventId() int32 {
	if x != nil {
		return x.EventId
	}
	return 0
}

func (x *StreetEvent) GetLastUpdate() string {
	if x != nil {
		return x.LastUpdate
	}
	return ""
}

func (x *StreetEvent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StreetEvent) GetOrganizationName() string {
	if x != nil {
		return x.OrganizationName
	}
	return ""
}

func (x *StreetEvent) GetOrganizationSymbolType() string {
	if x != nil {
		return x.OrganizationSymbolType
	}
	return ""
}

func (x *StreetEvent) GetOrganizationSymbolValue() string {
	if x != nil {
		return x.OrganizationSymbolValue
	}
	return ""
}

func (x *StreetEvent) GetRsvpRequired() bool {
	if x != nil {
		return x.RsvpRequired
	}
	return false
}

func (x *StreetEvent) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type GetInvestorInstrumentAlertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvestorId string `protobuf:"bytes,1,opt,name=investor_id,json=investorId,proto3" json:"investor_id,omitempty"`
}

func (x *GetInvestorInstrumentAlertRequest) Reset() {
	*x = GetInvestorInstrumentAlertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInvestorInstrumentAlertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInvestorInstrumentAlertRequest) ProtoMessage() {}

func (x *GetInvestorInstrumentAlertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInvestorInstrumentAlertRequest.ProtoReflect.Descriptor instead.
func (*GetInvestorInstrumentAlertRequest) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{20}
}

func (x *GetInvestorInstrumentAlertRequest) GetInvestorId() string {
	if x != nil {
		return x.InvestorId
	}
	return ""
}

type GetInvestorInstrumentAlertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvestorAlerts []*CreateInvestorAlertRequest `protobuf:"bytes,1,rep,name=investor_alerts,json=investorAlerts,proto3" json:"investor_alerts,omitempty"`
	Count          int32                         `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetInvestorInstrumentAlertResponse) Reset() {
	*x = GetInvestorInstrumentAlertResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInvestorInstrumentAlertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInvestorInstrumentAlertResponse) ProtoMessage() {}

func (x *GetInvestorInstrumentAlertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInvestorInstrumentAlertResponse.ProtoReflect.Descriptor instead.
func (*GetInvestorInstrumentAlertResponse) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{21}
}

func (x *GetInvestorInstrumentAlertResponse) GetInvestorAlerts() []*CreateInvestorAlertRequest {
	if x != nil {
		return x.InvestorAlerts
	}
	return nil
}

func (x *GetInvestorInstrumentAlertResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetInstrumentNameByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetInstrumentNameByIdRequest) Reset() {
	*x = GetInstrumentNameByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInstrumentNameByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstrumentNameByIdRequest) ProtoMessage() {}

func (x *GetInstrumentNameByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInstrumentNameByIdRequest.ProtoReflect.Descriptor instead.
func (*GetInstrumentNameByIdRequest) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{22}
}

func (x *GetInstrumentNameByIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetInstrumentNameByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetInstrumentNameByIdResponse) Reset() {
	*x = GetInstrumentNameByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInstrumentNameByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstrumentNameByIdResponse) ProtoMessage() {}

func (x *GetInstrumentNameByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInstrumentNameByIdResponse.ProtoReflect.Descriptor instead.
func (*GetInstrumentNameByIdResponse) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{23}
}

func (x *GetInstrumentNameByIdResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UpdateInvestorAlertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AlertStatus string `protobuf:"bytes,3,opt,name=alert_status,json=alertStatus,proto3" json:"alert_status,omitempty"`
	AlertType   string `protobuf:"bytes,8,opt,name=alert_type,json=alertType,proto3" json:"alert_type,omitempty"`
}

func (x *UpdateInvestorAlertRequest) Reset() {
	*x = UpdateInvestorAlertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateInvestorAlertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInvestorAlertRequest) ProtoMessage() {}

func (x *UpdateInvestorAlertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInvestorAlertRequest.ProtoReflect.Descriptor instead.
func (*UpdateInvestorAlertRequest) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{24}
}

func (x *UpdateInvestorAlertRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateInvestorAlertRequest) GetAlertStatus() string {
	if x != nil {
		return x.AlertStatus
	}
	return ""
}

func (x *UpdateInvestorAlertRequest) GetAlertType() string {
	if x != nil {
		return x.AlertType
	}
	return ""
}

type UpdateInvestorAlertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AlertPrice   float32 `protobuf:"fixed32,2,opt,name=alert_price,json=alertPrice,proto3" json:"alert_price,omitempty"`
	AlertStatus  string  `protobuf:"bytes,3,opt,name=alert_status,json=alertStatus,proto3" json:"alert_status,omitempty"`
	CurrentPrice float32 `protobuf:"fixed32,4,opt,name=current_price,json=currentPrice,proto3" json:"current_price,omitempty"`
	InvestorId   string  `protobuf:"bytes,5,opt,name=investor_id,json=investorId,proto3" json:"investor_id,omitempty"`
	Percent      float32 `protobuf:"fixed32,6,opt,name=percent,proto3" json:"percent,omitempty"`
	StockId      string  `protobuf:"bytes,7,opt,name=stock_id,json=stockId,proto3" json:"stock_id,omitempty"`
	AlertType    string  `protobuf:"bytes,8,opt,name=alert_type,json=alertType,proto3" json:"alert_type,omitempty"`
	SalesforceId string  `protobuf:"bytes,9,opt,name=salesforce_id,json=salesforceId,proto3" json:"salesforce_id,omitempty"`
}

func (x *UpdateInvestorAlertResponse) Reset() {
	*x = UpdateInvestorAlertResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateInvestorAlertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInvestorAlertResponse) ProtoMessage() {}

func (x *UpdateInvestorAlertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInvestorAlertResponse.ProtoReflect.Descriptor instead.
func (*UpdateInvestorAlertResponse) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{25}
}

func (x *UpdateInvestorAlertResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateInvestorAlertResponse) GetAlertPrice() float32 {
	if x != nil {
		return x.AlertPrice
	}
	return 0
}

func (x *UpdateInvestorAlertResponse) GetAlertStatus() string {
	if x != nil {
		return x.AlertStatus
	}
	return ""
}

func (x *UpdateInvestorAlertResponse) GetCurrentPrice() float32 {
	if x != nil {
		return x.CurrentPrice
	}
	return 0
}

func (x *UpdateInvestorAlertResponse) GetInvestorId() string {
	if x != nil {
		return x.InvestorId
	}
	return ""
}

func (x *UpdateInvestorAlertResponse) GetPercent() float32 {
	if x != nil {
		return x.Percent
	}
	return 0
}

func (x *UpdateInvestorAlertResponse) GetStockId() string {
	if x != nil {
		return x.StockId
	}
	return ""
}

func (x *UpdateInvestorAlertResponse) GetAlertType() string {
	if x != nil {
		return x.AlertType
	}
	return ""
}

func (x *UpdateInvestorAlertResponse) GetSalesforceId() string {
	if x != nil {
		return x.SalesforceId
	}
	return ""
}

type DeleteInvestorAlertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	InvestorId string `protobuf:"bytes,2,opt,name=investor_id,json=investorId,proto3" json:"investor_id,omitempty"`
}

func (x *DeleteInvestorAlertRequest) Reset() {
	*x = DeleteInvestorAlertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInvestorAlertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInvestorAlertRequest) ProtoMessage() {}

func (x *DeleteInvestorAlertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInvestorAlertRequest.ProtoReflect.Descriptor instead.
func (*DeleteInvestorAlertRequest) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{26}
}

func (x *DeleteInvestorAlertRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteInvestorAlertRequest) GetInvestorId() string {
	if x != nil {
		return x.InvestorId
	}
	return ""
}

type DeleteInvestorAlertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteInvestorAlertResponse) Reset() {
	*x = DeleteInvestorAlertResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInvestorAlertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInvestorAlertResponse) ProtoMessage() {}

func (x *DeleteInvestorAlertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInvestorAlertResponse.ProtoReflect.Descriptor instead.
func (*DeleteInvestorAlertResponse) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{27}
}

func (x *DeleteInvestorAlertResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetInvestorOneAlertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetInvestorOneAlertRequest) Reset() {
	*x = GetInvestorOneAlertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInvestorOneAlertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInvestorOneAlertRequest) ProtoMessage() {}

func (x *GetInvestorOneAlertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInvestorOneAlertRequest.ProtoReflect.Descriptor instead.
func (*GetInvestorOneAlertRequest) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{28}
}

func (x *GetInvestorOneAlertRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetInvestorAlertsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StockId    string `protobuf:"bytes,1,opt,name=stock_id,json=stockId,proto3" json:"stock_id,omitempty"`
	InvestorId string `protobuf:"bytes,2,opt,name=investor_id,json=investorId,proto3" json:"investor_id,omitempty"`
}

func (x *GetInvestorAlertsRequest) Reset() {
	*x = GetInvestorAlertsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInvestorAlertsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInvestorAlertsRequest) ProtoMessage() {}

func (x *GetInvestorAlertsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInvestorAlertsRequest.ProtoReflect.Descriptor instead.
func (*GetInvestorAlertsRequest) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{29}
}

func (x *GetInvestorAlertsRequest) GetStockId() string {
	if x != nil {
		return x.StockId
	}
	return ""
}

func (x *GetInvestorAlertsRequest) GetInvestorId() string {
	if x != nil {
		return x.InvestorId
	}
	return ""
}

type GetInvestorAlertsReponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvestorAlerts []*CreateInvestorAlertRequest `protobuf:"bytes,1,rep,name=investor_alerts,json=investorAlerts,proto3" json:"investor_alerts,omitempty"`
}

func (x *GetInvestorAlertsReponse) Reset() {
	*x = GetInvestorAlertsReponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInvestorAlertsReponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInvestorAlertsReponse) ProtoMessage() {}

func (x *GetInvestorAlertsReponse) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInvestorAlertsReponse.ProtoReflect.Descriptor instead.
func (*GetInvestorAlertsReponse) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{30}
}

func (x *GetInvestorAlertsReponse) GetInvestorAlerts() []*CreateInvestorAlertRequest {
	if x != nil {
		return x.InvestorAlerts
	}
	return nil
}

type GetInvestorOneAlertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AlertPrice   float32 `protobuf:"fixed32,2,opt,name=alert_price,json=alertPrice,proto3" json:"alert_price,omitempty"`
	AlertStatus  string  `protobuf:"bytes,3,opt,name=alert_status,json=alertStatus,proto3" json:"alert_status,omitempty"`
	CurrentPrice float32 `protobuf:"fixed32,4,opt,name=current_price,json=currentPrice,proto3" json:"current_price,omitempty"`
	InvestorId   string  `protobuf:"bytes,5,opt,name=investor_id,json=investorId,proto3" json:"investor_id,omitempty"`
	Percent      float32 `protobuf:"fixed32,6,opt,name=percent,proto3" json:"percent,omitempty"`
	StockId      string  `protobuf:"bytes,7,opt,name=stock_id,json=stockId,proto3" json:"stock_id,omitempty"`
	AlertType    string  `protobuf:"bytes,8,opt,name=alert_type,json=alertType,proto3" json:"alert_type,omitempty"`
	SalesforceId string  `protobuf:"bytes,9,opt,name=salesforce_id,json=salesforceId,proto3" json:"salesforce_id,omitempty"`
}

func (x *GetInvestorOneAlertResponse) Reset() {
	*x = GetInvestorOneAlertResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInvestorOneAlertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInvestorOneAlertResponse) ProtoMessage() {}

func (x *GetInvestorOneAlertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInvestorOneAlertResponse.ProtoReflect.Descriptor instead.
func (*GetInvestorOneAlertResponse) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{31}
}

func (x *GetInvestorOneAlertResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetInvestorOneAlertResponse) GetAlertPrice() float32 {
	if x != nil {
		return x.AlertPrice
	}
	return 0
}

func (x *GetInvestorOneAlertResponse) GetAlertStatus() string {
	if x != nil {
		return x.AlertStatus
	}
	return ""
}

func (x *GetInvestorOneAlertResponse) GetCurrentPrice() float32 {
	if x != nil {
		return x.CurrentPrice
	}
	return 0
}

func (x *GetInvestorOneAlertResponse) GetInvestorId() string {
	if x != nil {
		return x.InvestorId
	}
	return ""
}

func (x *GetInvestorOneAlertResponse) GetPercent() float32 {
	if x != nil {
		return x.Percent
	}
	return 0
}

func (x *GetInvestorOneAlertResponse) GetStockId() string {
	if x != nil {
		return x.StockId
	}
	return ""
}

func (x *GetInvestorOneAlertResponse) GetAlertType() string {
	if x != nil {
		return x.AlertType
	}
	return ""
}

func (x *GetInvestorOneAlertResponse) GetSalesforceId() string {
	if x != nil {
		return x.SalesforceId
	}
	return ""
}

type CreateInvestorAlertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AlertPrice   float32 `protobuf:"fixed32,2,opt,name=alert_price,json=alertPrice,proto3" json:"alert_price,omitempty"`
	AlertStatus  string  `protobuf:"bytes,3,opt,name=alert_status,json=alertStatus,proto3" json:"alert_status,omitempty"`
	CurrentPrice float32 `protobuf:"fixed32,4,opt,name=current_price,json=currentPrice,proto3" json:"current_price,omitempty"`
	InvestorId   string  `protobuf:"bytes,5,opt,name=investor_id,json=investorId,proto3" json:"investor_id,omitempty"`
	Percent      float32 `protobuf:"fixed32,6,opt,name=percent,proto3" json:"percent,omitempty"`
	StockId      string  `protobuf:"bytes,7,opt,name=stock_id,json=stockId,proto3" json:"stock_id,omitempty"`
	AlertType    string  `protobuf:"bytes,8,opt,name=alert_type,json=alertType,proto3" json:"alert_type,omitempty"`
	SalesforceId string  `protobuf:"bytes,9,opt,name=salesforce_id,json=salesforceId,proto3" json:"salesforce_id,omitempty"`
	CreatedAt    string  `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Ticker       string  `protobuf:"bytes,11,opt,name=ticker,proto3" json:"ticker,omitempty"`
}

func (x *CreateInvestorAlertRequest) Reset() {
	*x = CreateInvestorAlertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateInvestorAlertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInvestorAlertRequest) ProtoMessage() {}

func (x *CreateInvestorAlertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInvestorAlertRequest.ProtoReflect.Descriptor instead.
func (*CreateInvestorAlertRequest) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{32}
}

func (x *CreateInvestorAlertRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateInvestorAlertRequest) GetAlertPrice() float32 {
	if x != nil {
		return x.AlertPrice
	}
	return 0
}

func (x *CreateInvestorAlertRequest) GetAlertStatus() string {
	if x != nil {
		return x.AlertStatus
	}
	return ""
}

func (x *CreateInvestorAlertRequest) GetCurrentPrice() float32 {
	if x != nil {
		return x.CurrentPrice
	}
	return 0
}

func (x *CreateInvestorAlertRequest) GetInvestorId() string {
	if x != nil {
		return x.InvestorId
	}
	return ""
}

func (x *CreateInvestorAlertRequest) GetPercent() float32 {
	if x != nil {
		return x.Percent
	}
	return 0
}

func (x *CreateInvestorAlertRequest) GetStockId() string {
	if x != nil {
		return x.StockId
	}
	return ""
}

func (x *CreateInvestorAlertRequest) GetAlertType() string {
	if x != nil {
		return x.AlertType
	}
	return ""
}

func (x *CreateInvestorAlertRequest) GetSalesforceId() string {
	if x != nil {
		return x.SalesforceId
	}
	return ""
}

func (x *CreateInvestorAlertRequest) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *CreateInvestorAlertRequest) GetTicker() string {
	if x != nil {
		return x.Ticker
	}
	return ""
}

type CreateInvestorAlertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateInvestorAlertResponse) Reset() {
	*x = CreateInvestorAlertResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateInvestorAlertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInvestorAlertResponse) ProtoMessage() {}

func (x *CreateInvestorAlertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInvestorAlertResponse.ProtoReflect.Descriptor instead.
func (*CreateInvestorAlertResponse) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{33}
}

func (x *CreateInvestorAlertResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetInstrumentRequiredFieldsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ric string `protobuf:"bytes,1,opt,name=ric,proto3" json:"ric,omitempty"`
}

func (x *GetInstrumentRequiredFieldsRequest) Reset() {
	*x = GetInstrumentRequiredFieldsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInstrumentRequiredFieldsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstrumentRequiredFieldsRequest) ProtoMessage() {}

func (x *GetInstrumentRequiredFieldsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInstrumentRequiredFieldsRequest.ProtoReflect.Descriptor instead.
func (*GetInstrumentRequiredFieldsRequest) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{34}
}

func (x *GetInstrumentRequiredFieldsRequest) GetRic() string {
	if x != nil {
		return x.Ric
	}
	return ""
}

type GetInstrumentRequiredFieldsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessActivity        string `protobuf:"bytes,1,opt,name=business_activity,json=businessActivity,proto3" json:"business_activity,omitempty"`
	CerfiticatesOfDesposits string `protobuf:"bytes,2,opt,name=cerfiticates_of_desposits,json=cerfiticatesOfDesposits,proto3" json:"cerfiticates_of_desposits,omitempty"`
	DebtSecurities          string `protobuf:"bytes,3,opt,name=debt_securities,json=debtSecurities,proto3" json:"debt_securities,omitempty"`
	TreasuryBills           string `protobuf:"bytes,4,opt,name=treasury_bills,json=treasuryBills,proto3" json:"treasury_bills,omitempty"`
	BondsEBonds             string `protobuf:"bytes,5,opt,name=bonds_e_bonds,json=bondsEBonds,proto3" json:"bonds_e_bonds,omitempty"`
	InterestFinanceIncome   string `protobuf:"bytes,6,opt,name=interest_finance_income,json=interestFinanceIncome,proto3" json:"interest_finance_income,omitempty"`
	MoneyMarketFunds        string `protobuf:"bytes,7,opt,name=money_market_funds,json=moneyMarketFunds,proto3" json:"money_market_funds,omitempty"`
	Deposits                string `protobuf:"bytes,8,opt,name=deposits,proto3" json:"deposits,omitempty"`
	LoansMade               string `protobuf:"bytes,9,opt,name=loans_made,json=loansMade,proto3" json:"loans_made,omitempty"`
	ShortTermDebt           string `protobuf:"bytes,10,opt,name=short_term_debt,json=shortTermDebt,proto3" json:"short_term_debt,omitempty"`
	LongTermDebt            string `protobuf:"bytes,11,opt,name=long_term_debt,json=longTermDebt,proto3" json:"long_term_debt,omitempty"`
	Debt                    string `protobuf:"bytes,12,opt,name=debt,proto3" json:"debt,omitempty"`
	TotalRevenue            string `protobuf:"bytes,13,opt,name=total_revenue,json=totalRevenue,proto3" json:"total_revenue,omitempty"`
}

func (x *GetInstrumentRequiredFieldsResponse) Reset() {
	*x = GetInstrumentRequiredFieldsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInstrumentRequiredFieldsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstrumentRequiredFieldsResponse) ProtoMessage() {}

func (x *GetInstrumentRequiredFieldsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInstrumentRequiredFieldsResponse.ProtoReflect.Descriptor instead.
func (*GetInstrumentRequiredFieldsResponse) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{35}
}

func (x *GetInstrumentRequiredFieldsResponse) GetBusinessActivity() string {
	if x != nil {
		return x.BusinessActivity
	}
	return ""
}

func (x *GetInstrumentRequiredFieldsResponse) GetCerfiticatesOfDesposits() string {
	if x != nil {
		return x.CerfiticatesOfDesposits
	}
	return ""
}

func (x *GetInstrumentRequiredFieldsResponse) GetDebtSecurities() string {
	if x != nil {
		return x.DebtSecurities
	}
	return ""
}

func (x *GetInstrumentRequiredFieldsResponse) GetTreasuryBills() string {
	if x != nil {
		return x.TreasuryBills
	}
	return ""
}

func (x *GetInstrumentRequiredFieldsResponse) GetBondsEBonds() string {
	if x != nil {
		return x.BondsEBonds
	}
	return ""
}

func (x *GetInstrumentRequiredFieldsResponse) GetInterestFinanceIncome() string {
	if x != nil {
		return x.InterestFinanceIncome
	}
	return ""
}

func (x *GetInstrumentRequiredFieldsResponse) GetMoneyMarketFunds() string {
	if x != nil {
		return x.MoneyMarketFunds
	}
	return ""
}

func (x *GetInstrumentRequiredFieldsResponse) GetDeposits() string {
	if x != nil {
		return x.Deposits
	}
	return ""
}

func (x *GetInstrumentRequiredFieldsResponse) GetLoansMade() string {
	if x != nil {
		return x.LoansMade
	}
	return ""
}

func (x *GetInstrumentRequiredFieldsResponse) GetShortTermDebt() string {
	if x != nil {
		return x.ShortTermDebt
	}
	return ""
}

func (x *GetInstrumentRequiredFieldsResponse) GetLongTermDebt() string {
	if x != nil {
		return x.LongTermDebt
	}
	return ""
}

func (x *GetInstrumentRequiredFieldsResponse) GetDebt() string {
	if x != nil {
		return x.Debt
	}
	return ""
}

func (x *GetInstrumentRequiredFieldsResponse) GetTotalRevenue() string {
	if x != nil {
		return x.TotalRevenue
	}
	return ""
}

type UpdateKYCStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicantId string `protobuf:"bytes,1,opt,name=applicant_id,json=applicantId,proto3" json:"applicant_id,omitempty"`
	Status      string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Phone       string `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
}

func (x *UpdateKYCStatusRequest) Reset() {
	*x = UpdateKYCStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateKYCStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateKYCStatusRequest) ProtoMessage() {}

func (x *UpdateKYCStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateKYCStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateKYCStatusRequest) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{36}
}

func (x *UpdateKYCStatusRequest) GetApplicantId() string {
	if x != nil {
		return x.ApplicantId
	}
	return ""
}

func (x *UpdateKYCStatusRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UpdateKYCStatusRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

type UpdateKYCStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UpdateKYCStatusResponse) Reset() {
	*x = UpdateKYCStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateKYCStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateKYCStatusResponse) ProtoMessage() {}

func (x *UpdateKYCStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateKYCStatusResponse.ProtoReflect.Descriptor instead.
func (*UpdateKYCStatusResponse) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{37}
}

func (x *UpdateKYCStatusResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdateInstrumentRefenitiveFromSalesforceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ticker                            string  `protobuf:"bytes,1,opt,name=ticker,proto3" json:"ticker,omitempty"`
	AverageDailtyVolumeForLast_10Days float32 `protobuf:"fixed32,2,opt,name=average_dailty_volume_for_last_10_days,json=averageDailtyVolumeForLast10Days,proto3" json:"average_dailty_volume_for_last_10_days,omitempty"`
	MarketCapitalization              float32 `protobuf:"fixed32,3,opt,name=market_capitalization,json=marketCapitalization,proto3" json:"market_capitalization,omitempty"`
	PriceChange_1Day                  float32 `protobuf:"fixed32,4,opt,name=price_change_1_day,json=priceChange1Day,proto3" json:"price_change_1_day,omitempty"`
	PriceChange_5Day                  float32 `protobuf:"fixed32,5,opt,name=price_change_5_day,json=priceChange5Day,proto3" json:"price_change_5_day,omitempty"`
	Eps                               float32 `protobuf:"fixed32,6,opt,name=eps,proto3" json:"eps,omitempty"`
	DividientPerShare                 float32 `protobuf:"fixed32,7,opt,name=dividient_per_share,json=dividientPerShare,proto3" json:"dividient_per_share,omitempty"`
	CurrentRatio                      float32 `protobuf:"fixed32,8,opt,name=current_ratio,json=currentRatio,proto3" json:"current_ratio,omitempty"`
	QuickRatio                        float32 `protobuf:"fixed32,9,opt,name=quick_ratio,json=quickRatio,proto3" json:"quick_ratio,omitempty"`
	LtDebtEquility                    float32 `protobuf:"fixed32,10,opt,name=lt_debt_equility,json=ltDebtEquility,proto3" json:"lt_debt_equility,omitempty"`
	Roa                               float32 `protobuf:"fixed32,11,opt,name=roa,proto3" json:"roa,omitempty"`
	Roi                               float32 `protobuf:"fixed32,12,opt,name=roi,proto3" json:"roi,omitempty"`
	Pe                                float32 `protobuf:"fixed32,13,opt,name=pe,proto3" json:"pe,omitempty"`
	TotalDebtEquity                   float32 `protobuf:"fixed32,14,opt,name=total_debt_equity,json=totalDebtEquity,proto3" json:"total_debt_equity,omitempty"`
	TotalAssets                       float32 `protobuf:"fixed32,15,opt,name=total_assets,json=totalAssets,proto3" json:"total_assets,omitempty"`
	AssetCategory                     string  `protobuf:"bytes,16,opt,name=asset_category,json=assetCategory,proto3" json:"asset_category,omitempty"`
	Beta                              float32 `protobuf:"fixed32,17,opt,name=beta,proto3" json:"beta,omitempty"`
	Ebit                              float32 `protobuf:"fixed32,18,opt,name=ebit,proto3" json:"ebit,omitempty"`
	Roce                              float32 `protobuf:"fixed32,19,opt,name=roce,proto3" json:"roce,omitempty"`
}

func (x *UpdateInstrumentRefenitiveFromSalesforceRequest) Reset() {
	*x = UpdateInstrumentRefenitiveFromSalesforceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateInstrumentRefenitiveFromSalesforceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInstrumentRefenitiveFromSalesforceRequest) ProtoMessage() {}

func (x *UpdateInstrumentRefenitiveFromSalesforceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInstrumentRefenitiveFromSalesforceRequest.ProtoReflect.Descriptor instead.
func (*UpdateInstrumentRefenitiveFromSalesforceRequest) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{38}
}

func (x *UpdateInstrumentRefenitiveFromSalesforceRequest) GetTicker() string {
	if x != nil {
		return x.Ticker
	}
	return ""
}

func (x *UpdateInstrumentRefenitiveFromSalesforceRequest) GetAverageDailtyVolumeForLast_10Days() float32 {
	if x != nil {
		return x.AverageDailtyVolumeForLast_10Days
	}
	return 0
}

func (x *UpdateInstrumentRefenitiveFromSalesforceRequest) GetMarketCapitalization() float32 {
	if x != nil {
		return x.MarketCapitalization
	}
	return 0
}

func (x *UpdateInstrumentRefenitiveFromSalesforceRequest) GetPriceChange_1Day() float32 {
	if x != nil {
		return x.PriceChange_1Day
	}
	return 0
}

func (x *UpdateInstrumentRefenitiveFromSalesforceRequest) GetPriceChange_5Day() float32 {
	if x != nil {
		return x.PriceChange_5Day
	}
	return 0
}

func (x *UpdateInstrumentRefenitiveFromSalesforceRequest) GetEps() float32 {
	if x != nil {
		return x.Eps
	}
	return 0
}

func (x *UpdateInstrumentRefenitiveFromSalesforceRequest) GetDividientPerShare() float32 {
	if x != nil {
		return x.DividientPerShare
	}
	return 0
}

func (x *UpdateInstrumentRefenitiveFromSalesforceRequest) GetCurrentRatio() float32 {
	if x != nil {
		return x.CurrentRatio
	}
	return 0
}

func (x *UpdateInstrumentRefenitiveFromSalesforceRequest) GetQuickRatio() float32 {
	if x != nil {
		return x.QuickRatio
	}
	return 0
}

func (x *UpdateInstrumentRefenitiveFromSalesforceRequest) GetLtDebtEquility() float32 {
	if x != nil {
		return x.LtDebtEquility
	}
	return 0
}

func (x *UpdateInstrumentRefenitiveFromSalesforceRequest) GetRoa() float32 {
	if x != nil {
		return x.Roa
	}
	return 0
}

func (x *UpdateInstrumentRefenitiveFromSalesforceRequest) GetRoi() float32 {
	if x != nil {
		return x.Roi
	}
	return 0
}

func (x *UpdateInstrumentRefenitiveFromSalesforceRequest) GetPe() float32 {
	if x != nil {
		return x.Pe
	}
	return 0
}

func (x *UpdateInstrumentRefenitiveFromSalesforceRequest) GetTotalDebtEquity() float32 {
	if x != nil {
		return x.TotalDebtEquity
	}
	return 0
}

func (x *UpdateInstrumentRefenitiveFromSalesforceRequest) GetTotalAssets() float32 {
	if x != nil {
		return x.TotalAssets
	}
	return 0
}

func (x *UpdateInstrumentRefenitiveFromSalesforceRequest) GetAssetCategory() string {
	if x != nil {
		return x.AssetCategory
	}
	return ""
}

func (x *UpdateInstrumentRefenitiveFromSalesforceRequest) GetBeta() float32 {
	if x != nil {
		return x.Beta
	}
	return 0
}

func (x *UpdateInstrumentRefenitiveFromSalesforceRequest) GetEbit() float32 {
	if x != nil {
		return x.Ebit
	}
	return 0
}

func (x *UpdateInstrumentRefenitiveFromSalesforceRequest) GetRoce() float32 {
	if x != nil {
		return x.Roce
	}
	return 0
}

type UpdateRatiosReportBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ticker                            string  `protobuf:"bytes,1,opt,name=ticker,proto3" json:"ticker,omitempty"`
	AverageDailtyVolumeForLast_10Days float32 `protobuf:"fixed32,2,opt,name=average_dailty_volume_for_last_10_days,json=averageDailtyVolumeForLast10Days,proto3" json:"average_dailty_volume_for_last_10_days,omitempty"`
	MarketCapitalization              float32 `protobuf:"fixed32,3,opt,name=market_capitalization,json=marketCapitalization,proto3" json:"market_capitalization,omitempty"`
	PriceChange_1Day                  float32 `protobuf:"fixed32,4,opt,name=price_change_1_day,json=priceChange1Day,proto3" json:"price_change_1_day,omitempty"`
	PriceChange_5Day                  float32 `protobuf:"fixed32,5,opt,name=price_change_5_day,json=priceChange5Day,proto3" json:"price_change_5_day,omitempty"`
	Eps                               float32 `protobuf:"fixed32,6,opt,name=eps,proto3" json:"eps,omitempty"`
	DividientPerShare                 float32 `protobuf:"fixed32,7,opt,name=dividient_per_share,json=dividientPerShare,proto3" json:"dividient_per_share,omitempty"`
	CurrentRatio                      float32 `protobuf:"fixed32,8,opt,name=current_ratio,json=currentRatio,proto3" json:"current_ratio,omitempty"`
	QuickRatio                        float32 `protobuf:"fixed32,9,opt,name=quick_ratio,json=quickRatio,proto3" json:"quick_ratio,omitempty"`
	LtDebtEquility                    float32 `protobuf:"fixed32,10,opt,name=lt_debt_equility,json=ltDebtEquility,proto3" json:"lt_debt_equility,omitempty"`
	Roa                               float32 `protobuf:"fixed32,11,opt,name=roa,proto3" json:"roa,omitempty"`
	Roi                               float32 `protobuf:"fixed32,12,opt,name=roi,proto3" json:"roi,omitempty"`
	Pe                                float32 `protobuf:"fixed32,13,opt,name=pe,proto3" json:"pe,omitempty"`
	TotalDebtEquity                   float32 `protobuf:"fixed32,14,opt,name=total_debt_equity,json=totalDebtEquity,proto3" json:"total_debt_equity,omitempty"`
	TotalAssets                       float32 `protobuf:"fixed32,15,opt,name=total_assets,json=totalAssets,proto3" json:"total_assets,omitempty"`
	AssetCategory                     string  `protobuf:"bytes,16,opt,name=asset_category,json=assetCategory,proto3" json:"asset_category,omitempty"`
	Beta                              float32 `protobuf:"fixed32,17,opt,name=beta,proto3" json:"beta,omitempty"`
	Ebit                              float32 `protobuf:"fixed32,18,opt,name=ebit,proto3" json:"ebit,omitempty"`
	Roce                              float32 `protobuf:"fixed32,19,opt,name=roce,proto3" json:"roce,omitempty"`
	AssetType                         string  `protobuf:"bytes,20,opt,name=asset_type,json=assetType,proto3" json:"asset_type,omitempty"`
	Industry                          string  `protobuf:"bytes,21,opt,name=industry,proto3" json:"industry,omitempty"`
	PriceChangeMonth                  float32 `protobuf:"fixed32,22,opt,name=price_change_month,json=priceChangeMonth,proto3" json:"price_change_month,omitempty"`
	PriceChangeYear                   float32 `protobuf:"fixed32,23,opt,name=price_change_year,json=priceChangeYear,proto3" json:"price_change_year,omitempty"`
}

func (x *UpdateRatiosReportBody) Reset() {
	*x = UpdateRatiosReportBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRatiosReportBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRatiosReportBody) ProtoMessage() {}

func (x *UpdateRatiosReportBody) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRatiosReportBody.ProtoReflect.Descriptor instead.
func (*UpdateRatiosReportBody) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{39}
}

func (x *UpdateRatiosReportBody) GetTicker() string {
	if x != nil {
		return x.Ticker
	}
	return ""
}

func (x *UpdateRatiosReportBody) GetAverageDailtyVolumeForLast_10Days() float32 {
	if x != nil {
		return x.AverageDailtyVolumeForLast_10Days
	}
	return 0
}

func (x *UpdateRatiosReportBody) GetMarketCapitalization() float32 {
	if x != nil {
		return x.MarketCapitalization
	}
	return 0
}

func (x *UpdateRatiosReportBody) GetPriceChange_1Day() float32 {
	if x != nil {
		return x.PriceChange_1Day
	}
	return 0
}

func (x *UpdateRatiosReportBody) GetPriceChange_5Day() float32 {
	if x != nil {
		return x.PriceChange_5Day
	}
	return 0
}

func (x *UpdateRatiosReportBody) GetEps() float32 {
	if x != nil {
		return x.Eps
	}
	return 0
}

func (x *UpdateRatiosReportBody) GetDividientPerShare() float32 {
	if x != nil {
		return x.DividientPerShare
	}
	return 0
}

func (x *UpdateRatiosReportBody) GetCurrentRatio() float32 {
	if x != nil {
		return x.CurrentRatio
	}
	return 0
}

func (x *UpdateRatiosReportBody) GetQuickRatio() float32 {
	if x != nil {
		return x.QuickRatio
	}
	return 0
}

func (x *UpdateRatiosReportBody) GetLtDebtEquility() float32 {
	if x != nil {
		return x.LtDebtEquility
	}
	return 0
}

func (x *UpdateRatiosReportBody) GetRoa() float32 {
	if x != nil {
		return x.Roa
	}
	return 0
}

func (x *UpdateRatiosReportBody) GetRoi() float32 {
	if x != nil {
		return x.Roi
	}
	return 0
}

func (x *UpdateRatiosReportBody) GetPe() float32 {
	if x != nil {
		return x.Pe
	}
	return 0
}

func (x *UpdateRatiosReportBody) GetTotalDebtEquity() float32 {
	if x != nil {
		return x.TotalDebtEquity
	}
	return 0
}

func (x *UpdateRatiosReportBody) GetTotalAssets() float32 {
	if x != nil {
		return x.TotalAssets
	}
	return 0
}

func (x *UpdateRatiosReportBody) GetAssetCategory() string {
	if x != nil {
		return x.AssetCategory
	}
	return ""
}

func (x *UpdateRatiosReportBody) GetBeta() float32 {
	if x != nil {
		return x.Beta
	}
	return 0
}

func (x *UpdateRatiosReportBody) GetEbit() float32 {
	if x != nil {
		return x.Ebit
	}
	return 0
}

func (x *UpdateRatiosReportBody) GetRoce() float32 {
	if x != nil {
		return x.Roce
	}
	return 0
}

func (x *UpdateRatiosReportBody) GetAssetType() string {
	if x != nil {
		return x.AssetType
	}
	return ""
}

func (x *UpdateRatiosReportBody) GetIndustry() string {
	if x != nil {
		return x.Industry
	}
	return ""
}

func (x *UpdateRatiosReportBody) GetPriceChangeMonth() float32 {
	if x != nil {
		return x.PriceChangeMonth
	}
	return 0
}

func (x *UpdateRatiosReportBody) GetPriceChangeYear() float32 {
	if x != nil {
		return x.PriceChangeYear
	}
	return 0
}

type UpdateRatiosReportRequst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity []*UpdateRatiosReportBody `protobuf:"bytes,1,rep,name=entity,proto3" json:"entity,omitempty"`
}

func (x *UpdateRatiosReportRequst) Reset() {
	*x = UpdateRatiosReportRequst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRatiosReportRequst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRatiosReportRequst) ProtoMessage() {}

func (x *UpdateRatiosReportRequst) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRatiosReportRequst.ProtoReflect.Descriptor instead.
func (*UpdateRatiosReportRequst) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{40}
}

func (x *UpdateRatiosReportRequst) GetEntity() []*UpdateRatiosReportBody {
	if x != nil {
		return x.Entity
	}
	return nil
}

type UpdateInstrumentRefenitiveFromSalesforceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UpdateInstrumentRefenitiveFromSalesforceResponse) Reset() {
	*x = UpdateInstrumentRefenitiveFromSalesforceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateInstrumentRefenitiveFromSalesforceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInstrumentRefenitiveFromSalesforceResponse) ProtoMessage() {}

func (x *UpdateInstrumentRefenitiveFromSalesforceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInstrumentRefenitiveFromSalesforceResponse.ProtoReflect.Descriptor instead.
func (*UpdateInstrumentRefenitiveFromSalesforceResponse) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{41}
}

func (x *UpdateInstrumentRefenitiveFromSalesforceResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdateInstrumentMusaffoFromSalesforceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StockName                             string  `protobuf:"bytes,1,opt,name=stock_name,json=stockName,proto3" json:"stock_name,omitempty"`
	CompanyName                           string  `protobuf:"bytes,2,opt,name=company_name,json=companyName,proto3" json:"company_name,omitempty"`
	ShariahComplianceStatus               string  `protobuf:"bytes,3,opt,name=shariah_compliance_status,json=shariahComplianceStatus,proto3" json:"shariah_compliance_status,omitempty"`
	ComplianceRanking                     string  `protobuf:"bytes,4,opt,name=compliance_ranking,json=complianceRanking,proto3" json:"compliance_ranking,omitempty"`
	Source                                string  `protobuf:"bytes,5,opt,name=source,proto3" json:"source,omitempty"`
	Halal                                 int32   `protobuf:"varint,6,opt,name=halal,proto3" json:"halal,omitempty"`
	NotHalal                              int32   `protobuf:"varint,7,opt,name=not_halal,json=notHalal,proto3" json:"not_halal,omitempty"`
	BusinessActivityStatus                string  `protobuf:"bytes,8,opt,name=business_activity_status,json=businessActivityStatus,proto3" json:"business_activity_status,omitempty"`
	Questionable                          int32   `protobuf:"varint,9,opt,name=questionable,proto3" json:"questionable,omitempty"`
	InterestBearingDebtStatus             string  `protobuf:"bytes,10,opt,name=interest_bearing_debt_status,json=interestBearingDebtStatus,proto3" json:"interest_bearing_debt_status,omitempty"`
	InterestBearingSecuritiesAssetsStatus string  `protobuf:"bytes,11,opt,name=interest_bearing_securities_assets_status,json=interestBearingSecuritiesAssetsStatus,proto3" json:"interest_bearing_securities_assets_status,omitempty"`
	InterestRation                        float32 `protobuf:"fixed32,12,opt,name=interest_ration,json=interestRation,proto3" json:"interest_ration,omitempty"`
	DebtRatio                             float32 `protobuf:"fixed32,13,opt,name=debt_ratio,json=debtRatio,proto3" json:"debt_ratio,omitempty"`
	Active                                bool    `protobuf:"varint,14,opt,name=active,proto3" json:"active,omitempty"`
}

func (x *UpdateInstrumentMusaffoFromSalesforceRequest) Reset() {
	*x = UpdateInstrumentMusaffoFromSalesforceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateInstrumentMusaffoFromSalesforceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInstrumentMusaffoFromSalesforceRequest) ProtoMessage() {}

func (x *UpdateInstrumentMusaffoFromSalesforceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInstrumentMusaffoFromSalesforceRequest.ProtoReflect.Descriptor instead.
func (*UpdateInstrumentMusaffoFromSalesforceRequest) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{42}
}

func (x *UpdateInstrumentMusaffoFromSalesforceRequest) GetStockName() string {
	if x != nil {
		return x.StockName
	}
	return ""
}

func (x *UpdateInstrumentMusaffoFromSalesforceRequest) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *UpdateInstrumentMusaffoFromSalesforceRequest) GetShariahComplianceStatus() string {
	if x != nil {
		return x.ShariahComplianceStatus
	}
	return ""
}

func (x *UpdateInstrumentMusaffoFromSalesforceRequest) GetComplianceRanking() string {
	if x != nil {
		return x.ComplianceRanking
	}
	return ""
}

func (x *UpdateInstrumentMusaffoFromSalesforceRequest) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *UpdateInstrumentMusaffoFromSalesforceRequest) GetHalal() int32 {
	if x != nil {
		return x.Halal
	}
	return 0
}

func (x *UpdateInstrumentMusaffoFromSalesforceRequest) GetNotHalal() int32 {
	if x != nil {
		return x.NotHalal
	}
	return 0
}

func (x *UpdateInstrumentMusaffoFromSalesforceRequest) GetBusinessActivityStatus() string {
	if x != nil {
		return x.BusinessActivityStatus
	}
	return ""
}

func (x *UpdateInstrumentMusaffoFromSalesforceRequest) GetQuestionable() int32 {
	if x != nil {
		return x.Questionable
	}
	return 0
}

func (x *UpdateInstrumentMusaffoFromSalesforceRequest) GetInterestBearingDebtStatus() string {
	if x != nil {
		return x.InterestBearingDebtStatus
	}
	return ""
}

func (x *UpdateInstrumentMusaffoFromSalesforceRequest) GetInterestBearingSecuritiesAssetsStatus() string {
	if x != nil {
		return x.InterestBearingSecuritiesAssetsStatus
	}
	return ""
}

func (x *UpdateInstrumentMusaffoFromSalesforceRequest) GetInterestRation() float32 {
	if x != nil {
		return x.InterestRation
	}
	return 0
}

func (x *UpdateInstrumentMusaffoFromSalesforceRequest) GetDebtRatio() float32 {
	if x != nil {
		return x.DebtRatio
	}
	return 0
}

func (x *UpdateInstrumentMusaffoFromSalesforceRequest) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

type UpdateInstrumentMusaffoFromSalesforceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UpdateInstrumentMusaffoFromSalesforceResponse) Reset() {
	*x = UpdateInstrumentMusaffoFromSalesforceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateInstrumentMusaffoFromSalesforceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInstrumentMusaffoFromSalesforceResponse) ProtoMessage() {}

func (x *UpdateInstrumentMusaffoFromSalesforceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInstrumentMusaffoFromSalesforceResponse.ProtoReflect.Descriptor instead.
func (*UpdateInstrumentMusaffoFromSalesforceResponse) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{43}
}

func (x *UpdateInstrumentMusaffoFromSalesforceResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type InvestorLoginByPhoneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PhoneNumber string `protobuf:"bytes,2,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	Tag         string `protobuf:"bytes,3,opt,name=tag,proto3" json:"tag,omitempty"`
}

func (x *InvestorLoginByPhoneRequest) Reset() {
	*x = InvestorLoginByPhoneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvestorLoginByPhoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvestorLoginByPhoneRequest) ProtoMessage() {}

func (x *InvestorLoginByPhoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvestorLoginByPhoneRequest.ProtoReflect.Descriptor instead.
func (*InvestorLoginByPhoneRequest) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{44}
}

func (x *InvestorLoginByPhoneRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *InvestorLoginByPhoneRequest) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *InvestorLoginByPhoneRequest) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

type InvestorLoginVerifyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PhoneNumber string `protobuf:"bytes,2,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	Code        string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *InvestorLoginVerifyRequest) Reset() {
	*x = InvestorLoginVerifyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvestorLoginVerifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvestorLoginVerifyRequest) ProtoMessage() {}

func (x *InvestorLoginVerifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvestorLoginVerifyRequest.ProtoReflect.Descriptor instead.
func (*InvestorLoginVerifyRequest) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{45}
}

func (x *InvestorLoginVerifyRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *InvestorLoginVerifyRequest) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *InvestorLoginVerifyRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type InvestorLoginVerifyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TwilioStatus string `protobuf:"bytes,2,opt,name=twilio_status,json=twilioStatus,proto3" json:"twilio_status,omitempty"`
	PhoneNumber  string `protobuf:"bytes,3,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
}

func (x *InvestorLoginVerifyResponse) Reset() {
	*x = InvestorLoginVerifyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvestorLoginVerifyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvestorLoginVerifyResponse) ProtoMessage() {}

func (x *InvestorLoginVerifyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvestorLoginVerifyResponse.ProtoReflect.Descriptor instead.
func (*InvestorLoginVerifyResponse) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{46}
}

func (x *InvestorLoginVerifyResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *InvestorLoginVerifyResponse) GetTwilioStatus() string {
	if x != nil {
		return x.TwilioStatus
	}
	return ""
}

func (x *InvestorLoginVerifyResponse) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

type InvestorLoginByPhoneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TwilioStatus string `protobuf:"bytes,2,opt,name=twilio_status,json=twilioStatus,proto3" json:"twilio_status,omitempty"`
	PhoneNumber  string `protobuf:"bytes,3,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
}

func (x *InvestorLoginByPhoneResponse) Reset() {
	*x = InvestorLoginByPhoneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvestorLoginByPhoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvestorLoginByPhoneResponse) ProtoMessage() {}

func (x *InvestorLoginByPhoneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvestorLoginByPhoneResponse.ProtoReflect.Descriptor instead.
func (*InvestorLoginByPhoneResponse) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{47}
}

func (x *InvestorLoginByPhoneResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *InvestorLoginByPhoneResponse) GetTwilioStatus() string {
	if x != nil {
		return x.TwilioStatus
	}
	return ""
}

func (x *InvestorLoginByPhoneResponse) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

type GetMusaffoDetailsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StockId string `protobuf:"bytes,1,opt,name=stock_id,json=stockId,proto3" json:"stock_id,omitempty"`
}

func (x *GetMusaffoDetailsRequest) Reset() {
	*x = GetMusaffoDetailsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMusaffoDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMusaffoDetailsRequest) ProtoMessage() {}

func (x *GetMusaffoDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMusaffoDetailsRequest.ProtoReflect.Descriptor instead.
func (*GetMusaffoDetailsRequest) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{48}
}

func (x *GetMusaffoDetailsRequest) GetStockId() string {
	if x != nil {
		return x.StockId
	}
	return ""
}

type GetMusaffoDetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MusaffoData *MusaffoData `protobuf:"bytes,1,opt,name=musaffo_data,json=musaffoData,proto3" json:"musaffo_data,omitempty"`
}

func (x *GetMusaffoDetailsResponse) Reset() {
	*x = GetMusaffoDetailsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMusaffoDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMusaffoDetailsResponse) ProtoMessage() {}

func (x *GetMusaffoDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMusaffoDetailsResponse.ProtoReflect.Descriptor instead.
func (*GetMusaffoDetailsResponse) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{49}
}

func (x *GetMusaffoDetailsResponse) GetMusaffoData() *MusaffoData {
	if x != nil {
		return x.MusaffoData
	}
	return nil
}

type GetApplicantDocsStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicantId string `protobuf:"bytes,1,opt,name=applicant_id,json=applicantId,proto3" json:"applicant_id,omitempty"`
}

func (x *GetApplicantDocsStatusRequest) Reset() {
	*x = GetApplicantDocsStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApplicantDocsStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApplicantDocsStatusRequest) ProtoMessage() {}

func (x *GetApplicantDocsStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApplicantDocsStatusRequest.ProtoReflect.Descriptor instead.
func (*GetApplicantDocsStatusRequest) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{50}
}

func (x *GetApplicantDocsStatusRequest) GetApplicantId() string {
	if x != nil {
		return x.ApplicantId
	}
	return ""
}

type GetApplicantDocsStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identities []*Identity `protobuf:"bytes,1,rep,name=identities,proto3" json:"identities,omitempty"`
}

func (x *GetApplicantDocsStatusResponse) Reset() {
	*x = GetApplicantDocsStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApplicantDocsStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApplicantDocsStatusResponse) ProtoMessage() {}

func (x *GetApplicantDocsStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApplicantDocsStatusResponse.ProtoReflect.Descriptor instead.
func (*GetApplicantDocsStatusResponse) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{51}
}

func (x *GetApplicantDocsStatusResponse) GetIdentities() []*Identity {
	if x != nil {
		return x.Identities
	}
	return nil
}

type GetApplicantDocsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InspectionId string `protobuf:"bytes,1,opt,name=inspection_id,json=inspectionId,proto3" json:"inspection_id,omitempty"`
	DocId        string `protobuf:"bytes,2,opt,name=doc_id,json=docId,proto3" json:"doc_id,omitempty"`
}

func (x *GetApplicantDocsRequest) Reset() {
	*x = GetApplicantDocsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApplicantDocsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApplicantDocsRequest) ProtoMessage() {}

func (x *GetApplicantDocsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApplicantDocsRequest.ProtoReflect.Descriptor instead.
func (*GetApplicantDocsRequest) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{52}
}

func (x *GetApplicantDocsRequest) GetInspectionId() string {
	if x != nil {
		return x.InspectionId
	}
	return ""
}

func (x *GetApplicantDocsRequest) GetDocId() string {
	if x != nil {
		return x.DocId
	}
	return ""
}

type GetApplicantDocsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetApplicantDocsResponse) Reset() {
	*x = GetApplicantDocsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApplicantDocsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApplicantDocsResponse) ProtoMessage() {}

func (x *GetApplicantDocsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApplicantDocsResponse.ProtoReflect.Descriptor instead.
func (*GetApplicantDocsResponse) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{53}
}

func (x *GetApplicantDocsResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type RetrieveStoriesByIdsRequests struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *RetrieveStoriesByIdsRequests) Reset() {
	*x = RetrieveStoriesByIdsRequests{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveStoriesByIdsRequests) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveStoriesByIdsRequests) ProtoMessage() {}

func (x *RetrieveStoriesByIdsRequests) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveStoriesByIdsRequests.ProtoReflect.Descriptor instead.
func (*RetrieveStoriesByIdsRequests) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{54}
}

func (x *RetrieveStoriesByIdsRequests) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type RetrieveStoriesByIdsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stories []*NewsStory `protobuf:"bytes,1,rep,name=stories,proto3" json:"stories,omitempty"`
}

func (x *RetrieveStoriesByIdsResponse) Reset() {
	*x = RetrieveStoriesByIdsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveStoriesByIdsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveStoriesByIdsResponse) ProtoMessage() {}

func (x *RetrieveStoriesByIdsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveStoriesByIdsResponse.ProtoReflect.Descriptor instead.
func (*RetrieveStoriesByIdsResponse) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{55}
}

func (x *RetrieveStoriesByIdsResponse) GetStories() []*NewsStory {
	if x != nil {
		return x.Stories
	}
	return nil
}

type NewsStory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Date  string `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	Story string `protobuf:"bytes,3,opt,name=story,proto3" json:"story,omitempty"`
}

func (x *NewsStory) Reset() {
	*x = NewsStory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewsStory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewsStory) ProtoMessage() {}

func (x *NewsStory) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewsStory.ProtoReflect.Descriptor instead.
func (*NewsStory) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{56}
}

func (x *NewsStory) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NewsStory) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *NewsStory) GetStory() string {
	if x != nil {
		return x.Story
	}
	return ""
}

type GetApplicantInfoByExternalIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdDocType         string `protobuf:"bytes,1,opt,name=id_doc_type,json=idDocType,proto3" json:"id_doc_type,omitempty"`
	Country           string `protobuf:"bytes,2,opt,name=country,proto3" json:"country,omitempty"`
	FirstName         string `protobuf:"bytes,3,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	MiddleName        string `protobuf:"bytes,4,opt,name=middle_name,json=middleName,proto3" json:"middle_name,omitempty"`
	LastName          string `protobuf:"bytes,5,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	IssuedDate        string `protobuf:"bytes,6,opt,name=issued_date,json=issuedDate,proto3" json:"issued_date,omitempty"`
	ValidUntil        string `protobuf:"bytes,7,opt,name=valid_until,json=validUntil,proto3" json:"valid_until,omitempty"`
	Number            string `protobuf:"bytes,8,opt,name=number,proto3" json:"number,omitempty"`
	AdditionalNumber  string `protobuf:"bytes,9,opt,name=additional_number,json=additionalNumber,proto3" json:"additional_number,omitempty"`
	DateOfBirth       string `protobuf:"bytes,10,opt,name=date_of_birth,json=dateOfBirth,proto3" json:"date_of_birth,omitempty"`
	Email             string `protobuf:"bytes,11,opt,name=email,proto3" json:"email,omitempty"`
	Phone             string `protobuf:"bytes,12,opt,name=phone,proto3" json:"phone,omitempty"`
	Gender            string `protobuf:"bytes,13,opt,name=gender,proto3" json:"gender,omitempty"`
	PlaceOfBirth      string `protobuf:"bytes,14,opt,name=place_of_birth,json=placeOfBirth,proto3" json:"place_of_birth,omitempty"`
	Status            string `protobuf:"bytes,15,opt,name=status,proto3" json:"status,omitempty"`
	UpdatedAt         string `protobuf:"bytes,16,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Por               *POR   `protobuf:"bytes,17,opt,name=por,proto3" json:"por,omitempty"`
	RejectReason      string `protobuf:"bytes,18,opt,name=reject_reason,json=rejectReason,proto3" json:"reject_reason,omitempty"`
	Idenity           string `protobuf:"bytes,19,opt,name=idenity,proto3" json:"idenity,omitempty"`
	Reproccessing     bool   `protobuf:"varint,20,opt,name=reproccessing,proto3" json:"reproccessing,omitempty"`
	ModerationComment string `protobuf:"bytes,21,opt,name=moderation_comment,json=moderationComment,proto3" json:"moderation_comment,omitempty"`
	AttemptCount      int32  `protobuf:"varint,22,opt,name=attempt_count,json=attemptCount,proto3" json:"attempt_count,omitempty"`
}

func (x *GetApplicantInfoByExternalIdResponse) Reset() {
	*x = GetApplicantInfoByExternalIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApplicantInfoByExternalIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApplicantInfoByExternalIdResponse) ProtoMessage() {}

func (x *GetApplicantInfoByExternalIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApplicantInfoByExternalIdResponse.ProtoReflect.Descriptor instead.
func (*GetApplicantInfoByExternalIdResponse) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{57}
}

func (x *GetApplicantInfoByExternalIdResponse) GetIdDocType() string {
	if x != nil {
		return x.IdDocType
	}
	return ""
}

func (x *GetApplicantInfoByExternalIdResponse) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *GetApplicantInfoByExternalIdResponse) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *GetApplicantInfoByExternalIdResponse) GetMiddleName() string {
	if x != nil {
		return x.MiddleName
	}
	return ""
}

func (x *GetApplicantInfoByExternalIdResponse) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *GetApplicantInfoByExternalIdResponse) GetIssuedDate() string {
	if x != nil {
		return x.IssuedDate
	}
	return ""
}

func (x *GetApplicantInfoByExternalIdResponse) GetValidUntil() string {
	if x != nil {
		return x.ValidUntil
	}
	return ""
}

func (x *GetApplicantInfoByExternalIdResponse) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *GetApplicantInfoByExternalIdResponse) GetAdditionalNumber() string {
	if x != nil {
		return x.AdditionalNumber
	}
	return ""
}

func (x *GetApplicantInfoByExternalIdResponse) GetDateOfBirth() string {
	if x != nil {
		return x.DateOfBirth
	}
	return ""
}

func (x *GetApplicantInfoByExternalIdResponse) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GetApplicantInfoByExternalIdResponse) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *GetApplicantInfoByExternalIdResponse) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *GetApplicantInfoByExternalIdResponse) GetPlaceOfBirth() string {
	if x != nil {
		return x.PlaceOfBirth
	}
	return ""
}

func (x *GetApplicantInfoByExternalIdResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetApplicantInfoByExternalIdResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *GetApplicantInfoByExternalIdResponse) GetPor() *POR {
	if x != nil {
		return x.Por
	}
	return nil
}

func (x *GetApplicantInfoByExternalIdResponse) GetRejectReason() string {
	if x != nil {
		return x.RejectReason
	}
	return ""
}

func (x *GetApplicantInfoByExternalIdResponse) GetIdenity() string {
	if x != nil {
		return x.Idenity
	}
	return ""
}

func (x *GetApplicantInfoByExternalIdResponse) GetReproccessing() bool {
	if x != nil {
		return x.Reproccessing
	}
	return false
}

func (x *GetApplicantInfoByExternalIdResponse) GetModerationComment() string {
	if x != nil {
		return x.ModerationComment
	}
	return ""
}

func (x *GetApplicantInfoByExternalIdResponse) GetAttemptCount() int32 {
	if x != nil {
		return x.AttemptCount
	}
	return 0
}

type GetApplicantInfoByExternalIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExternalId string `protobuf:"bytes,1,opt,name=externalId,proto3" json:"externalId,omitempty"`
}

func (x *GetApplicantInfoByExternalIdRequest) Reset() {
	*x = GetApplicantInfoByExternalIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApplicantInfoByExternalIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApplicantInfoByExternalIdRequest) ProtoMessage() {}

func (x *GetApplicantInfoByExternalIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApplicantInfoByExternalIdRequest.ProtoReflect.Descriptor instead.
func (*GetApplicantInfoByExternalIdRequest) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{58}
}

func (x *GetApplicantInfoByExternalIdRequest) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

type GenerateTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GenerateTokenRequest) Reset() {
	*x = GenerateTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateTokenRequest) ProtoMessage() {}

func (x *GenerateTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateTokenRequest.ProtoReflect.Descriptor instead.
func (*GenerateTokenRequest) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{59}
}

func (x *GenerateTokenRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GenerateTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token  string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GenerateTokenResponse) Reset() {
	*x = GenerateTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateTokenResponse) ProtoMessage() {}

func (x *GenerateTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateTokenResponse.ProtoReflect.Descriptor instead.
func (*GenerateTokenResponse) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{60}
}

func (x *GenerateTokenResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *GenerateTokenResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetApplicantInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicantId string `protobuf:"bytes,1,opt,name=applicant_id,json=applicantId,proto3" json:"applicant_id,omitempty"`
}

func (x *GetApplicantInfoRequest) Reset() {
	*x = GetApplicantInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApplicantInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApplicantInfoRequest) ProtoMessage() {}

func (x *GetApplicantInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApplicantInfoRequest.ProtoReflect.Descriptor instead.
func (*GetApplicantInfoRequest) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{61}
}

func (x *GetApplicantInfoRequest) GetApplicantId() string {
	if x != nil {
		return x.ApplicantId
	}
	return ""
}

type GetApplicantInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdDocType        string `protobuf:"bytes,1,opt,name=id_doc_type,json=idDocType,proto3" json:"id_doc_type,omitempty"`
	Country          string `protobuf:"bytes,2,opt,name=country,proto3" json:"country,omitempty"`
	FirstName        string `protobuf:"bytes,3,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	FirstNameEn      string `protobuf:"bytes,4,opt,name=first_name_en,json=firstNameEn,proto3" json:"first_name_en,omitempty"`
	LastName         string `protobuf:"bytes,5,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	LastNameEn       string `protobuf:"bytes,6,opt,name=last_name_en,json=lastNameEn,proto3" json:"last_name_en,omitempty"`
	IssuedDate       string `protobuf:"bytes,7,opt,name=issued_date,json=issuedDate,proto3" json:"issued_date,omitempty"`
	ValidUntil       string `protobuf:"bytes,8,opt,name=valid_until,json=validUntil,proto3" json:"valid_until,omitempty"`
	Number           string `protobuf:"bytes,9,opt,name=number,proto3" json:"number,omitempty"`
	AdditionalNumber string `protobuf:"bytes,10,opt,name=additional_number,json=additionalNumber,proto3" json:"additional_number,omitempty"`
	DateOfBirth      string `protobuf:"bytes,11,opt,name=date_of_birth,json=dateOfBirth,proto3" json:"date_of_birth,omitempty"`
	PlaceOfBirthEn   string `protobuf:"bytes,12,opt,name=place_of_birth_en,json=placeOfBirthEn,proto3" json:"place_of_birth_en,omitempty"`
}

func (x *GetApplicantInfoResponse) Reset() {
	*x = GetApplicantInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApplicantInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApplicantInfoResponse) ProtoMessage() {}

func (x *GetApplicantInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApplicantInfoResponse.ProtoReflect.Descriptor instead.
func (*GetApplicantInfoResponse) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{62}
}

func (x *GetApplicantInfoResponse) GetIdDocType() string {
	if x != nil {
		return x.IdDocType
	}
	return ""
}

func (x *GetApplicantInfoResponse) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *GetApplicantInfoResponse) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *GetApplicantInfoResponse) GetFirstNameEn() string {
	if x != nil {
		return x.FirstNameEn
	}
	return ""
}

func (x *GetApplicantInfoResponse) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *GetApplicantInfoResponse) GetLastNameEn() string {
	if x != nil {
		return x.LastNameEn
	}
	return ""
}

func (x *GetApplicantInfoResponse) GetIssuedDate() string {
	if x != nil {
		return x.IssuedDate
	}
	return ""
}

func (x *GetApplicantInfoResponse) GetValidUntil() string {
	if x != nil {
		return x.ValidUntil
	}
	return ""
}

func (x *GetApplicantInfoResponse) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *GetApplicantInfoResponse) GetAdditionalNumber() string {
	if x != nil {
		return x.AdditionalNumber
	}
	return ""
}

func (x *GetApplicantInfoResponse) GetDateOfBirth() string {
	if x != nil {
		return x.DateOfBirth
	}
	return ""
}

func (x *GetApplicantInfoResponse) GetPlaceOfBirthEn() string {
	if x != nil {
		return x.PlaceOfBirthEn
	}
	return ""
}

type GetKeyStatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ric         string `protobuf:"bytes,1,opt,name=ric,proto3" json:"ric,omitempty"`
	Ticker      string `protobuf:"bytes,2,opt,name=ticker,proto3" json:"ticker,omitempty"`
	CountryCode string `protobuf:"bytes,3,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
}

func (x *GetKeyStatsRequest) Reset() {
	*x = GetKeyStatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKeyStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKeyStatsRequest) ProtoMessage() {}

func (x *GetKeyStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKeyStatsRequest.ProtoReflect.Descriptor instead.
func (*GetKeyStatsRequest) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{63}
}

func (x *GetKeyStatsRequest) GetRic() string {
	if x != nil {
		return x.Ric
	}
	return ""
}

func (x *GetKeyStatsRequest) GetTicker() string {
	if x != nil {
		return x.Ticker
	}
	return ""
}

func (x *GetKeyStatsRequest) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

type GetKeyStatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyStats *KeyStats `protobuf:"bytes,1,opt,name=key_stats,json=keyStats,proto3" json:"key_stats,omitempty"`
}

func (x *GetKeyStatsResponse) Reset() {
	*x = GetKeyStatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKeyStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKeyStatsResponse) ProtoMessage() {}

func (x *GetKeyStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKeyStatsResponse.ProtoReflect.Descriptor instead.
func (*GetKeyStatsResponse) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{64}
}

func (x *GetKeyStatsResponse) GetKeyStats() *KeyStats {
	if x != nil {
		return x.KeyStats
	}
	return nil
}

type GetKeyStatsNewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyStats *KeyStatsNew `protobuf:"bytes,1,opt,name=key_stats,json=keyStats,proto3" json:"key_stats,omitempty"`
}

func (x *GetKeyStatsNewResponse) Reset() {
	*x = GetKeyStatsNewResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKeyStatsNewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKeyStatsNewResponse) ProtoMessage() {}

func (x *GetKeyStatsNewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKeyStatsNewResponse.ProtoReflect.Descriptor instead.
func (*GetKeyStatsNewResponse) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{65}
}

func (x *GetKeyStatsNewResponse) GetKeyStats() *KeyStatsNew {
	if x != nil {
		return x.KeyStats
	}
	return nil
}

type GetBussinessSummaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ticker      string `protobuf:"bytes,1,opt,name=ticker,proto3" json:"ticker,omitempty"`
	CountryCode string `protobuf:"bytes,2,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	Lang        string `protobuf:"bytes,3,opt,name=lang,proto3" json:"lang,omitempty"`
	Ric         string `protobuf:"bytes,4,opt,name=ric,proto3" json:"ric,omitempty"`
}

func (x *GetBussinessSummaryRequest) Reset() {
	*x = GetBussinessSummaryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBussinessSummaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBussinessSummaryRequest) ProtoMessage() {}

func (x *GetBussinessSummaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBussinessSummaryRequest.ProtoReflect.Descriptor instead.
func (*GetBussinessSummaryRequest) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{66}
}

func (x *GetBussinessSummaryRequest) GetTicker() string {
	if x != nil {
		return x.Ticker
	}
	return ""
}

func (x *GetBussinessSummaryRequest) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *GetBussinessSummaryRequest) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *GetBussinessSummaryRequest) GetRic() string {
	if x != nil {
		return x.Ric
	}
	return ""
}

type GetStockNewsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
	Ric      string `protobuf:"bytes,2,opt,name=ric,proto3" json:"ric,omitempty"`
}

func (x *GetStockNewsRequest) Reset() {
	*x = GetStockNewsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStockNewsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStockNewsRequest) ProtoMessage() {}

func (x *GetStockNewsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStockNewsRequest.ProtoReflect.Descriptor instead.
func (*GetStockNewsRequest) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{67}
}

func (x *GetStockNewsRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *GetStockNewsRequest) GetRic() string {
	if x != nil {
		return x.Ric
	}
	return ""
}

type GetBussinessSummaryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BussinessSummary *BussinessSummary `protobuf:"bytes,1,opt,name=bussiness_summary,json=bussinessSummary,proto3" json:"bussiness_summary,omitempty"`
}

func (x *GetBussinessSummaryResponse) Reset() {
	*x = GetBussinessSummaryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBussinessSummaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBussinessSummaryResponse) ProtoMessage() {}

func (x *GetBussinessSummaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBussinessSummaryResponse.ProtoReflect.Descriptor instead.
func (*GetBussinessSummaryResponse) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{68}
}

func (x *GetBussinessSummaryResponse) GetBussinessSummary() *BussinessSummary {
	if x != nil {
		return x.BussinessSummary
	}
	return nil
}

type GetStockNewsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StockNews []*StockNews `protobuf:"bytes,1,rep,name=stock_news,json=stockNews,proto3" json:"stock_news,omitempty"`
}

func (x *GetStockNewsResponse) Reset() {
	*x = GetStockNewsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStockNewsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStockNewsResponse) ProtoMessage() {}

func (x *GetStockNewsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStockNewsResponse.ProtoReflect.Descriptor instead.
func (*GetStockNewsResponse) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{69}
}

func (x *GetStockNewsResponse) GetStockNews() []*StockNews {
	if x != nil {
		return x.StockNews
	}
	return nil
}

type CreateApplicantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvestorId   string        `protobuf:"bytes,1,opt,name=investor_id,json=investorId,proto3" json:"investor_id,omitempty"`
	Email        string        `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Phone        string        `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	PersonalInfo *PersonalInfo `protobuf:"bytes,4,opt,name=personal_info,json=personalInfo,proto3" json:"personal_info,omitempty"`
	Address      *Address      `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *CreateApplicantRequest) Reset() {
	*x = CreateApplicantRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateApplicantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateApplicantRequest) ProtoMessage() {}

func (x *CreateApplicantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateApplicantRequest.ProtoReflect.Descriptor instead.
func (*CreateApplicantRequest) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{70}
}

func (x *CreateApplicantRequest) GetInvestorId() string {
	if x != nil {
		return x.InvestorId
	}
	return ""
}

func (x *CreateApplicantRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CreateApplicantRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *CreateApplicantRequest) GetPersonalInfo() *PersonalInfo {
	if x != nil {
		return x.PersonalInfo
	}
	return nil
}

func (x *CreateApplicantRequest) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

type PersonalInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstName      string `protobuf:"bytes,4,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName       string `protobuf:"bytes,5,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	MiddleName     string `protobuf:"bytes,6,opt,name=middle_name,json=middleName,proto3" json:"middle_name,omitempty"`
	Gender         string `protobuf:"bytes,7,opt,name=gender,proto3" json:"gender,omitempty"`
	DateOfBirth    string `protobuf:"bytes,8,opt,name=date_of_birth,json=dateOfBirth,proto3" json:"date_of_birth,omitempty"`
	PlaceOfBirth   string `protobuf:"bytes,9,opt,name=place_of_birth,json=placeOfBirth,proto3" json:"place_of_birth,omitempty"`
	CountryOfBirth string `protobuf:"bytes,10,opt,name=country_of_birth,json=countryOfBirth,proto3" json:"country_of_birth,omitempty"`
	Country        string `protobuf:"bytes,11,opt,name=country,proto3" json:"country,omitempty"`
	Nationality    string `protobuf:"bytes,12,opt,name=nationality,proto3" json:"nationality,omitempty"`
}

func (x *PersonalInfo) Reset() {
	*x = PersonalInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PersonalInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PersonalInfo) ProtoMessage() {}

func (x *PersonalInfo) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PersonalInfo.ProtoReflect.Descriptor instead.
func (*PersonalInfo) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{71}
}

func (x *PersonalInfo) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *PersonalInfo) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *PersonalInfo) GetMiddleName() string {
	if x != nil {
		return x.MiddleName
	}
	return ""
}

func (x *PersonalInfo) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *PersonalInfo) GetDateOfBirth() string {
	if x != nil {
		return x.DateOfBirth
	}
	return ""
}

func (x *PersonalInfo) GetPlaceOfBirth() string {
	if x != nil {
		return x.PlaceOfBirth
	}
	return ""
}

func (x *PersonalInfo) GetCountryOfBirth() string {
	if x != nil {
		return x.CountryOfBirth
	}
	return ""
}

func (x *PersonalInfo) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *PersonalInfo) GetNationality() string {
	if x != nil {
		return x.Nationality
	}
	return ""
}

type Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Country    string `protobuf:"bytes,1,opt,name=country,proto3" json:"country,omitempty"`
	Postcode   string `protobuf:"bytes,2,opt,name=postcode,proto3" json:"postcode,omitempty"`
	Town       string `protobuf:"bytes,3,opt,name=town,proto3" json:"town,omitempty"`
	Street     string `protobuf:"bytes,4,opt,name=street,proto3" json:"street,omitempty"`
	State      string `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`
	FlatNumber string `protobuf:"bytes,6,opt,name=flat_number,json=flatNumber,proto3" json:"flat_number,omitempty"`
}

func (x *Address) Reset() {
	*x = Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Address) ProtoMessage() {}

func (x *Address) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Address.ProtoReflect.Descriptor instead.
func (*Address) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{72}
}

func (x *Address) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Address) GetPostcode() string {
	if x != nil {
		return x.Postcode
	}
	return ""
}

func (x *Address) GetTown() string {
	if x != nil {
		return x.Town
	}
	return ""
}

func (x *Address) GetStreet() string {
	if x != nil {
		return x.Street
	}
	return ""
}

func (x *Address) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Address) GetFlatNumber() string {
	if x != nil {
		return x.FlatNumber
	}
	return ""
}

type CreateApplicantResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationId string `protobuf:"bytes,1,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
	ReviewStatus  string `protobuf:"bytes,2,opt,name=review_status,json=reviewStatus,proto3" json:"review_status,omitempty"`
}

func (x *CreateApplicantResponse) Reset() {
	*x = CreateApplicantResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateApplicantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateApplicantResponse) ProtoMessage() {}

func (x *CreateApplicantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateApplicantResponse.ProtoReflect.Descriptor instead.
func (*CreateApplicantResponse) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{73}
}

func (x *CreateApplicantResponse) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

func (x *CreateApplicantResponse) GetReviewStatus() string {
	if x != nil {
		return x.ReviewStatus
	}
	return ""
}

type UploadDocumentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata  *UploadDocumentMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	MinioName string                  `protobuf:"bytes,2,opt,name=minio_name,json=minioName,proto3" json:"minio_name,omitempty"`
}

func (x *UploadDocumentRequest) Reset() {
	*x = UploadDocumentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadDocumentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadDocumentRequest) ProtoMessage() {}

func (x *UploadDocumentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadDocumentRequest.ProtoReflect.Descriptor instead.
func (*UploadDocumentRequest) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{74}
}

func (x *UploadDocumentRequest) GetMetadata() *UploadDocumentMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *UploadDocumentRequest) GetMinioName() string {
	if x != nil {
		return x.MinioName
	}
	return ""
}

type UploadDocumentMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvestorId   string `protobuf:"bytes,1,opt,name=investor_id,json=investorId,proto3" json:"investor_id,omitempty"`
	DocumentType string `protobuf:"bytes,2,opt,name=document_type,json=documentType,proto3" json:"document_type,omitempty"`
	DocumentName string `protobuf:"bytes,3,opt,name=document_name,json=documentName,proto3" json:"document_name,omitempty"`
}

func (x *UploadDocumentMetadata) Reset() {
	*x = UploadDocumentMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadDocumentMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadDocumentMetadata) ProtoMessage() {}

func (x *UploadDocumentMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadDocumentMetadata.ProtoReflect.Descriptor instead.
func (*UploadDocumentMetadata) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{75}
}

func (x *UploadDocumentMetadata) GetInvestorId() string {
	if x != nil {
		return x.InvestorId
	}
	return ""
}

func (x *UploadDocumentMetadata) GetDocumentType() string {
	if x != nil {
		return x.DocumentType
	}
	return ""
}

func (x *UploadDocumentMetadata) GetDocumentName() string {
	if x != nil {
		return x.DocumentName
	}
	return ""
}

type UploadDocumentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Errors   string `protobuf:"bytes,1,opt,name=errors,proto3" json:"errors,omitempty"`
	Warnings string `protobuf:"bytes,2,opt,name=warnings,proto3" json:"warnings,omitempty"`
}

func (x *UploadDocumentResponse) Reset() {
	*x = UploadDocumentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadDocumentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadDocumentResponse) ProtoMessage() {}

func (x *UploadDocumentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadDocumentResponse.ProtoReflect.Descriptor instead.
func (*UploadDocumentResponse) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{76}
}

func (x *UploadDocumentResponse) GetErrors() string {
	if x != nil {
		return x.Errors
	}
	return ""
}

func (x *UploadDocumentResponse) GetWarnings() string {
	if x != nil {
		return x.Warnings
	}
	return ""
}

type GetInstrumentHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SymbolId  string `protobuf:"bytes,1,opt,name=symbol_id,json=symbolId,proto3" json:"symbol_id,omitempty"`
	RangeType string `protobuf:"bytes,2,opt,name=range_type,json=rangeType,proto3" json:"range_type,omitempty"`
}

func (x *GetInstrumentHistoryRequest) Reset() {
	*x = GetInstrumentHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInstrumentHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstrumentHistoryRequest) ProtoMessage() {}

func (x *GetInstrumentHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInstrumentHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetInstrumentHistoryRequest) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{77}
}

func (x *GetInstrumentHistoryRequest) GetSymbolId() string {
	if x != nil {
		return x.SymbolId
	}
	return ""
}

func (x *GetInstrumentHistoryRequest) GetRangeType() string {
	if x != nil {
		return x.RangeType
	}
	return ""
}

type GetInstrumentByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstrumentId string `protobuf:"bytes,1,opt,name=instrument_id,json=instrumentId,proto3" json:"instrument_id,omitempty"`
	InvestorId   string `protobuf:"bytes,2,opt,name=investor_id,json=investorId,proto3" json:"investor_id,omitempty"`
}

func (x *GetInstrumentByIDRequest) Reset() {
	*x = GetInstrumentByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInstrumentByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstrumentByIDRequest) ProtoMessage() {}

func (x *GetInstrumentByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInstrumentByIDRequest.ProtoReflect.Descriptor instead.
func (*GetInstrumentByIDRequest) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{78}
}

func (x *GetInstrumentByIDRequest) GetInstrumentId() string {
	if x != nil {
		return x.InstrumentId
	}
	return ""
}

func (x *GetInstrumentByIDRequest) GetInvestorId() string {
	if x != nil {
		return x.InvestorId
	}
	return ""
}

type GetInstrumentHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instruents []*InstrumentHistory `protobuf:"bytes,1,rep,name=instruents,proto3" json:"instruents,omitempty"`
}

func (x *GetInstrumentHistoryResponse) Reset() {
	*x = GetInstrumentHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInstrumentHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstrumentHistoryResponse) ProtoMessage() {}

func (x *GetInstrumentHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInstrumentHistoryResponse.ProtoReflect.Descriptor instead.
func (*GetInstrumentHistoryResponse) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{79}
}

func (x *GetInstrumentHistoryResponse) GetInstruents() []*InstrumentHistory {
	if x != nil {
		return x.Instruents
	}
	return nil
}

type InstrumentHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SymbolId  string `protobuf:"bytes,1,opt,name=symbol_id,json=symbolId,proto3" json:"symbol_id,omitempty"`
	Timestamp int64  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Open      string `protobuf:"bytes,3,opt,name=open,proto3" json:"open,omitempty"`
	Close     string `protobuf:"bytes,4,opt,name=close,proto3" json:"close,omitempty"`
	High      string `protobuf:"bytes,5,opt,name=high,proto3" json:"high,omitempty"`
	Low       string `protobuf:"bytes,6,opt,name=low,proto3" json:"low,omitempty"`
	Volume    string `protobuf:"bytes,7,opt,name=volume,proto3" json:"volume,omitempty"`
	CreatedAt string `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *InstrumentHistory) Reset() {
	*x = InstrumentHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstrumentHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstrumentHistory) ProtoMessage() {}

func (x *InstrumentHistory) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstrumentHistory.ProtoReflect.Descriptor instead.
func (*InstrumentHistory) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{80}
}

func (x *InstrumentHistory) GetSymbolId() string {
	if x != nil {
		return x.SymbolId
	}
	return ""
}

func (x *InstrumentHistory) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *InstrumentHistory) GetOpen() string {
	if x != nil {
		return x.Open
	}
	return ""
}

func (x *InstrumentHistory) GetClose() string {
	if x != nil {
		return x.Close
	}
	return ""
}

func (x *InstrumentHistory) GetHigh() string {
	if x != nil {
		return x.High
	}
	return ""
}

func (x *InstrumentHistory) GetLow() string {
	if x != nil {
		return x.Low
	}
	return ""
}

func (x *InstrumentHistory) GetVolume() string {
	if x != nil {
		return x.Volume
	}
	return ""
}

func (x *InstrumentHistory) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type GetByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetByIDRequest) Reset() {
	*x = GetByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetByIDRequest) ProtoMessage() {}

func (x *GetByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetByIDRequest.ProtoReflect.Descriptor instead.
func (*GetByIDRequest) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{81}
}

func (x *GetByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type FilterInstrumentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count       int32               `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Instruments []*FilterInstrument `protobuf:"bytes,2,rep,name=instruments,proto3" json:"instruments,omitempty"`
}

func (x *FilterInstrumentsResponse) Reset() {
	*x = FilterInstrumentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterInstrumentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterInstrumentsResponse) ProtoMessage() {}

func (x *FilterInstrumentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterInstrumentsResponse.ProtoReflect.Descriptor instead.
func (*FilterInstrumentsResponse) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{82}
}

func (x *FilterInstrumentsResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *FilterInstrumentsResponse) GetInstruments() []*FilterInstrument {
	if x != nil {
		return x.Instruments
	}
	return nil
}

type FilterInstrumentsByFindRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Search      string              `protobuf:"bytes,1,opt,name=search,proto3" json:"search,omitempty"`
	Instruments []*FilterInstrument `protobuf:"bytes,2,rep,name=instruments,proto3" json:"instruments,omitempty"`
}

func (x *FilterInstrumentsByFindRequest) Reset() {
	*x = FilterInstrumentsByFindRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterInstrumentsByFindRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterInstrumentsByFindRequest) ProtoMessage() {}

func (x *FilterInstrumentsByFindRequest) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterInstrumentsByFindRequest.ProtoReflect.Descriptor instead.
func (*FilterInstrumentsByFindRequest) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{83}
}

func (x *FilterInstrumentsByFindRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *FilterInstrumentsByFindRequest) GetInstruments() []*FilterInstrument {
	if x != nil {
		return x.Instruments
	}
	return nil
}

type FilterInstrument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Ticker        string `protobuf:"bytes,2,opt,name=ticker,proto3" json:"ticker,omitempty"`
	Icon          string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
	Name          string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Ric           string `protobuf:"bytes,5,opt,name=ric,proto3" json:"ric,omitempty"`
	CountryCode   string `protobuf:"bytes,6,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	Active        bool   `protobuf:"varint,7,opt,name=active,proto3" json:"active,omitempty"`
	Group         string `protobuf:"bytes,8,opt,name=group,proto3" json:"group,omitempty"`
	Exchange      string `protobuf:"bytes,9,opt,name=exchange,proto3" json:"exchange,omitempty"`
	Expiration    int64  `protobuf:"varint,10,opt,name=expiration,proto3" json:"expiration,omitempty"`
	Country       string `protobuf:"bytes,11,opt,name=country,proto3" json:"country,omitempty"`
	Type          string `protobuf:"bytes,12,opt,name=type,proto3" json:"type,omitempty"`
	Currency      string `protobuf:"bytes,13,opt,name=currency,proto3" json:"currency,omitempty"`
	Mpi           string `protobuf:"bytes,14,opt,name=mpi,proto3" json:"mpi,omitempty"`
	Sedol         string `protobuf:"bytes,15,opt,name=sedol,proto3" json:"sedol,omitempty"`
	Isin          string `protobuf:"bytes,16,opt,name=isin,proto3" json:"isin,omitempty"`
	Cusip         string `protobuf:"bytes,17,opt,name=cusip,proto3" json:"cusip,omitempty"`
	Figi          string `protobuf:"bytes,18,opt,name=figi,proto3" json:"figi,omitempty"`
	Description   string `protobuf:"bytes,19,opt,name=description,proto3" json:"description,omitempty"`
	Dat           string `protobuf:"bytes,20,opt,name=dat,proto3" json:"dat,omitempty"`
	AssetCategory string `protobuf:"bytes,21,opt,name=asset_category,json=assetCategory,proto3" json:"asset_category,omitempty"`
}

func (x *FilterInstrument) Reset() {
	*x = FilterInstrument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterInstrument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterInstrument) ProtoMessage() {}

func (x *FilterInstrument) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterInstrument.ProtoReflect.Descriptor instead.
func (*FilterInstrument) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{84}
}

func (x *FilterInstrument) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FilterInstrument) GetTicker() string {
	if x != nil {
		return x.Ticker
	}
	return ""
}

func (x *FilterInstrument) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *FilterInstrument) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FilterInstrument) GetRic() string {
	if x != nil {
		return x.Ric
	}
	return ""
}

func (x *FilterInstrument) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *FilterInstrument) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *FilterInstrument) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *FilterInstrument) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *FilterInstrument) GetExpiration() int64 {
	if x != nil {
		return x.Expiration
	}
	return 0
}

func (x *FilterInstrument) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *FilterInstrument) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *FilterInstrument) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *FilterInstrument) GetMpi() string {
	if x != nil {
		return x.Mpi
	}
	return ""
}

func (x *FilterInstrument) GetSedol() string {
	if x != nil {
		return x.Sedol
	}
	return ""
}

func (x *FilterInstrument) GetIsin() string {
	if x != nil {
		return x.Isin
	}
	return ""
}

func (x *FilterInstrument) GetCusip() string {
	if x != nil {
		return x.Cusip
	}
	return ""
}

func (x *FilterInstrument) GetFigi() string {
	if x != nil {
		return x.Figi
	}
	return ""
}

func (x *FilterInstrument) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *FilterInstrument) GetDat() string {
	if x != nil {
		return x.Dat
	}
	return ""
}

func (x *FilterInstrument) GetAssetCategory() string {
	if x != nil {
		return x.AssetCategory
	}
	return ""
}

type GetExchangesByTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *GetExchangesByTypeRequest) Reset() {
	*x = GetExchangesByTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExchangesByTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExchangesByTypeRequest) ProtoMessage() {}

func (x *GetExchangesByTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExchangesByTypeRequest.ProtoReflect.Descriptor instead.
func (*GetExchangesByTypeRequest) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{85}
}

func (x *GetExchangesByTypeRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type FilterInstrumentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group                 string   `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	ExchangeId            string   `protobuf:"bytes,2,opt,name=exchange_id,json=exchangeId,proto3" json:"exchange_id,omitempty"`
	Type                  string   `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Name                  string   `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Id                    string   `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`
	Limit                 int32    `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	Page                  int32    `protobuf:"varint,7,opt,name=page,proto3" json:"page,omitempty"`
	Ids                   []string `protobuf:"bytes,8,rep,name=ids,proto3" json:"ids,omitempty"`
	IsHalal               bool     `protobuf:"varint,9,opt,name=isHalal,proto3" json:"isHalal,omitempty"`
	SymbolType            []string `protobuf:"bytes,10,rep,name=symbol_type,json=symbolType,proto3" json:"symbol_type,omitempty"`
	IsPreferred           bool     `protobuf:"varint,11,opt,name=is_preferred,json=isPreferred,proto3" json:"is_preferred,omitempty"`
	Price                 string   `protobuf:"bytes,12,opt,name=price,proto3" json:"price,omitempty"`
	De                    string   `protobuf:"bytes,13,opt,name=de,proto3" json:"de,omitempty"`
	CurrentRatio          string   `protobuf:"bytes,14,opt,name=current_ratio,json=currentRatio,proto3" json:"current_ratio,omitempty"`
	QuickRatio            string   `protobuf:"bytes,15,opt,name=quick_ratio,json=quickRatio,proto3" json:"quick_ratio,omitempty"`
	TotalAssets           string   `protobuf:"bytes,16,opt,name=total_assets,json=totalAssets,proto3" json:"total_assets,omitempty"`
	ChangeMidPrice        string   `protobuf:"bytes,17,opt,name=change_mid_price,json=changeMidPrice,proto3" json:"change_mid_price,omitempty"`
	MidPrice              string   `protobuf:"bytes,18,opt,name=mid_price,json=midPrice,proto3" json:"mid_price,omitempty"`
	MidPriceRange         string   `protobuf:"bytes,19,opt,name=mid_price_range,json=midPriceRange,proto3" json:"mid_price_range,omitempty"`
	PriceAndEarningsRange string   `protobuf:"bytes,20,opt,name=price_and_earnings_range,json=priceAndEarningsRange,proto3" json:"price_and_earnings_range,omitempty"`
	DeRange               string   `protobuf:"bytes,21,opt,name=de_range,json=deRange,proto3" json:"de_range,omitempty"`
	CurrentRatioRange     string   `protobuf:"bytes,22,opt,name=current_ratio_range,json=currentRatioRange,proto3" json:"current_ratio_range,omitempty"`
	QuickRatioRange       string   `protobuf:"bytes,23,opt,name=quick_ratio_range,json=quickRatioRange,proto3" json:"quick_ratio_range,omitempty"`
	TotalAssetsRange      string   `protobuf:"bytes,24,opt,name=total_assets_range,json=totalAssetsRange,proto3" json:"total_assets_range,omitempty"`
	StockType             string   `protobuf:"bytes,25,opt,name=stock_type,json=stockType,proto3" json:"stock_type,omitempty"`
	Industry              string   `protobuf:"bytes,26,opt,name=industry,proto3" json:"industry,omitempty"`
}

func (x *FilterInstrumentsRequest) Reset() {
	*x = FilterInstrumentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterInstrumentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterInstrumentsRequest) ProtoMessage() {}

func (x *FilterInstrumentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterInstrumentsRequest.ProtoReflect.Descriptor instead.
func (*FilterInstrumentsRequest) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{86}
}

func (x *FilterInstrumentsRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *FilterInstrumentsRequest) GetExchangeId() string {
	if x != nil {
		return x.ExchangeId
	}
	return ""
}

func (x *FilterInstrumentsRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *FilterInstrumentsRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FilterInstrumentsRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FilterInstrumentsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *FilterInstrumentsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FilterInstrumentsRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *FilterInstrumentsRequest) GetIsHalal() bool {
	if x != nil {
		return x.IsHalal
	}
	return false
}

func (x *FilterInstrumentsRequest) GetSymbolType() []string {
	if x != nil {
		return x.SymbolType
	}
	return nil
}

func (x *FilterInstrumentsRequest) GetIsPreferred() bool {
	if x != nil {
		return x.IsPreferred
	}
	return false
}

func (x *FilterInstrumentsRequest) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *FilterInstrumentsRequest) GetDe() string {
	if x != nil {
		return x.De
	}
	return ""
}

func (x *FilterInstrumentsRequest) GetCurrentRatio() string {
	if x != nil {
		return x.CurrentRatio
	}
	return ""
}

func (x *FilterInstrumentsRequest) GetQuickRatio() string {
	if x != nil {
		return x.QuickRatio
	}
	return ""
}

func (x *FilterInstrumentsRequest) GetTotalAssets() string {
	if x != nil {
		return x.TotalAssets
	}
	return ""
}

func (x *FilterInstrumentsRequest) GetChangeMidPrice() string {
	if x != nil {
		return x.ChangeMidPrice
	}
	return ""
}

func (x *FilterInstrumentsRequest) GetMidPrice() string {
	if x != nil {
		return x.MidPrice
	}
	return ""
}

func (x *FilterInstrumentsRequest) GetMidPriceRange() string {
	if x != nil {
		return x.MidPriceRange
	}
	return ""
}

func (x *FilterInstrumentsRequest) GetPriceAndEarningsRange() string {
	if x != nil {
		return x.PriceAndEarningsRange
	}
	return ""
}

func (x *FilterInstrumentsRequest) GetDeRange() string {
	if x != nil {
		return x.DeRange
	}
	return ""
}

func (x *FilterInstrumentsRequest) GetCurrentRatioRange() string {
	if x != nil {
		return x.CurrentRatioRange
	}
	return ""
}

func (x *FilterInstrumentsRequest) GetQuickRatioRange() string {
	if x != nil {
		return x.QuickRatioRange
	}
	return ""
}

func (x *FilterInstrumentsRequest) GetTotalAssetsRange() string {
	if x != nil {
		return x.TotalAssetsRange
	}
	return ""
}

func (x *FilterInstrumentsRequest) GetStockType() string {
	if x != nil {
		return x.StockType
	}
	return ""
}

func (x *FilterInstrumentsRequest) GetIndustry() string {
	if x != nil {
		return x.Industry
	}
	return ""
}

type GetShortDetailsByStocksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbols []string `protobuf:"bytes,1,rep,name=symbols,proto3" json:"symbols,omitempty"`
}

func (x *GetShortDetailsByStocksRequest) Reset() {
	*x = GetShortDetailsByStocksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShortDetailsByStocksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShortDetailsByStocksRequest) ProtoMessage() {}

func (x *GetShortDetailsByStocksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShortDetailsByStocksRequest.ProtoReflect.Descriptor instead.
func (*GetShortDetailsByStocksRequest) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{87}
}

func (x *GetShortDetailsByStocksRequest) GetSymbols() []string {
	if x != nil {
		return x.Symbols
	}
	return nil
}

type GetShortDetailsByStocksData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Icon string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
}

func (x *GetShortDetailsByStocksData) Reset() {
	*x = GetShortDetailsByStocksData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShortDetailsByStocksData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShortDetailsByStocksData) ProtoMessage() {}

func (x *GetShortDetailsByStocksData) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShortDetailsByStocksData.ProtoReflect.Descriptor instead.
func (*GetShortDetailsByStocksData) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{88}
}

func (x *GetShortDetailsByStocksData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetShortDetailsByStocksData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetShortDetailsByStocksData) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

type GetShortDetailsByStocksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instruments []*GetShortDetailsByStocksData `protobuf:"bytes,1,rep,name=instruments,proto3" json:"instruments,omitempty"`
}

func (x *GetShortDetailsByStocksResponse) Reset() {
	*x = GetShortDetailsByStocksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShortDetailsByStocksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShortDetailsByStocksResponse) ProtoMessage() {}

func (x *GetShortDetailsByStocksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShortDetailsByStocksResponse.ProtoReflect.Descriptor instead.
func (*GetShortDetailsByStocksResponse) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{89}
}

func (x *GetShortDetailsByStocksResponse) GetInstruments() []*GetShortDetailsByStocksData {
	if x != nil {
		return x.Instruments
	}
	return nil
}

type GetSymbolIdsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *GetSymbolIdsResponse) Reset() {
	*x = GetSymbolIdsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSymbolIdsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSymbolIdsResponse) ProtoMessage() {}

func (x *GetSymbolIdsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSymbolIdsResponse.ProtoReflect.Descriptor instead.
func (*GetSymbolIdsResponse) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{90}
}

func (x *GetSymbolIdsResponse) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type AddFavouriteInstrumentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvestorId       string `protobuf:"bytes,1,opt,name=investor_id,json=investorId,proto3" json:"investor_id,omitempty"`
	InstrumentId     string `protobuf:"bytes,2,opt,name=instrument_id,json=instrumentId,proto3" json:"instrument_id,omitempty"`
	InstrumentTicker string `protobuf:"bytes,3,opt,name=instrument_ticker,json=instrumentTicker,proto3" json:"instrument_ticker,omitempty"`
}

func (x *AddFavouriteInstrumentRequest) Reset() {
	*x = AddFavouriteInstrumentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFavouriteInstrumentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFavouriteInstrumentRequest) ProtoMessage() {}

func (x *AddFavouriteInstrumentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFavouriteInstrumentRequest.ProtoReflect.Descriptor instead.
func (*AddFavouriteInstrumentRequest) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{91}
}

func (x *AddFavouriteInstrumentRequest) GetInvestorId() string {
	if x != nil {
		return x.InvestorId
	}
	return ""
}

func (x *AddFavouriteInstrumentRequest) GetInstrumentId() string {
	if x != nil {
		return x.InstrumentId
	}
	return ""
}

func (x *AddFavouriteInstrumentRequest) GetInstrumentTicker() string {
	if x != nil {
		return x.InstrumentTicker
	}
	return ""
}

type InvestorId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvestorId string `protobuf:"bytes,1,opt,name=investor_id,json=investorId,proto3" json:"investor_id,omitempty"`
}

func (x *InvestorId) Reset() {
	*x = InvestorId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvestorId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvestorId) ProtoMessage() {}

func (x *InvestorId) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvestorId.ProtoReflect.Descriptor instead.
func (*InvestorId) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{92}
}

func (x *InvestorId) GetInvestorId() string {
	if x != nil {
		return x.InvestorId
	}
	return ""
}

type FavouriteInstrumentList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instruments []*FavouriteInstrument `protobuf:"bytes,1,rep,name=instruments,proto3" json:"instruments,omitempty"`
}

func (x *FavouriteInstrumentList) Reset() {
	*x = FavouriteInstrumentList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FavouriteInstrumentList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavouriteInstrumentList) ProtoMessage() {}

func (x *FavouriteInstrumentList) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavouriteInstrumentList.ProtoReflect.Descriptor instead.
func (*FavouriteInstrumentList) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{93}
}

func (x *FavouriteInstrumentList) GetInstruments() []*FavouriteInstrument {
	if x != nil {
		return x.Instruments
	}
	return nil
}

type IsInstrumentFavouriteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsFavourite bool `protobuf:"varint,1,opt,name=is_favourite,json=isFavourite,proto3" json:"is_favourite,omitempty"`
}

func (x *IsInstrumentFavouriteResponse) Reset() {
	*x = IsInstrumentFavouriteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsInstrumentFavouriteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsInstrumentFavouriteResponse) ProtoMessage() {}

func (x *IsInstrumentFavouriteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsInstrumentFavouriteResponse.ProtoReflect.Descriptor instead.
func (*IsInstrumentFavouriteResponse) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{94}
}

func (x *IsInstrumentFavouriteResponse) GetIsFavourite() bool {
	if x != nil {
		return x.IsFavourite
	}
	return false
}

type GetLastCheckedInstrumentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvestorId string `protobuf:"bytes,1,opt,name=investor_id,json=investorId,proto3" json:"investor_id,omitempty"`
	Page       int32  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Limit      int32  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetLastCheckedInstrumentsRequest) Reset() {
	*x = GetLastCheckedInstrumentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLastCheckedInstrumentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLastCheckedInstrumentsRequest) ProtoMessage() {}

func (x *GetLastCheckedInstrumentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLastCheckedInstrumentsRequest.ProtoReflect.Descriptor instead.
func (*GetLastCheckedInstrumentsRequest) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{95}
}

func (x *GetLastCheckedInstrumentsRequest) GetInvestorId() string {
	if x != nil {
		return x.InvestorId
	}
	return ""
}

func (x *GetLastCheckedInstrumentsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetLastCheckedInstrumentsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type UpdateUserFromWebRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *UpdateUserFromWebRequest) Reset() {
	*x = UpdateUserFromWebRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integration_service_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserFromWebRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserFromWebRequest) ProtoMessage() {}

func (x *UpdateUserFromWebRequest) ProtoReflect() protoreflect.Message {
	mi := &file_integration_service_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserFromWebRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserFromWebRequest) Descriptor() ([]byte, []int) {
	return file_integration_service_proto_rawDescGZIP(), []int{96}
}

func (x *UpdateUserFromWebRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UpdateUserFromWebRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_integration_service_proto protoreflect.FileDescriptor

var file_integration_service_proto_rawDesc = []byte{
	0x0a, 0x19, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x1a, 0x11, 0x66, 0x69, 0x78, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x32, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x75, 0x73, 0x74,
	0x72, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x64, 0x75, 0x73,
	0x74, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x59, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x49, 0x6e,
	0x64, 0x75, 0x73, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x40, 0x0a, 0x0a, 0x69, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e,
	0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x69, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x22, 0x3e, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x72, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72,
	0x49, 0x64, 0x22, 0x59, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x75, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x22, 0x3f, 0x0a,
	0x1c, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x72, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x22, 0x76,
	0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x69, 0x6c, 0x65,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x54, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x69, 0x6c, 0x65, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x69, 0x6c, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x11, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x69, 0x6c, 0x65, 0x51, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x57, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x69,
	0x6c, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x22,
	0x21, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x55, 0x70, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x45, 0x0a, 0x0d, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x5a, 0x0a, 0x1e, 0x47, 0x65, 0x74,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x55, 0x70, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x74,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x29, 0x0a, 0x11, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x22, 0x24, 0x0a, 0x12, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xaf, 0x01, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x57, 0x65, 0x62, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2a,
	0x0a, 0x11, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x4f, 0x66, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x22, 0x2d, 0x0a, 0x1b, 0x49, 0x6e, 0x73, 0x65,
	0x72, 0x74, 0x53, 0x75, 0x6d, 0x73, 0x75, 0x62, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xb8, 0x01, 0x0a, 0x14, 0x49, 0x6e, 0x73, 0x65,
	0x72, 0x74, 0x53, 0x75, 0x6d, 0x73, 0x75, 0x62, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x22, 0x65, 0x0a, 0x1c, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x53, 0x75, 0x6d, 0x73,
	0x75, 0x62, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x45, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72,
	0x74, 0x53, 0x75, 0x6d, 0x73, 0x75, 0x62, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x51, 0x0a, 0x1a, 0x47, 0x65, 0x74,
	0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x53, 0x49, 0x44,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x73, 0x69, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x73, 0x69, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x69,
	0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x22, 0x83, 0x01, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x22, 0x60, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x65, 0x74, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a,
	0x0d, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x65,
	0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x0c, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x22, 0xb4, 0x04, 0x0a, 0x0b, 0x53, 0x74, 0x72, 0x65, 0x65, 0x74, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65,
	0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6e,
	0x64, 0x5f, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x65, 0x6e, 0x64, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12,
	0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65,
	0x12, 0x26, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x2b, 0x0a, 0x11, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x38,
	0x0a, 0x18, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x16, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3a, 0x0a, 0x19, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x73, 0x76, 0x70, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x72, 0x73, 0x76,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x44, 0x0a, 0x21, 0x47,
	0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x49,
	0x64, 0x22, 0x94, 0x01, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f,
	0x72, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x0f, 0x69, 0x6e, 0x76, 0x65,
	0x73, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2f, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x0e, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x2e, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x49,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x33, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x49,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x6e, 0x0a,
	0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0xb0, 0x02,
	0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0a, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74,
	0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x76,
	0x65, 0x73, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73,
	0x61, 0x6c, 0x65, 0x73, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x49, 0x64,
	0x22, 0x4d, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74,
	0x6f, 0x72, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x22,
	0x2d, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f,
	0x72, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2c,
	0x0a, 0x1a, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x4f, 0x6e, 0x65,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x56, 0x0a, 0x18,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x63,
	0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x63,
	0x6b, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74,
	0x6f, 0x72, 0x49, 0x64, 0x22, 0x74, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x73,
	0x74, 0x6f, 0x72, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x58, 0x0a, 0x0f, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0e, 0x69, 0x6e, 0x76, 0x65,
	0x73, 0x74, 0x6f, 0x72, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x22, 0xb0, 0x02, 0x0a, 0x1b, 0x47,
	0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x4f, 0x6e, 0x65, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0a, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23,
	0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74,
	0x6f, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x61, 0x6c, 0x65,
	0x73, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x49, 0x64, 0x22, 0xe6, 0x02,
	0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0a, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x65,
	0x73, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x61,
	0x6c, 0x65, 0x73, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x22, 0x2d, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x36, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x72,
	0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x69, 0x63, 0x22, 0xaa, 0x04,
	0x0a, 0x23, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x12, 0x3a, 0x0a, 0x19, 0x63, 0x65, 0x72, 0x66, 0x69, 0x74, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x73, 0x5f, 0x6f, 0x66, 0x5f, 0x64, 0x65, 0x73, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x63, 0x65, 0x72, 0x66, 0x69, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x73, 0x4f, 0x66, 0x44, 0x65, 0x73, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x73, 0x12, 0x27,
	0x0a, 0x0f, 0x64, 0x65, 0x62, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x62, 0x74, 0x53, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x79, 0x5f, 0x62, 0x69, 0x6c, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x42, 0x69, 0x6c, 0x6c, 0x73, 0x12, 0x22,
	0x0a, 0x0d, 0x62, 0x6f, 0x6e, 0x64, 0x73, 0x5f, 0x65, 0x5f, 0x62, 0x6f, 0x6e, 0x64, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x6f, 0x6e, 0x64, 0x73, 0x45, 0x42, 0x6f, 0x6e,
	0x64, 0x73, 0x12, 0x36, 0x0a, 0x17, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x5f, 0x66,
	0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x15, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x46, 0x69, 0x6e,
	0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x6f,
	0x6e, 0x65, 0x79, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x66, 0x75, 0x6e, 0x64, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x61, 0x6e, 0x73, 0x5f, 0x6d, 0x61,
	0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x61, 0x6e, 0x73, 0x4d,
	0x61, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x65, 0x72,
	0x6d, 0x5f, 0x64, 0x65, 0x62, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x68,
	0x6f, 0x72, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x44, 0x65, 0x62, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x6c,
	0x6f, 0x6e, 0x67, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x5f, 0x64, 0x65, 0x62, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x6f, 0x6e, 0x67, 0x54, 0x65, 0x72, 0x6d, 0x44, 0x65, 0x62,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x62, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x65, 0x62, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x72,
	0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x22, 0x69, 0x0a, 0x16, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4b, 0x59, 0x43, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0x29, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b,
	0x59, 0x43, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0xc2, 0x05, 0x0a, 0x2f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x65, 0x6e, 0x69, 0x74, 0x69, 0x76, 0x65, 0x46,
	0x72, 0x6f, 0x6d, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x50, 0x0a, 0x26,
	0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x64, 0x61, 0x69, 0x6c, 0x74, 0x79, 0x5f, 0x76,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x31,
	0x30, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x20, 0x61, 0x76,
	0x65, 0x72, 0x61, 0x67, 0x65, 0x44, 0x61, 0x69, 0x6c, 0x74, 0x79, 0x56, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x46, 0x6f, 0x72, 0x4c, 0x61, 0x73, 0x74, 0x31, 0x30, 0x44, 0x61, 0x79, 0x73, 0x12, 0x33,
	0x0a, 0x15, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x63, 0x61, 0x70, 0x69, 0x74, 0x61, 0x6c,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x14, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x43, 0x61, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x12, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x5f, 0x31, 0x5f, 0x64, 0x61, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x31, 0x44, 0x61, 0x79,
	0x12, 0x2b, 0x0a, 0x12, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x5f, 0x35, 0x5f, 0x64, 0x61, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x35, 0x44, 0x61, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x65, 0x70, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x65, 0x70, 0x73, 0x12,
	0x2e, 0x0a, 0x13, 0x64, 0x69, 0x76, 0x69, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x65, 0x72,
	0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x64, 0x69,
	0x76, 0x69, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x53, 0x68, 0x61, 0x72, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52,
	0x61, 0x74, 0x69, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x71, 0x75, 0x69, 0x63, 0x6b, 0x5f, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x71, 0x75, 0x69, 0x63, 0x6b,
	0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x74, 0x5f, 0x64, 0x65, 0x62, 0x74,
	0x5f, 0x65, 0x71, 0x75, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0e, 0x6c, 0x74, 0x44, 0x65, 0x62, 0x74, 0x45, 0x71, 0x75, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x72, 0x6f, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x72, 0x6f,
	0x61, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x6f, 0x69, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03,
	0x72, 0x6f, 0x69, 0x12, 0x0e, 0x0a, 0x02, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x02, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x62,
	0x74, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x74, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x65, 0x62, 0x74, 0x45, 0x71, 0x75, 0x69, 0x74, 0x79, 0x12,
	0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x65, 0x74,
	0x61, 0x18, 0x11, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x62, 0x65, 0x74, 0x61, 0x12, 0x12, 0x0a,
	0x04, 0x65, 0x62, 0x69, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x65, 0x62, 0x69,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x63, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x04, 0x72, 0x6f, 0x63, 0x65, 0x22, 0xbe, 0x06, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x61, 0x74, 0x69, 0x6f, 0x73, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x6f, 0x64, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x50, 0x0a, 0x26, 0x61, 0x76, 0x65, 0x72,
	0x61, 0x67, 0x65, 0x5f, 0x64, 0x61, 0x69, 0x6c, 0x74, 0x79, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x31, 0x30, 0x5f, 0x64, 0x61,
	0x79, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x20, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67,
	0x65, 0x44, 0x61, 0x69, 0x6c, 0x74, 0x79, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x46, 0x6f, 0x72,
	0x4c, 0x61, 0x73, 0x74, 0x31, 0x30, 0x44, 0x61, 0x79, 0x73, 0x12, 0x33, 0x0a, 0x15, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x5f, 0x63, 0x61, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x14, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x43, 0x61, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2b, 0x0a, 0x12, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f,
	0x31, 0x5f, 0x64, 0x61, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x31, 0x44, 0x61, 0x79, 0x12, 0x2b, 0x0a, 0x12,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x35, 0x5f, 0x64,
	0x61, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x35, 0x44, 0x61, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x70, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x65, 0x70, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x64,
	0x69, 0x76, 0x69, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x64, 0x69, 0x76, 0x69, 0x64, 0x69,
	0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x53, 0x68, 0x61, 0x72, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6f,
	0x12, 0x1f, 0x0a, 0x0b, 0x71, 0x75, 0x69, 0x63, 0x6b, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x71, 0x75, 0x69, 0x63, 0x6b, 0x52, 0x61, 0x74, 0x69,
	0x6f, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x74, 0x5f, 0x64, 0x65, 0x62, 0x74, 0x5f, 0x65, 0x71, 0x75,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x6c, 0x74, 0x44,
	0x65, 0x62, 0x74, 0x45, 0x71, 0x75, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x72,
	0x6f, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x72, 0x6f, 0x61, 0x12, 0x10, 0x0a,
	0x03, 0x72, 0x6f, 0x69, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x72, 0x6f, 0x69, 0x12,
	0x0e, 0x0a, 0x02, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x02, 0x52, 0x02, 0x70, 0x65, 0x12,
	0x2a, 0x0a, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x62, 0x74, 0x5f, 0x65, 0x71,
	0x75, 0x69, 0x74, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x44, 0x65, 0x62, 0x74, 0x45, 0x71, 0x75, 0x69, 0x74, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12, 0x25,
	0x0a, 0x0e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x73, 0x73, 0x65, 0x74, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x65, 0x74, 0x61, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x04, 0x62, 0x65, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x62, 0x69,
	0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x65, 0x62, 0x69, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x72, 0x6f, 0x63, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x72, 0x6f, 0x63,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x12, 0x2c, 0x0a, 0x12,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6d, 0x6f, 0x6e,
	0x74, 0x68, 0x18, 0x16, 0x20, 0x01, 0x28, 0x02, 0x52, 0x10, 0x70, 0x72, 0x69, 0x63, 0x65, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x59, 0x65, 0x61, 0x72, 0x22, 0x5f, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x61, 0x74, 0x69, 0x6f, 0x73, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x73, 0x74, 0x12, 0x43, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x61, 0x74, 0x69, 0x6f, 0x73, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x52,
	0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x42, 0x0a, 0x30, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x65, 0x6e,
	0x69, 0x74, 0x69, 0x76, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x66, 0x6f,
	0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xff, 0x04, 0x0a, 0x2c,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x4d, 0x75, 0x73, 0x61, 0x66, 0x66, 0x6f, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x61, 0x6c, 0x65, 0x73,
	0x66, 0x6f, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x74, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3a,
	0x0a, 0x19, 0x73, 0x68, 0x61, 0x72, 0x69, 0x61, 0x68, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69,
	0x61, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x17, 0x73, 0x68, 0x61, 0x72, 0x69, 0x61, 0x68, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69,
	0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x68, 0x61, 0x6c, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x68, 0x61, 0x6c, 0x61, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x74, 0x5f, 0x68,
	0x61, 0x6c, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6e, 0x6f, 0x74, 0x48,
	0x61, 0x6c, 0x61, 0x6c, 0x12, 0x38, 0x0a, 0x18, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22,
	0x0a, 0x0c, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x3f, 0x0a, 0x1c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x5f, 0x62,
	0x65, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x65, 0x62, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x42, 0x65, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x62, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x58, 0x0a, 0x29, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x5f,
	0x62, 0x65, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x25, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74,
	0x42, 0x65, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x27, 0x0a,
	0x0f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74,
	0x52, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x62, 0x74, 0x5f, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x64, 0x65, 0x62, 0x74,
	0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x22, 0x3f, 0x0a,
	0x2d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x4d, 0x75, 0x73, 0x61, 0x66, 0x66, 0x6f, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x61, 0x6c, 0x65,
	0x73, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x62,
	0x0a, 0x1b, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42,
	0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74,
	0x61, 0x67, 0x22, 0x63, 0x0a, 0x1a, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x75, 0x0a, 0x1b, 0x49, 0x6e, 0x76, 0x65, 0x73,
	0x74, 0x6f, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x77, 0x69, 0x6c, 0x69, 0x6f,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74,
	0x77, 0x69, 0x6c, 0x69, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x76,
	0x0a, 0x1c, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42,
	0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23,
	0x0a, 0x0d, 0x74, 0x77, 0x69, 0x6c, 0x69, 0x6f, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x77, 0x69, 0x6c, 0x69, 0x6f, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x35, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4d, 0x75, 0x73,
	0x61, 0x66, 0x66, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x22, 0x60, 0x0a,
	0x19, 0x47, 0x65, 0x74, 0x4d, 0x75, 0x73, 0x61, 0x66, 0x66, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0c, 0x6d, 0x75,
	0x73, 0x61, 0x66, 0x66, 0x6f, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x75, 0x73, 0x61, 0x66, 0x66, 0x6f, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x0b, 0x6d, 0x75, 0x73, 0x61, 0x66, 0x66, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x22,
	0x42, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x44,
	0x6f, 0x63, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e,
	0x74, 0x49, 0x64, 0x22, 0x5f, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x6e, 0x74, 0x44, 0x6f, 0x63, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x22, 0x55, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x6e, 0x74, 0x44, 0x6f, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x6f, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x6f, 0x63, 0x49, 0x64, 0x22, 0x2e, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x44, 0x6f, 0x63, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x30, 0x0a, 0x1c, 0x52,
	0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x42, 0x79,
	0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x58, 0x0a,
	0x1c, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73,
	0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a,
	0x07, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x4e, 0x65, 0x77, 0x73, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x07,
	0x73, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x22, 0x45, 0x0a, 0x09, 0x4e, 0x65, 0x77, 0x73, 0x53,
	0x74, 0x6f, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x22, 0xee,
	0x05, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x42, 0x79, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0b, 0x69, 0x64, 0x5f, 0x64, 0x6f,
	0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x64,
	0x44, 0x6f, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x55, 0x6e, 0x74, 0x69, 0x6c,
	0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x64, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6f, 0x66,
	0x5f, 0x62, 0x69, 0x72, 0x74, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x61,
	0x74, 0x65, 0x4f, 0x66, 0x42, 0x69, 0x72, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x24, 0x0a,
	0x0e, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x62, 0x69, 0x72, 0x74, 0x68, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x66, 0x42, 0x69,
	0x72, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x2a, 0x0a, 0x03, 0x70, 0x6f,
	0x72, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x4f,
	0x52, 0x52, 0x03, 0x70, 0x6f, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72,
	0x65, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x69,
	0x64, 0x65, 0x6e, 0x69, 0x74, 0x79, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x64,
	0x65, 0x6e, 0x69, 0x74, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x70, 0x72, 0x6f, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x72, 0x65,
	0x70, 0x72, 0x6f, 0x63, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x12, 0x2d, 0x0a, 0x12, 0x6d,
	0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x74,
	0x74, 0x65, 0x6d, 0x70, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x45, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x42, 0x79, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x22, 0x2f, 0x0a, 0x14, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x15, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x3c, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xac, 0x03,
	0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0b, 0x69, 0x64,
	0x5f, 0x64, 0x6f, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x69, 0x64, 0x44, 0x6f, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x5f, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x69, 0x72, 0x73,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x5f, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x73, 0x73,
	0x75, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x2b, 0x0a, 0x11, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x64, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x22, 0x0a,
	0x0d, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x62, 0x69, 0x72, 0x74, 0x68, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x42, 0x69, 0x72, 0x74,
	0x68, 0x12, 0x29, 0x0a, 0x11, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x62, 0x69,
	0x72, 0x74, 0x68, 0x5f, 0x65, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x6c,
	0x61, 0x63, 0x65, 0x4f, 0x66, 0x42, 0x69, 0x72, 0x74, 0x68, 0x45, 0x6e, 0x22, 0x61, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x72, 0x69, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x22,
	0x51, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x09, 0x6b, 0x65, 0x79, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x4b, 0x65, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x22, 0x57, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x09,
	0x6b, 0x65, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4b, 0x65, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x4e, 0x65,
	0x77, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x22, 0x7d, 0x0a, 0x1a, 0x47,
	0x65, 0x74, 0x42, 0x75, 0x73, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x72, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x69, 0x63, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x69, 0x63, 0x22, 0x43, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4e, 0x65, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x72, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x69, 0x63, 0x22,
	0x71, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52,
	0x0a, 0x11, 0x62, 0x75, 0x73, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x73, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x42, 0x75, 0x73, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x52, 0x10, 0x62, 0x75, 0x73, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x22, 0x55, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4e, 0x65,
	0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x73, 0x74,
	0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x65, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4e, 0x65, 0x77, 0x73, 0x52, 0x09,
	0x73, 0x74, 0x6f, 0x63, 0x6b, 0x4e, 0x65, 0x77, 0x73, 0x22, 0xe5, 0x01, 0x0a, 0x16, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x65, 0x73,
	0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x12, 0x46, 0x0a, 0x0d, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x36, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x22, 0xb3, 0x02, 0x0a, 0x0c, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x6f, 0x66, 0x5f, 0x62, 0x69, 0x72, 0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x42, 0x69, 0x72, 0x74, 0x68, 0x12, 0x24, 0x0a, 0x0e, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x62, 0x69, 0x72, 0x74, 0x68, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x66, 0x42, 0x69, 0x72, 0x74,
	0x68, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x6f, 0x66, 0x5f,
	0x62, 0x69, 0x72, 0x74, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x4f, 0x66, 0x42, 0x69, 0x72, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x69, 0x74, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x22, 0xa2, 0x01, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x6f, 0x73, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x6f, 0x73, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x6f, 0x77,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x6f, 0x77, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x72, 0x65, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66,
	0x6c, 0x61, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x66, 0x6c, 0x61, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x65, 0x0a, 0x17,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x23,
	0x0a, 0x0d, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x7f, 0x0a, 0x15, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x69, 0x6e, 0x69, 0x6f, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x69, 0x6f,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x83, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x49, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x4c, 0x0a, 0x16, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x59, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x49,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x60, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x65, 0x73,
	0x74, 0x6f, 0x72, 0x49, 0x64, 0x22, 0x66, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xd5, 0x01,
	0x0a, 0x11, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x70,
	0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x69, 0x67, 0x68,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x69, 0x67, 0x68, 0x12, 0x10, 0x0a, 0x03,
	0x6c, 0x6f, 0x77, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6c, 0x6f, 0x77, 0x12, 0x16,
	0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x20, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x7a, 0x0a, 0x19, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x47, 0x0a, 0x0b, 0x69, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x22, 0x81, 0x01, 0x0a, 0x1e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x49, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x46, 0x69, 0x6e, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x47,
	0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x69, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x8c, 0x04, 0x0a, 0x10, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x72, 0x69, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x69, 0x63, 0x12, 0x21,
	0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x1a, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x70, 0x69, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x70, 0x69, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x65, 0x64, 0x6f, 0x6c,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x65, 0x64, 0x6f, 0x6c, 0x12, 0x12, 0x0a,
	0x04, 0x69, 0x73, 0x69, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x73, 0x69,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x75, 0x73, 0x69, 0x70, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x63, 0x75, 0x73, 0x69, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x67, 0x69, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x69, 0x67, 0x69, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a,
	0x03, 0x64, 0x61, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x61, 0x74, 0x12,
	0x25, 0x0a, 0x0e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x73, 0x73, 0x65, 0x74, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x22, 0x2f, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x45, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x42, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xba, 0x06, 0x0a, 0x18, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x69, 0x64, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x69, 0x73, 0x48, 0x61, 0x6c, 0x61, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x69, 0x73, 0x48, 0x61, 0x6c, 0x61, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73,
	0x5f, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x69, 0x73, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x71, 0x75, 0x69, 0x63,
	0x6b, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x71,
	0x75, 0x69, 0x63, 0x6b, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x10,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6d, 0x69, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x69,
	0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x64, 0x5f, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x69, 0x64, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6d, 0x69, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x69,
	0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x18, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67,
	0x73, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x41, 0x6e, 0x64, 0x45, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12,
	0x2e, 0x0a, 0x13, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12,
	0x2a, 0x0a, 0x11, 0x71, 0x75, 0x69, 0x63, 0x6b, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x5f, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x71, 0x75, 0x69, 0x63,
	0x6b, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x5f, 0x72, 0x61, 0x6e, 0x67,
	0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x73, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f,
	0x63, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x74, 0x6f, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x64, 0x75,
	0x73, 0x74, 0x72, 0x79, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x64, 0x75,
	0x73, 0x74, 0x72, 0x79, 0x22, 0x3a, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x42, 0x79, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73,
	0x22, 0x55, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x42, 0x79, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x22, 0x75, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x53, 0x68,
	0x6f, 0x72, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x42, 0x79, 0x53, 0x74, 0x6f, 0x63,
	0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0b, 0x69, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x30, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x42, 0x79, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x28,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x49, 0x64, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x92, 0x01, 0x0a, 0x1d, 0x41, 0x64, 0x64,
	0x46, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x69, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e,
	0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x69,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x2b, 0x0a, 0x11, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x69, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x22, 0x2d, 0x0a,
	0x0a, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69,
	0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x22, 0x65, 0x0a, 0x17,
	0x46, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x69, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x46, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x69, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x22, 0x42, 0x0a, 0x1d, 0x49, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x46, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x66, 0x61, 0x76, 0x6f, 0x75,
	0x72, 0x69, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x46, 0x61,
	0x76, 0x6f, 0x75, 0x72, 0x69, 0x74, 0x65, 0x22, 0x6d, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x4c, 0x61,
	0x73, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69,
	0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x44, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x57, 0x65, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x32, 0x89, 0x35, 0x0a,
	0x11, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x56, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x45, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x29, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x0c, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x23, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x26, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x25, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x0c, 0x47, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x49, 0x44, 0x12, 0x23, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x78, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x45, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x79, 0x49, 0x44, 0x12, 0x23, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x29, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x78, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x71, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x42, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x2e, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x42, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x29, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x86, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x42, 0x79, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x33, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x42, 0x79, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x34, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x42, 0x79, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x30, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x12, 0x74, 0x0a, 0x11, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x49,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x44, 0x12, 0x2d, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x46, 0x69, 0x78, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x22, 0x00, 0x12, 0x7d,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x30, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x49, 0x64, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x29, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x76, 0x0a, 0x13, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64,
	0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2d, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x74, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x4d, 0x75, 0x73, 0x61, 0x66, 0x66, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x12, 0x2d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x75, 0x73, 0x61, 0x66,
	0x66, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2e, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x75, 0x73, 0x61, 0x66, 0x66,
	0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x62, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x12, 0x27, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7a, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x2f, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x68, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x4e, 0x65, 0x77, 0x12, 0x27, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x65,
	0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x4e,
	0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x95, 0x01, 0x0a,
	0x1c, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x42, 0x79, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x12, 0x38, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79,
	0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x12, 0x2b, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x0d, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x29, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2a, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6b,
	0x0a, 0x0e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x2a, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x71, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x44, 0x6f, 0x63, 0x73, 0x12,
	0x2c, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x6e, 0x74, 0x44, 0x6f, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74,
	0x44, 0x6f, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x83,
	0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x44,
	0x6f, 0x63, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x32, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x44, 0x6f, 0x63, 0x73,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74,
	0x44, 0x6f, 0x63, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x87, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x65, 0x64, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x73, 0x44, 0x6f, 0x63,
	0x49, 0x64, 0x73, 0x12, 0x32, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x44, 0x6f, 0x63, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x44, 0x6f, 0x63, 0x73, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6e,
	0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x59, 0x43, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x2b, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x59,
	0x43, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x59, 0x43, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7e,
	0x0a, 0x14, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x69, 0x65,
	0x73, 0x42, 0x79, 0x49, 0x64, 0x73, 0x12, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x74,
	0x72, 0x69, 0x65, 0x76, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x42, 0x79, 0x49, 0x64,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x1a, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x42,
	0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x65,
	0x0a, 0x0c, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4e, 0x65, 0x77, 0x73, 0x12, 0x28,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4e, 0x65, 0x77,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4e, 0x65, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7d, 0x0a, 0x14, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f,
	0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x30, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x42, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x42, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x81, 0x01, 0x0a, 0x1a, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f,
	0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x42, 0x79, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x12, 0x2f, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74,
	0x6f, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x76, 0x65, 0x73,
	0x74, 0x6f, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x78, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x46,
	0x61, 0x76, 0x6f, 0x75, 0x72, 0x69, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x32, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x61, 0x76, 0x6f,
	0x75, 0x72, 0x69, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x61, 0x76,
	0x6f, 0x75, 0x72, 0x69, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x22, 0x00, 0x12, 0x6a, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x46, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x69,
	0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1f, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x1a, 0x2c,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x69, 0x74, 0x65, 0x49, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x6b,
	0x0a, 0x13, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x46, 0x61, 0x76, 0x6f,
	0x75, 0x72, 0x69, 0x74, 0x65, 0x12, 0x28, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x61, 0x76, 0x6f,
	0x75, 0x72, 0x69, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x1a,
	0x28, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x69, 0x74, 0x65, 0x49,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x00, 0x12, 0x77, 0x0a, 0x15, 0x49,
	0x73, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x61, 0x76, 0x6f, 0x75,
	0x72, 0x69, 0x74, 0x65, 0x12, 0x28, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x61, 0x76, 0x6f, 0x75,
	0x72, 0x69, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x32,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x46, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0xb0, 0x01, 0x0a, 0x25, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x75, 0x73, 0x61, 0x66, 0x66, 0x6f,
	0x46, 0x72, 0x6f, 0x6d, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x41,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x75, 0x73, 0x61, 0x66, 0x66, 0x6f, 0x46, 0x72, 0x6f, 0x6d,
	0x53, 0x61, 0x6c, 0x65, 0x73, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x42, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x75, 0x73, 0x61, 0x66, 0x66, 0x6f, 0x46,
	0x72, 0x6f, 0x6d, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x84, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4c,
	0x61, 0x73, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x35, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4c,
	0x61, 0x73, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xb9,
	0x01, 0x0a, 0x28, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x65, 0x6e, 0x69, 0x74, 0x69, 0x76, 0x65, 0x46, 0x72, 0x6f,
	0x6d, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x44, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x66, 0x65, 0x6e, 0x69, 0x74, 0x69, 0x76, 0x65, 0x46, 0x72, 0x6f, 0x6d,
	0x53, 0x61, 0x6c, 0x65, 0x73, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x45, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x65, 0x6e, 0x69, 0x74, 0x69,
	0x76, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x66, 0x6f, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8c, 0x01, 0x0a, 0x12, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x73, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x12, 0x2d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x61,
	0x74, 0x69, 0x6f, 0x73, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x73, 0x74,
	0x1a, 0x45, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x65, 0x6e, 0x69, 0x74, 0x69, 0x76,
	0x65, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x10, 0x55, 0x70, 0x73,
	0x65, 0x72, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x78, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x1a, 0x1e, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x78, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x22, 0x00, 0x12,
	0x92, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12,
	0x37, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x7a, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x2f, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f,
	0x72, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x73, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x73, 0x12, 0x2d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49,
	0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e,
	0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7a, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65,
	0x73, 0x74, 0x6f, 0x72, 0x4f, 0x6e, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x2f, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x4f, 0x6e,
	0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x4f,
	0x6e, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x7a, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x73,
	0x74, 0x6f, 0x72, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x2f, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7a, 0x0a,
	0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x12, 0x2f, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x80, 0x01, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x42,
	0x79, 0x49, 0x64, 0x12, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8f, 0x01, 0x0a,
	0x1a, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x36, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76,
	0x65, 0x73, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6e,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x2b, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x65,
	0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x65, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x68,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x42,
	0x79, 0x49, 0x53, 0x49, 0x44, 0x12, 0x2f, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x53, 0x49, 0x44, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x78,
	0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x22, 0x00, 0x12, 0x7d, 0x0a, 0x14, 0x49, 0x6e, 0x73, 0x65,
	0x72, 0x74, 0x53, 0x75, 0x6d, 0x73, 0x75, 0x62, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x30, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x53, 0x75, 0x6d,
	0x73, 0x75, 0x62, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x53,
	0x75, 0x6d, 0x73, 0x75, 0x62, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x57, 0x65, 0x62, 0x12, 0x2e, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x46,
	0x72, 0x6f, 0x6d, 0x57, 0x65, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x0a, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x26, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x86, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x55, 0x70, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x12, 0x33, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x55, 0x70, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x55, 0x70, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x68, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x69, 0x6c, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x33, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x69, 0x6c,
	0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x11, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x57, 0x65, 0x62,
	0x12, 0x2d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x46, 0x72, 0x6f, 0x6d, 0x57, 0x65, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x14, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x72, 0x75, 0x6c,
	0x65, 0x12, 0x23, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x62, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x72, 0x75, 0x6c, 0x65, 0x12, 0x30, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x72,
	0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x12, 0x71, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x72, 0x75, 0x6c, 0x65, 0x12, 0x31, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x72, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x23, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x75, 0x6c, 0x65, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x49, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2a, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x1e, 0x5a, 0x1c, 0x67, 0x65, 0x6e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_integration_service_proto_rawDescOnce sync.Once
	file_integration_service_proto_rawDescData = file_integration_service_proto_rawDesc
)

func file_integration_service_proto_rawDescGZIP() []byte {
	file_integration_service_proto_rawDescOnce.Do(func() {
		file_integration_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_integration_service_proto_rawDescData)
	})
	return file_integration_service_proto_rawDescData
}

var file_integration_service_proto_msgTypes = make([]protoimpl.MessageInfo, 97)
var file_integration_service_proto_goTypes = []interface{}{
	(*GetIndustry)(nil),                                      // 0: integration_service.GetIndustry
	(*GetIndustriesResponse)(nil),                            // 1: integration_service.GetIndustriesResponse
	(*DeletecommissionruleRequest)(nil),                      // 2: integration_service.DeletecommissionruleRequest
	(*CommissionRule)(nil),                                   // 3: integration_service.CommissionRule
	(*GetUserCommissionruleRequest)(nil),                     // 4: integration_service.GetUserCommissionruleRequest
	(*UpdateCompaileQuestionsRequest)(nil),                   // 5: integration_service.UpdateCompaileQuestionsRequest
	(*CompaileQuestions)(nil),                                // 6: integration_service.CompaileQuestions
	(*GetLevelUpEmailTemplateResponse)(nil),                  // 7: integration_service.GetLevelUpEmailTemplateResponse
	(*EmailTemplate)(nil),                                    // 8: integration_service.EmailTemplate
	(*GetLevelUpEmailTemplateRequest)(nil),                   // 9: integration_service.GetLevelUpEmailTemplateRequest
	(*CheckEmailRequest)(nil),                                // 10: integration_service.CheckEmailRequest
	(*CheckEmailResponse)(nil),                               // 11: integration_service.CheckEmailResponse
	(*CreateUsersFromWebRequest)(nil),                        // 12: integration_service.CreateUsersFromWebRequest
	(*InsertSumsubCommentsRequest)(nil),                      // 13: integration_service.InsertSumsubCommentsRequest
	(*InsertSumsubComments)(nil),                             // 14: integration_service.InsertSumsubComments
	(*InsertSumsubCommentsResponse)(nil),                     // 15: integration_service.InsertSumsubCommentsResponse
	(*GetInstrumentByISIDRequest)(nil),                       // 16: integration_service.GetInstrumentByISIDRequest
	(*GetStreetEventsRequest)(nil),                           // 17: integration_service.GetStreetEventsRequest
	(*GetStreetEventsResponse)(nil),                          // 18: integration_service.GetStreetEventsResponse
	(*StreetEvent)(nil),                                      // 19: integration_service.StreetEvent
	(*GetInvestorInstrumentAlertRequest)(nil),                // 20: integration_service.GetInvestorInstrumentAlertRequest
	(*GetInvestorInstrumentAlertResponse)(nil),               // 21: integration_service.GetInvestorInstrumentAlertResponse
	(*GetInstrumentNameByIdRequest)(nil),                     // 22: integration_service.GetInstrumentNameByIdRequest
	(*GetInstrumentNameByIdResponse)(nil),                    // 23: integration_service.GetInstrumentNameByIdResponse
	(*UpdateInvestorAlertRequest)(nil),                       // 24: integration_service.UpdateInvestorAlertRequest
	(*UpdateInvestorAlertResponse)(nil),                      // 25: integration_service.UpdateInvestorAlertResponse
	(*DeleteInvestorAlertRequest)(nil),                       // 26: integration_service.DeleteInvestorAlertRequest
	(*DeleteInvestorAlertResponse)(nil),                      // 27: integration_service.DeleteInvestorAlertResponse
	(*GetInvestorOneAlertRequest)(nil),                       // 28: integration_service.GetInvestorOneAlertRequest
	(*GetInvestorAlertsRequest)(nil),                         // 29: integration_service.GetInvestorAlertsRequest
	(*GetInvestorAlertsReponse)(nil),                         // 30: integration_service.GetInvestorAlertsReponse
	(*GetInvestorOneAlertResponse)(nil),                      // 31: integration_service.GetInvestorOneAlertResponse
	(*CreateInvestorAlertRequest)(nil),                       // 32: integration_service.CreateInvestorAlertRequest
	(*CreateInvestorAlertResponse)(nil),                      // 33: integration_service.CreateInvestorAlertResponse
	(*GetInstrumentRequiredFieldsRequest)(nil),               // 34: integration_service.GetInstrumentRequiredFieldsRequest
	(*GetInstrumentRequiredFieldsResponse)(nil),              // 35: integration_service.GetInstrumentRequiredFieldsResponse
	(*UpdateKYCStatusRequest)(nil),                           // 36: integration_service.UpdateKYCStatusRequest
	(*UpdateKYCStatusResponse)(nil),                          // 37: integration_service.UpdateKYCStatusResponse
	(*UpdateInstrumentRefenitiveFromSalesforceRequest)(nil),  // 38: integration_service.UpdateInstrumentRefenitiveFromSalesforceRequest
	(*UpdateRatiosReportBody)(nil),                           // 39: integration_service.UpdateRatiosReportBody
	(*UpdateRatiosReportRequst)(nil),                         // 40: integration_service.UpdateRatiosReportRequst
	(*UpdateInstrumentRefenitiveFromSalesforceResponse)(nil), // 41: integration_service.UpdateInstrumentRefenitiveFromSalesforceResponse
	(*UpdateInstrumentMusaffoFromSalesforceRequest)(nil),     // 42: integration_service.UpdateInstrumentMusaffoFromSalesforceRequest
	(*UpdateInstrumentMusaffoFromSalesforceResponse)(nil),    // 43: integration_service.UpdateInstrumentMusaffoFromSalesforceResponse
	(*InvestorLoginByPhoneRequest)(nil),                      // 44: integration_service.InvestorLoginByPhoneRequest
	(*InvestorLoginVerifyRequest)(nil),                       // 45: integration_service.InvestorLoginVerifyRequest
	(*InvestorLoginVerifyResponse)(nil),                      // 46: integration_service.InvestorLoginVerifyResponse
	(*InvestorLoginByPhoneResponse)(nil),                     // 47: integration_service.InvestorLoginByPhoneResponse
	(*GetMusaffoDetailsRequest)(nil),                         // 48: integration_service.GetMusaffoDetailsRequest
	(*GetMusaffoDetailsResponse)(nil),                        // 49: integration_service.GetMusaffoDetailsResponse
	(*GetApplicantDocsStatusRequest)(nil),                    // 50: integration_service.GetApplicantDocsStatusRequest
	(*GetApplicantDocsStatusResponse)(nil),                   // 51: integration_service.GetApplicantDocsStatusResponse
	(*GetApplicantDocsRequest)(nil),                          // 52: integration_service.GetApplicantDocsRequest
	(*GetApplicantDocsResponse)(nil),                         // 53: integration_service.GetApplicantDocsResponse
	(*RetrieveStoriesByIdsRequests)(nil),                     // 54: integration_service.RetrieveStoriesByIdsRequests
	(*RetrieveStoriesByIdsResponse)(nil),                     // 55: integration_service.RetrieveStoriesByIdsResponse
	(*NewsStory)(nil),                                        // 56: integration_service.NewsStory
	(*GetApplicantInfoByExternalIdResponse)(nil),             // 57: integration_service.GetApplicantInfoByExternalIdResponse
	(*GetApplicantInfoByExternalIdRequest)(nil),              // 58: integration_service.GetApplicantInfoByExternalIdRequest
	(*GenerateTokenRequest)(nil),                             // 59: integration_service.GenerateTokenRequest
	(*GenerateTokenResponse)(nil),                            // 60: integration_service.GenerateTokenResponse
	(*GetApplicantInfoRequest)(nil),                          // 61: integration_service.GetApplicantInfoRequest
	(*GetApplicantInfoResponse)(nil),                         // 62: integration_service.GetApplicantInfoResponse
	(*GetKeyStatsRequest)(nil),                               // 63: integration_service.GetKeyStatsRequest
	(*GetKeyStatsResponse)(nil),                              // 64: integration_service.GetKeyStatsResponse
	(*GetKeyStatsNewResponse)(nil),                           // 65: integration_service.GetKeyStatsNewResponse
	(*GetBussinessSummaryRequest)(nil),                       // 66: integration_service.GetBussinessSummaryRequest
	(*GetStockNewsRequest)(nil),                              // 67: integration_service.GetStockNewsRequest
	(*GetBussinessSummaryResponse)(nil),                      // 68: integration_service.GetBussinessSummaryResponse
	(*GetStockNewsResponse)(nil),                             // 69: integration_service.GetStockNewsResponse
	(*CreateApplicantRequest)(nil),                           // 70: integration_service.CreateApplicantRequest
	(*PersonalInfo)(nil),                                     // 71: integration_service.PersonalInfo
	(*Address)(nil),                                          // 72: integration_service.Address
	(*CreateApplicantResponse)(nil),                          // 73: integration_service.CreateApplicantResponse
	(*UploadDocumentRequest)(nil),                            // 74: integration_service.UploadDocumentRequest
	(*UploadDocumentMetadata)(nil),                           // 75: integration_service.UploadDocumentMetadata
	(*UploadDocumentResponse)(nil),                           // 76: integration_service.UploadDocumentResponse
	(*GetInstrumentHistoryRequest)(nil),                      // 77: integration_service.GetInstrumentHistoryRequest
	(*GetInstrumentByIDRequest)(nil),                         // 78: integration_service.GetInstrumentByIDRequest
	(*GetInstrumentHistoryResponse)(nil),                     // 79: integration_service.GetInstrumentHistoryResponse
	(*InstrumentHistory)(nil),                                // 80: integration_service.InstrumentHistory
	(*GetByIDRequest)(nil),                                   // 81: integration_service.GetByIDRequest
	(*FilterInstrumentsResponse)(nil),                        // 82: integration_service.FilterInstrumentsResponse
	(*FilterInstrumentsByFindRequest)(nil),                   // 83: integration_service.FilterInstrumentsByFindRequest
	(*FilterInstrument)(nil),                                 // 84: integration_service.FilterInstrument
	(*GetExchangesByTypeRequest)(nil),                        // 85: integration_service.GetExchangesByTypeRequest
	(*FilterInstrumentsRequest)(nil),                         // 86: integration_service.FilterInstrumentsRequest
	(*GetShortDetailsByStocksRequest)(nil),                   // 87: integration_service.GetShortDetailsByStocksRequest
	(*GetShortDetailsByStocksData)(nil),                      // 88: integration_service.GetShortDetailsByStocksData
	(*GetShortDetailsByStocksResponse)(nil),                  // 89: integration_service.GetShortDetailsByStocksResponse
	(*GetSymbolIdsResponse)(nil),                             // 90: integration_service.GetSymbolIdsResponse
	(*AddFavouriteInstrumentRequest)(nil),                    // 91: integration_service.AddFavouriteInstrumentRequest
	(*InvestorId)(nil),                                       // 92: integration_service.InvestorId
	(*FavouriteInstrumentList)(nil),                          // 93: integration_service.FavouriteInstrumentList
	(*IsInstrumentFavouriteResponse)(nil),                    // 94: integration_service.IsInstrumentFavouriteResponse
	(*GetLastCheckedInstrumentsRequest)(nil),                 // 95: integration_service.GetLastCheckedInstrumentsRequest
	(*UpdateUserFromWebRequest)(nil),                         // 96: integration_service.UpdateUserFromWebRequest
	(*MusaffoData)(nil),                                      // 97: integration_service.MusaffoData
	(*Identity)(nil),                                         // 98: integration_service.Identity
	(*POR)(nil),                                              // 99: integration_service.POR
	(*KeyStats)(nil),                                         // 100: integration_service.KeyStats
	(*KeyStatsNew)(nil),                                      // 101: integration_service.KeyStatsNew
	(*BussinessSummary)(nil),                                 // 102: integration_service.BussinessSummary
	(*StockNews)(nil),                                        // 103: integration_service.StockNews
	(*FavouriteInstrument)(nil),                              // 104: integration_service.FavouriteInstrument
	(*empty.Empty)(nil),                                      // 105: google.protobuf.Empty
	(*GetInstrumentsByTypeRequest)(nil),                      // 106: integration_service.GetInstrumentsByTypeRequest
	(*FixSymbol)(nil),                                        // 107: integration_service.FixSymbol
	(*GetExchangesResponse)(nil),                             // 108: integration_service.GetExchangesResponse
	(*GetGroupsResponse)(nil),                                // 109: integration_service.GetGroupsResponse
	(*GetTypesResponse)(nil),                                 // 110: integration_service.GetTypesResponse
	(*FixGroupResponse)(nil),                                 // 111: integration_service.FixGroupResponse
	(*FixExchangesResponse)(nil),                             // 112: integration_service.FixExchangesResponse
}
var file_integration_service_proto_depIdxs = []int32{
	0,   // 0: integration_service.GetIndustriesResponse.industries:type_name -> integration_service.GetIndustry
	6,   // 1: integration_service.UpdateCompaileQuestionsRequest.CompaileQuestions:type_name -> integration_service.CompaileQuestions
	14,  // 2: integration_service.InsertSumsubCommentsResponse.comments:type_name -> integration_service.InsertSumsubComments
	19,  // 3: integration_service.GetStreetEventsResponse.street_events:type_name -> integration_service.StreetEvent
	32,  // 4: integration_service.GetInvestorInstrumentAlertResponse.investor_alerts:type_name -> integration_service.CreateInvestorAlertRequest
	32,  // 5: integration_service.GetInvestorAlertsReponse.investor_alerts:type_name -> integration_service.CreateInvestorAlertRequest
	39,  // 6: integration_service.UpdateRatiosReportRequst.entity:type_name -> integration_service.UpdateRatiosReportBody
	97,  // 7: integration_service.GetMusaffoDetailsResponse.musaffo_data:type_name -> integration_service.MusaffoData
	98,  // 8: integration_service.GetApplicantDocsStatusResponse.identities:type_name -> integration_service.Identity
	56,  // 9: integration_service.RetrieveStoriesByIdsResponse.stories:type_name -> integration_service.NewsStory
	99,  // 10: integration_service.GetApplicantInfoByExternalIdResponse.por:type_name -> integration_service.POR
	100, // 11: integration_service.GetKeyStatsResponse.key_stats:type_name -> integration_service.KeyStats
	101, // 12: integration_service.GetKeyStatsNewResponse.key_stats:type_name -> integration_service.KeyStatsNew
	102, // 13: integration_service.GetBussinessSummaryResponse.bussiness_summary:type_name -> integration_service.BussinessSummary
	103, // 14: integration_service.GetStockNewsResponse.stock_news:type_name -> integration_service.StockNews
	71,  // 15: integration_service.CreateApplicantRequest.personal_info:type_name -> integration_service.PersonalInfo
	72,  // 16: integration_service.CreateApplicantRequest.address:type_name -> integration_service.Address
	75,  // 17: integration_service.UploadDocumentRequest.metadata:type_name -> integration_service.UploadDocumentMetadata
	80,  // 18: integration_service.GetInstrumentHistoryResponse.instruents:type_name -> integration_service.InstrumentHistory
	84,  // 19: integration_service.FilterInstrumentsResponse.instruments:type_name -> integration_service.FilterInstrument
	84,  // 20: integration_service.FilterInstrumentsByFindRequest.instruments:type_name -> integration_service.FilterInstrument
	88,  // 21: integration_service.GetShortDetailsByStocksResponse.instruments:type_name -> integration_service.GetShortDetailsByStocksData
	104, // 22: integration_service.FavouriteInstrumentList.instruments:type_name -> integration_service.FavouriteInstrument
	105, // 23: integration_service.IntegrationSevice.GetAllExchanges:input_type -> google.protobuf.Empty
	81,  // 24: integration_service.IntegrationSevice.GetAllGroups:input_type -> integration_service.GetByIDRequest
	105, // 25: integration_service.IntegrationSevice.GetAllTypes:input_type -> google.protobuf.Empty
	81,  // 26: integration_service.IntegrationSevice.GetGroupByID:input_type -> integration_service.GetByIDRequest
	81,  // 27: integration_service.IntegrationSevice.GetExchangeByID:input_type -> integration_service.GetByIDRequest
	85,  // 28: integration_service.IntegrationSevice.GetExchangesByType:input_type -> integration_service.GetExchangesByTypeRequest
	87,  // 29: integration_service.IntegrationSevice.GetShortDetailsByStocks:input_type -> integration_service.GetShortDetailsByStocksRequest
	106, // 30: integration_service.IntegrationSevice.UpdateIcon:input_type -> integration_service.GetInstrumentsByTypeRequest
	86,  // 31: integration_service.IntegrationSevice.FilterInstruments:input_type -> integration_service.FilterInstrumentsRequest
	78,  // 32: integration_service.IntegrationSevice.GetInstrumentByID:input_type -> integration_service.GetInstrumentByIDRequest
	77,  // 33: integration_service.IntegrationSevice.GetInstrumentHistory:input_type -> integration_service.GetInstrumentHistoryRequest
	105, // 34: integration_service.IntegrationSevice.GetAllSymbolId:input_type -> google.protobuf.Empty
	86,  // 35: integration_service.IntegrationSevice.FilteredInstruments:input_type -> integration_service.FilterInstrumentsRequest
	48,  // 36: integration_service.IntegrationSevice.GetMusaffoDetails:input_type -> integration_service.GetMusaffoDetailsRequest
	63,  // 37: integration_service.IntegrationSevice.GetKeyStats:input_type -> integration_service.GetKeyStatsRequest
	66,  // 38: integration_service.IntegrationSevice.GetBussinessSummary:input_type -> integration_service.GetBussinessSummaryRequest
	63,  // 39: integration_service.IntegrationSevice.GetKeyStatsNew:input_type -> integration_service.GetKeyStatsRequest
	58,  // 40: integration_service.IntegrationSevice.GetApplicantInfoByExternalID:input_type -> integration_service.GetApplicantInfoByExternalIdRequest
	70,  // 41: integration_service.IntegrationSevice.CreateApplicant:input_type -> integration_service.CreateApplicantRequest
	59,  // 42: integration_service.IntegrationSevice.GenerateToken:input_type -> integration_service.GenerateTokenRequest
	74,  // 43: integration_service.IntegrationSevice.UploadDocument:input_type -> integration_service.UploadDocumentRequest
	52,  // 44: integration_service.IntegrationSevice.GetApplicantDocs:input_type -> integration_service.GetApplicantDocsRequest
	50,  // 45: integration_service.IntegrationSevice.GetApplicantDocsStatus:input_type -> integration_service.GetApplicantDocsStatusRequest
	50,  // 46: integration_service.IntegrationSevice.GetApprovedInvestorsDocIds:input_type -> integration_service.GetApplicantDocsStatusRequest
	36,  // 47: integration_service.IntegrationSevice.UpdateKYCStatus:input_type -> integration_service.UpdateKYCStatusRequest
	54,  // 48: integration_service.IntegrationSevice.RetrieveStoriesByIds:input_type -> integration_service.RetrieveStoriesByIdsRequests
	67,  // 49: integration_service.IntegrationSevice.GetStockNews:input_type -> integration_service.GetStockNewsRequest
	44,  // 50: integration_service.IntegrationSevice.InvestorLoginByPhone:input_type -> integration_service.InvestorLoginByPhoneRequest
	45,  // 51: integration_service.IntegrationSevice.InvestorLoginVerifyByPhone:input_type -> integration_service.InvestorLoginVerifyRequest
	91,  // 52: integration_service.IntegrationSevice.AddFavouriteInstrument:input_type -> integration_service.AddFavouriteInstrumentRequest
	92,  // 53: integration_service.IntegrationSevice.GetFavouriteInstruments:input_type -> integration_service.InvestorId
	104, // 54: integration_service.IntegrationSevice.RemoveFromFavourite:input_type -> integration_service.FavouriteInstrument
	104, // 55: integration_service.IntegrationSevice.IsInstrumentFavourite:input_type -> integration_service.FavouriteInstrument
	42,  // 56: integration_service.IntegrationSevice.UpdateInstrumentMusaffoFromSalesforce:input_type -> integration_service.UpdateInstrumentMusaffoFromSalesforceRequest
	95,  // 57: integration_service.IntegrationSevice.GetLastCheckedInstruments:input_type -> integration_service.GetLastCheckedInstrumentsRequest
	38,  // 58: integration_service.IntegrationSevice.UpdateInstrumentRefenitiveFromSalesforce:input_type -> integration_service.UpdateInstrumentRefenitiveFromSalesforceRequest
	40,  // 59: integration_service.IntegrationSevice.UpdateRatiosReport:input_type -> integration_service.UpdateRatiosReportRequst
	107, // 60: integration_service.IntegrationSevice.UpsertInstrument:input_type -> integration_service.FixSymbol
	34,  // 61: integration_service.IntegrationSevice.GetInstrumentRequiredFields:input_type -> integration_service.GetInstrumentRequiredFieldsRequest
	32,  // 62: integration_service.IntegrationSevice.CreateInvestorAlert:input_type -> integration_service.CreateInvestorAlertRequest
	29,  // 63: integration_service.IntegrationSevice.GetInvestorAlerts:input_type -> integration_service.GetInvestorAlertsRequest
	28,  // 64: integration_service.IntegrationSevice.GetInvestorOneAlert:input_type -> integration_service.GetInvestorOneAlertRequest
	26,  // 65: integration_service.IntegrationSevice.DeleteInvestorAlert:input_type -> integration_service.DeleteInvestorAlertRequest
	24,  // 66: integration_service.IntegrationSevice.UpdateInvestorAlert:input_type -> integration_service.UpdateInvestorAlertRequest
	22,  // 67: integration_service.IntegrationSevice.GetInstrumentNameById:input_type -> integration_service.GetInstrumentNameByIdRequest
	20,  // 68: integration_service.IntegrationSevice.GetInvestorInstrumentAlert:input_type -> integration_service.GetInvestorInstrumentAlertRequest
	17,  // 69: integration_service.IntegrationSevice.GetStreetEvents:input_type -> integration_service.GetStreetEventsRequest
	16,  // 70: integration_service.IntegrationSevice.GetInstrumentByISID:input_type -> integration_service.GetInstrumentByISIDRequest
	13,  // 71: integration_service.IntegrationSevice.InsertSumsubComments:input_type -> integration_service.InsertSumsubCommentsRequest
	12,  // 72: integration_service.IntegrationSevice.CreateUsersFromWeb:input_type -> integration_service.CreateUsersFromWebRequest
	10,  // 73: integration_service.IntegrationSevice.CheckEmail:input_type -> integration_service.CheckEmailRequest
	9,   // 74: integration_service.IntegrationSevice.GetLevelUpEmailTemplate:input_type -> integration_service.GetLevelUpEmailTemplateRequest
	5,   // 75: integration_service.IntegrationSevice.UpdateCompaileQuestions:input_type -> integration_service.UpdateCompaileQuestionsRequest
	96,  // 76: integration_service.IntegrationSevice.UpdateUserFromWeb:input_type -> integration_service.UpdateUserFromWebRequest
	3,   // 77: integration_service.IntegrationSevice.Createcommissionrule:input_type -> integration_service.CommissionRule
	2,   // 78: integration_service.IntegrationSevice.Deletecommissionrule:input_type -> integration_service.DeletecommissionruleRequest
	4,   // 79: integration_service.IntegrationSevice.GetUserCommissionrule:input_type -> integration_service.GetUserCommissionruleRequest
	105, // 80: integration_service.IntegrationSevice.GetInstrumentIndustries:input_type -> google.protobuf.Empty
	108, // 81: integration_service.IntegrationSevice.GetAllExchanges:output_type -> integration_service.GetExchangesResponse
	109, // 82: integration_service.IntegrationSevice.GetAllGroups:output_type -> integration_service.GetGroupsResponse
	110, // 83: integration_service.IntegrationSevice.GetAllTypes:output_type -> integration_service.GetTypesResponse
	111, // 84: integration_service.IntegrationSevice.GetGroupByID:output_type -> integration_service.FixGroupResponse
	112, // 85: integration_service.IntegrationSevice.GetExchangeByID:output_type -> integration_service.FixExchangesResponse
	108, // 86: integration_service.IntegrationSevice.GetExchangesByType:output_type -> integration_service.GetExchangesResponse
	89,  // 87: integration_service.IntegrationSevice.GetShortDetailsByStocks:output_type -> integration_service.GetShortDetailsByStocksResponse
	105, // 88: integration_service.IntegrationSevice.UpdateIcon:output_type -> google.protobuf.Empty
	82,  // 89: integration_service.IntegrationSevice.FilterInstruments:output_type -> integration_service.FilterInstrumentsResponse
	107, // 90: integration_service.IntegrationSevice.GetInstrumentByID:output_type -> integration_service.FixSymbol
	79,  // 91: integration_service.IntegrationSevice.GetInstrumentHistory:output_type -> integration_service.GetInstrumentHistoryResponse
	90,  // 92: integration_service.IntegrationSevice.GetAllSymbolId:output_type -> integration_service.GetSymbolIdsResponse
	82,  // 93: integration_service.IntegrationSevice.FilteredInstruments:output_type -> integration_service.FilterInstrumentsResponse
	49,  // 94: integration_service.IntegrationSevice.GetMusaffoDetails:output_type -> integration_service.GetMusaffoDetailsResponse
	64,  // 95: integration_service.IntegrationSevice.GetKeyStats:output_type -> integration_service.GetKeyStatsResponse
	68,  // 96: integration_service.IntegrationSevice.GetBussinessSummary:output_type -> integration_service.GetBussinessSummaryResponse
	65,  // 97: integration_service.IntegrationSevice.GetKeyStatsNew:output_type -> integration_service.GetKeyStatsNewResponse
	57,  // 98: integration_service.IntegrationSevice.GetApplicantInfoByExternalID:output_type -> integration_service.GetApplicantInfoByExternalIdResponse
	73,  // 99: integration_service.IntegrationSevice.CreateApplicant:output_type -> integration_service.CreateApplicantResponse
	60,  // 100: integration_service.IntegrationSevice.GenerateToken:output_type -> integration_service.GenerateTokenResponse
	76,  // 101: integration_service.IntegrationSevice.UploadDocument:output_type -> integration_service.UploadDocumentResponse
	53,  // 102: integration_service.IntegrationSevice.GetApplicantDocs:output_type -> integration_service.GetApplicantDocsResponse
	51,  // 103: integration_service.IntegrationSevice.GetApplicantDocsStatus:output_type -> integration_service.GetApplicantDocsStatusResponse
	51,  // 104: integration_service.IntegrationSevice.GetApprovedInvestorsDocIds:output_type -> integration_service.GetApplicantDocsStatusResponse
	37,  // 105: integration_service.IntegrationSevice.UpdateKYCStatus:output_type -> integration_service.UpdateKYCStatusResponse
	55,  // 106: integration_service.IntegrationSevice.RetrieveStoriesByIds:output_type -> integration_service.RetrieveStoriesByIdsResponse
	69,  // 107: integration_service.IntegrationSevice.GetStockNews:output_type -> integration_service.GetStockNewsResponse
	47,  // 108: integration_service.IntegrationSevice.InvestorLoginByPhone:output_type -> integration_service.InvestorLoginByPhoneResponse
	46,  // 109: integration_service.IntegrationSevice.InvestorLoginVerifyByPhone:output_type -> integration_service.InvestorLoginVerifyResponse
	104, // 110: integration_service.IntegrationSevice.AddFavouriteInstrument:output_type -> integration_service.FavouriteInstrument
	93,  // 111: integration_service.IntegrationSevice.GetFavouriteInstruments:output_type -> integration_service.FavouriteInstrumentList
	104, // 112: integration_service.IntegrationSevice.RemoveFromFavourite:output_type -> integration_service.FavouriteInstrument
	94,  // 113: integration_service.IntegrationSevice.IsInstrumentFavourite:output_type -> integration_service.IsInstrumentFavouriteResponse
	43,  // 114: integration_service.IntegrationSevice.UpdateInstrumentMusaffoFromSalesforce:output_type -> integration_service.UpdateInstrumentMusaffoFromSalesforceResponse
	82,  // 115: integration_service.IntegrationSevice.GetLastCheckedInstruments:output_type -> integration_service.FilterInstrumentsResponse
	41,  // 116: integration_service.IntegrationSevice.UpdateInstrumentRefenitiveFromSalesforce:output_type -> integration_service.UpdateInstrumentRefenitiveFromSalesforceResponse
	41,  // 117: integration_service.IntegrationSevice.UpdateRatiosReport:output_type -> integration_service.UpdateInstrumentRefenitiveFromSalesforceResponse
	107, // 118: integration_service.IntegrationSevice.UpsertInstrument:output_type -> integration_service.FixSymbol
	35,  // 119: integration_service.IntegrationSevice.GetInstrumentRequiredFields:output_type -> integration_service.GetInstrumentRequiredFieldsResponse
	33,  // 120: integration_service.IntegrationSevice.CreateInvestorAlert:output_type -> integration_service.CreateInvestorAlertResponse
	30,  // 121: integration_service.IntegrationSevice.GetInvestorAlerts:output_type -> integration_service.GetInvestorAlertsReponse
	31,  // 122: integration_service.IntegrationSevice.GetInvestorOneAlert:output_type -> integration_service.GetInvestorOneAlertResponse
	27,  // 123: integration_service.IntegrationSevice.DeleteInvestorAlert:output_type -> integration_service.DeleteInvestorAlertResponse
	25,  // 124: integration_service.IntegrationSevice.UpdateInvestorAlert:output_type -> integration_service.UpdateInvestorAlertResponse
	23,  // 125: integration_service.IntegrationSevice.GetInstrumentNameById:output_type -> integration_service.GetInstrumentNameByIdResponse
	21,  // 126: integration_service.IntegrationSevice.GetInvestorInstrumentAlert:output_type -> integration_service.GetInvestorInstrumentAlertResponse
	18,  // 127: integration_service.IntegrationSevice.GetStreetEvents:output_type -> integration_service.GetStreetEventsResponse
	107, // 128: integration_service.IntegrationSevice.GetInstrumentByISID:output_type -> integration_service.FixSymbol
	15,  // 129: integration_service.IntegrationSevice.InsertSumsubComments:output_type -> integration_service.InsertSumsubCommentsResponse
	105, // 130: integration_service.IntegrationSevice.CreateUsersFromWeb:output_type -> google.protobuf.Empty
	11,  // 131: integration_service.IntegrationSevice.CheckEmail:output_type -> integration_service.CheckEmailResponse
	7,   // 132: integration_service.IntegrationSevice.GetLevelUpEmailTemplate:output_type -> integration_service.GetLevelUpEmailTemplateResponse
	105, // 133: integration_service.IntegrationSevice.UpdateCompaileQuestions:output_type -> google.protobuf.Empty
	105, // 134: integration_service.IntegrationSevice.UpdateUserFromWeb:output_type -> google.protobuf.Empty
	105, // 135: integration_service.IntegrationSevice.Createcommissionrule:output_type -> google.protobuf.Empty
	105, // 136: integration_service.IntegrationSevice.Deletecommissionrule:output_type -> google.protobuf.Empty
	3,   // 137: integration_service.IntegrationSevice.GetUserCommissionrule:output_type -> integration_service.CommissionRule
	1,   // 138: integration_service.IntegrationSevice.GetInstrumentIndustries:output_type -> integration_service.GetIndustriesResponse
	81,  // [81:139] is the sub-list for method output_type
	23,  // [23:81] is the sub-list for method input_type
	23,  // [23:23] is the sub-list for extension type_name
	23,  // [23:23] is the sub-list for extension extendee
	0,   // [0:23] is the sub-list for field type_name
}

func init() { file_integration_service_proto_init() }
func file_integration_service_proto_init() {
	if File_integration_service_proto != nil {
		return
	}
	file_fix_service_proto_init()
	file_integration_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_integration_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIndustry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIndustriesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletecommissionruleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommissionRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserCommissionruleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCompaileQuestionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompaileQuestions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLevelUpEmailTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLevelUpEmailTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckEmailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckEmailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUsersFromWebRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertSumsubCommentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertSumsubComments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertSumsubCommentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInstrumentByISIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStreetEventsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStreetEventsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreetEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInvestorInstrumentAlertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInvestorInstrumentAlertResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInstrumentNameByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInstrumentNameByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateInvestorAlertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateInvestorAlertResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInvestorAlertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInvestorAlertResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInvestorOneAlertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInvestorAlertsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInvestorAlertsReponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInvestorOneAlertResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateInvestorAlertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateInvestorAlertResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInstrumentRequiredFieldsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInstrumentRequiredFieldsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateKYCStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateKYCStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateInstrumentRefenitiveFromSalesforceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRatiosReportBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRatiosReportRequst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateInstrumentRefenitiveFromSalesforceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateInstrumentMusaffoFromSalesforceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateInstrumentMusaffoFromSalesforceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvestorLoginByPhoneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvestorLoginVerifyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvestorLoginVerifyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvestorLoginByPhoneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMusaffoDetailsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMusaffoDetailsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetApplicantDocsStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetApplicantDocsStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetApplicantDocsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetApplicantDocsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveStoriesByIdsRequests); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveStoriesByIdsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewsStory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetApplicantInfoByExternalIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetApplicantInfoByExternalIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetApplicantInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetApplicantInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKeyStatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKeyStatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKeyStatsNewResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBussinessSummaryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStockNewsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBussinessSummaryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStockNewsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateApplicantRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PersonalInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateApplicantResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadDocumentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadDocumentMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadDocumentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInstrumentHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInstrumentByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInstrumentHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstrumentHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterInstrumentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterInstrumentsByFindRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterInstrument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExchangesByTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterInstrumentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShortDetailsByStocksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShortDetailsByStocksData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShortDetailsByStocksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSymbolIdsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFavouriteInstrumentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvestorId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FavouriteInstrumentList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsInstrumentFavouriteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLastCheckedInstrumentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integration_service_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserFromWebRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_integration_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   97,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_integration_service_proto_goTypes,
		DependencyIndexes: file_integration_service_proto_depIdxs,
		MessageInfos:      file_integration_service_proto_msgTypes,
	}.Build()
	File_integration_service_proto = out.File
	file_integration_service_proto_rawDesc = nil
	file_integration_service_proto_goTypes = nil
	file_integration_service_proto_depIdxs = nil
}

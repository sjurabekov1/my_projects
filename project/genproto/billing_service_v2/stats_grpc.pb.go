// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.6.1
// source: stats.proto

package billing_service_v2

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// BillingAnaliticsServiceClient is the client API for BillingAnaliticsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type BillingAnaliticsServiceClient interface {
	GetPocketStatistics(ctx context.Context, in *GetCurrentAssetValueRequest, opts ...grpc.CallOption) (*GetCurrentAssetValueResponse, error)
	GetAssetList(ctx context.Context, in *GetAssetListRequest, opts ...grpc.CallOption) (*GetAssetListResponse, error)
}

type billingAnaliticsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBillingAnaliticsServiceClient(cc grpc.ClientConnInterface) BillingAnaliticsServiceClient {
	return &billingAnaliticsServiceClient{cc}
}

func (c *billingAnaliticsServiceClient) GetPocketStatistics(ctx context.Context, in *GetCurrentAssetValueRequest, opts ...grpc.CallOption) (*GetCurrentAssetValueResponse, error) {
	out := new(GetCurrentAssetValueResponse)
	err := c.cc.Invoke(ctx, "/billing_service_v2.BillingAnaliticsService/GetPocketStatistics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *billingAnaliticsServiceClient) GetAssetList(ctx context.Context, in *GetAssetListRequest, opts ...grpc.CallOption) (*GetAssetListResponse, error) {
	out := new(GetAssetListResponse)
	err := c.cc.Invoke(ctx, "/billing_service_v2.BillingAnaliticsService/GetAssetList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BillingAnaliticsServiceServer is the server API for BillingAnaliticsService service.
// All implementations must embed UnimplementedBillingAnaliticsServiceServer
// for forward compatibility
type BillingAnaliticsServiceServer interface {
	GetPocketStatistics(context.Context, *GetCurrentAssetValueRequest) (*GetCurrentAssetValueResponse, error)
	GetAssetList(context.Context, *GetAssetListRequest) (*GetAssetListResponse, error)
	mustEmbedUnimplementedBillingAnaliticsServiceServer()
}

// UnimplementedBillingAnaliticsServiceServer must be embedded to have forward compatible implementations.
type UnimplementedBillingAnaliticsServiceServer struct {
}

func (UnimplementedBillingAnaliticsServiceServer) GetPocketStatistics(context.Context, *GetCurrentAssetValueRequest) (*GetCurrentAssetValueResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPocketStatistics not implemented")
}
func (UnimplementedBillingAnaliticsServiceServer) GetAssetList(context.Context, *GetAssetListRequest) (*GetAssetListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAssetList not implemented")
}
func (UnimplementedBillingAnaliticsServiceServer) mustEmbedUnimplementedBillingAnaliticsServiceServer() {
}

// UnsafeBillingAnaliticsServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to BillingAnaliticsServiceServer will
// result in compilation errors.
type UnsafeBillingAnaliticsServiceServer interface {
	mustEmbedUnimplementedBillingAnaliticsServiceServer()
}

func RegisterBillingAnaliticsServiceServer(s grpc.ServiceRegistrar, srv BillingAnaliticsServiceServer) {
	s.RegisterService(&BillingAnaliticsService_ServiceDesc, srv)
}

func _BillingAnaliticsService_GetPocketStatistics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCurrentAssetValueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillingAnaliticsServiceServer).GetPocketStatistics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/billing_service_v2.BillingAnaliticsService/GetPocketStatistics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillingAnaliticsServiceServer).GetPocketStatistics(ctx, req.(*GetCurrentAssetValueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BillingAnaliticsService_GetAssetList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAssetListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillingAnaliticsServiceServer).GetAssetList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/billing_service_v2.BillingAnaliticsService/GetAssetList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillingAnaliticsServiceServer).GetAssetList(ctx, req.(*GetAssetListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// BillingAnaliticsService_ServiceDesc is the grpc.ServiceDesc for BillingAnaliticsService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var BillingAnaliticsService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "billing_service_v2.BillingAnaliticsService",
	HandlerType: (*BillingAnaliticsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPocketStatistics",
			Handler:    _BillingAnaliticsService_GetPocketStatistics_Handler,
		},
		{
			MethodName: "GetAssetList",
			Handler:    _BillingAnaliticsService_GetAssetList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "stats.proto",
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.6.1
// source: bank_account.proto

package billing_service_v2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UpsertBankAccountCurrencyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	BankAccountId string `protobuf:"bytes,2,opt,name=bank_account_id,json=bankAccountId,proto3" json:"bank_account_id,omitempty"`
	CurrencyId    string `protobuf:"bytes,3,opt,name=currency_id,json=currencyId,proto3" json:"currency_id,omitempty"`
}

func (x *UpsertBankAccountCurrencyRequest) Reset() {
	*x = UpsertBankAccountCurrencyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bank_account_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertBankAccountCurrencyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertBankAccountCurrencyRequest) ProtoMessage() {}

func (x *UpsertBankAccountCurrencyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bank_account_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertBankAccountCurrencyRequest.ProtoReflect.Descriptor instead.
func (*UpsertBankAccountCurrencyRequest) Descriptor() ([]byte, []int) {
	return file_bank_account_proto_rawDescGZIP(), []int{0}
}

func (x *UpsertBankAccountCurrencyRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpsertBankAccountCurrencyRequest) GetBankAccountId() string {
	if x != nil {
		return x.BankAccountId
	}
	return ""
}

func (x *UpsertBankAccountCurrencyRequest) GetCurrencyId() string {
	if x != nil {
		return x.CurrencyId
	}
	return ""
}

type CreateBankAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BankAccountName           string `protobuf:"bytes,2,opt,name=bank_account_name,json=bankAccountName,proto3" json:"bank_account_name,omitempty"`
	BicCode                   string `protobuf:"bytes,3,opt,name=bic_code,json=bicCode,proto3" json:"bic_code,omitempty"`
	IbanCode                  string `protobuf:"bytes,4,opt,name=iban_code,json=ibanCode,proto3" json:"iban_code,omitempty"`
	SwiftCode                 string `protobuf:"bytes,5,opt,name=swift_code,json=swiftCode,proto3" json:"swift_code,omitempty"`
	Currency                  int32  `protobuf:"varint,6,opt,name=currency,proto3" json:"currency,omitempty"`
	Region                    string `protobuf:"bytes,7,opt,name=region,proto3" json:"region,omitempty"`
	BankAddress               string `protobuf:"bytes,8,opt,name=bank_address,json=bankAddress,proto3" json:"bank_address,omitempty"`
	PhoneNumber               string `protobuf:"bytes,9,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	PaymentReference          string `protobuf:"bytes,10,opt,name=payment_reference,json=paymentReference,proto3" json:"payment_reference,omitempty"`
	RegistrationNumber        int64  `protobuf:"varint,11,opt,name=registration_number,json=registrationNumber,proto3" json:"registration_number,omitempty"`
	SalesforceId              string `protobuf:"bytes,12,opt,name=salesforce_id,json=salesforceId,proto3" json:"salesforce_id,omitempty"`
	OwnerName                 string `protobuf:"bytes,13,opt,name=owner_name,json=ownerName,proto3" json:"owner_name,omitempty"`
	TransactionsReference     string `protobuf:"bytes,14,opt,name=transactions_reference,json=transactionsReference,proto3" json:"transactions_reference,omitempty"`
	ReceivingPartyBankDetails string `protobuf:"bytes,15,opt,name=receiving_party_bank_details,json=receivingPartyBankDetails,proto3" json:"receiving_party_bank_details,omitempty"`
}

func (x *CreateBankAccountRequest) Reset() {
	*x = CreateBankAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bank_account_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBankAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBankAccountRequest) ProtoMessage() {}

func (x *CreateBankAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bank_account_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBankAccountRequest.ProtoReflect.Descriptor instead.
func (*CreateBankAccountRequest) Descriptor() ([]byte, []int) {
	return file_bank_account_proto_rawDescGZIP(), []int{1}
}

func (x *CreateBankAccountRequest) GetBankAccountName() string {
	if x != nil {
		return x.BankAccountName
	}
	return ""
}

func (x *CreateBankAccountRequest) GetBicCode() string {
	if x != nil {
		return x.BicCode
	}
	return ""
}

func (x *CreateBankAccountRequest) GetIbanCode() string {
	if x != nil {
		return x.IbanCode
	}
	return ""
}

func (x *CreateBankAccountRequest) GetSwiftCode() string {
	if x != nil {
		return x.SwiftCode
	}
	return ""
}

func (x *CreateBankAccountRequest) GetCurrency() int32 {
	if x != nil {
		return x.Currency
	}
	return 0
}

func (x *CreateBankAccountRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *CreateBankAccountRequest) GetBankAddress() string {
	if x != nil {
		return x.BankAddress
	}
	return ""
}

func (x *CreateBankAccountRequest) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *CreateBankAccountRequest) GetPaymentReference() string {
	if x != nil {
		return x.PaymentReference
	}
	return ""
}

func (x *CreateBankAccountRequest) GetRegistrationNumber() int64 {
	if x != nil {
		return x.RegistrationNumber
	}
	return 0
}

func (x *CreateBankAccountRequest) GetSalesforceId() string {
	if x != nil {
		return x.SalesforceId
	}
	return ""
}

func (x *CreateBankAccountRequest) GetOwnerName() string {
	if x != nil {
		return x.OwnerName
	}
	return ""
}

func (x *CreateBankAccountRequest) GetTransactionsReference() string {
	if x != nil {
		return x.TransactionsReference
	}
	return ""
}

func (x *CreateBankAccountRequest) GetReceivingPartyBankDetails() string {
	if x != nil {
		return x.ReceivingPartyBankDetails
	}
	return ""
}

type CreateBankAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	BankAccountName           string `protobuf:"bytes,2,opt,name=bank_account_name,json=bankAccountName,proto3" json:"bank_account_name,omitempty"`
	BicCode                   string `protobuf:"bytes,3,opt,name=bic_code,json=bicCode,proto3" json:"bic_code,omitempty"`
	IbanCode                  string `protobuf:"bytes,4,opt,name=iban_code,json=ibanCode,proto3" json:"iban_code,omitempty"`
	SwiftCode                 string `protobuf:"bytes,5,opt,name=swift_code,json=swiftCode,proto3" json:"swift_code,omitempty"`
	Currency                  int32  `protobuf:"varint,6,opt,name=currency,proto3" json:"currency,omitempty"`
	Region                    string `protobuf:"bytes,7,opt,name=region,proto3" json:"region,omitempty"`
	BankAddress               string `protobuf:"bytes,8,opt,name=bank_address,json=bankAddress,proto3" json:"bank_address,omitempty"`
	PhoneNumber               string `protobuf:"bytes,9,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	PaymentReference          string `protobuf:"bytes,10,opt,name=payment_reference,json=paymentReference,proto3" json:"payment_reference,omitempty"`
	RegistrationNumber        int64  `protobuf:"varint,11,opt,name=registration_number,json=registrationNumber,proto3" json:"registration_number,omitempty"`
	OwnerName                 string `protobuf:"bytes,12,opt,name=owner_name,json=ownerName,proto3" json:"owner_name,omitempty"`
	TransactionsReference     string `protobuf:"bytes,13,opt,name=transactions_reference,json=transactionsReference,proto3" json:"transactions_reference,omitempty"`
	ReceivingPartyBankDetails string `protobuf:"bytes,14,opt,name=receiving_party_bank_details,json=receivingPartyBankDetails,proto3" json:"receiving_party_bank_details,omitempty"`
}

func (x *CreateBankAccountResponse) Reset() {
	*x = CreateBankAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bank_account_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBankAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBankAccountResponse) ProtoMessage() {}

func (x *CreateBankAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bank_account_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBankAccountResponse.ProtoReflect.Descriptor instead.
func (*CreateBankAccountResponse) Descriptor() ([]byte, []int) {
	return file_bank_account_proto_rawDescGZIP(), []int{2}
}

func (x *CreateBankAccountResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateBankAccountResponse) GetBankAccountName() string {
	if x != nil {
		return x.BankAccountName
	}
	return ""
}

func (x *CreateBankAccountResponse) GetBicCode() string {
	if x != nil {
		return x.BicCode
	}
	return ""
}

func (x *CreateBankAccountResponse) GetIbanCode() string {
	if x != nil {
		return x.IbanCode
	}
	return ""
}

func (x *CreateBankAccountResponse) GetSwiftCode() string {
	if x != nil {
		return x.SwiftCode
	}
	return ""
}

func (x *CreateBankAccountResponse) GetCurrency() int32 {
	if x != nil {
		return x.Currency
	}
	return 0
}

func (x *CreateBankAccountResponse) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *CreateBankAccountResponse) GetBankAddress() string {
	if x != nil {
		return x.BankAddress
	}
	return ""
}

func (x *CreateBankAccountResponse) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *CreateBankAccountResponse) GetPaymentReference() string {
	if x != nil {
		return x.PaymentReference
	}
	return ""
}

func (x *CreateBankAccountResponse) GetRegistrationNumber() int64 {
	if x != nil {
		return x.RegistrationNumber
	}
	return 0
}

func (x *CreateBankAccountResponse) GetOwnerName() string {
	if x != nil {
		return x.OwnerName
	}
	return ""
}

func (x *CreateBankAccountResponse) GetTransactionsReference() string {
	if x != nil {
		return x.TransactionsReference
	}
	return ""
}

func (x *CreateBankAccountResponse) GetReceivingPartyBankDetails() string {
	if x != nil {
		return x.ReceivingPartyBankDetails
	}
	return ""
}

type GetBankAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currency string `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	Region   string `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	Id       string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetBankAccountRequest) Reset() {
	*x = GetBankAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bank_account_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBankAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBankAccountRequest) ProtoMessage() {}

func (x *GetBankAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bank_account_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBankAccountRequest.ProtoReflect.Descriptor instead.
func (*GetBankAccountRequest) Descriptor() ([]byte, []int) {
	return file_bank_account_proto_rawDescGZIP(), []int{3}
}

func (x *GetBankAccountRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *GetBankAccountRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *GetBankAccountRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetBankAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BankAccountName           string `protobuf:"bytes,1,opt,name=bank_account_name,json=bankAccountName,proto3" json:"bank_account_name,omitempty"`
	BicCode                   string `protobuf:"bytes,2,opt,name=bic_code,json=bicCode,proto3" json:"bic_code,omitempty"`
	IbanCode                  string `protobuf:"bytes,3,opt,name=iban_code,json=ibanCode,proto3" json:"iban_code,omitempty"`
	SwiftCode                 string `protobuf:"bytes,4,opt,name=swift_code,json=swiftCode,proto3" json:"swift_code,omitempty"`
	BankAddress               string `protobuf:"bytes,5,opt,name=bank_address,json=bankAddress,proto3" json:"bank_address,omitempty"`
	PhoneNumber               string `protobuf:"bytes,6,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	PaymentReference          string `protobuf:"bytes,7,opt,name=payment_reference,json=paymentReference,proto3" json:"payment_reference,omitempty"`
	RegistrationNumber        int64  `protobuf:"varint,8,opt,name=registration_number,json=registrationNumber,proto3" json:"registration_number,omitempty"`
	SalesforceId              string `protobuf:"bytes,9,opt,name=salesforce_id,json=salesforceId,proto3" json:"salesforce_id,omitempty"`
	OwnerName                 string `protobuf:"bytes,10,opt,name=owner_name,json=ownerName,proto3" json:"owner_name,omitempty"`
	TransactionsReference     string `protobuf:"bytes,11,opt,name=transactions_reference,json=transactionsReference,proto3" json:"transactions_reference,omitempty"`
	ReceivingPartyBankDetails string `protobuf:"bytes,12,opt,name=receiving_party_bank_details,json=receivingPartyBankDetails,proto3" json:"receiving_party_bank_details,omitempty"`
}

func (x *GetBankAccountResponse) Reset() {
	*x = GetBankAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bank_account_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBankAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBankAccountResponse) ProtoMessage() {}

func (x *GetBankAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bank_account_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBankAccountResponse.ProtoReflect.Descriptor instead.
func (*GetBankAccountResponse) Descriptor() ([]byte, []int) {
	return file_bank_account_proto_rawDescGZIP(), []int{4}
}

func (x *GetBankAccountResponse) GetBankAccountName() string {
	if x != nil {
		return x.BankAccountName
	}
	return ""
}

func (x *GetBankAccountResponse) GetBicCode() string {
	if x != nil {
		return x.BicCode
	}
	return ""
}

func (x *GetBankAccountResponse) GetIbanCode() string {
	if x != nil {
		return x.IbanCode
	}
	return ""
}

func (x *GetBankAccountResponse) GetSwiftCode() string {
	if x != nil {
		return x.SwiftCode
	}
	return ""
}

func (x *GetBankAccountResponse) GetBankAddress() string {
	if x != nil {
		return x.BankAddress
	}
	return ""
}

func (x *GetBankAccountResponse) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *GetBankAccountResponse) GetPaymentReference() string {
	if x != nil {
		return x.PaymentReference
	}
	return ""
}

func (x *GetBankAccountResponse) GetRegistrationNumber() int64 {
	if x != nil {
		return x.RegistrationNumber
	}
	return 0
}

func (x *GetBankAccountResponse) GetSalesforceId() string {
	if x != nil {
		return x.SalesforceId
	}
	return ""
}

func (x *GetBankAccountResponse) GetOwnerName() string {
	if x != nil {
		return x.OwnerName
	}
	return ""
}

func (x *GetBankAccountResponse) GetTransactionsReference() string {
	if x != nil {
		return x.TransactionsReference
	}
	return ""
}

func (x *GetBankAccountResponse) GetReceivingPartyBankDetails() string {
	if x != nil {
		return x.ReceivingPartyBankDetails
	}
	return ""
}

type SetSalesforceIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationId  string `protobuf:"bytes,1,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
	SalesforceId string `protobuf:"bytes,2,opt,name=salesforce_id,json=salesforceId,proto3" json:"salesforce_id,omitempty"`
}

func (x *SetSalesforceIdRequest) Reset() {
	*x = SetSalesforceIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bank_account_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetSalesforceIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSalesforceIdRequest) ProtoMessage() {}

func (x *SetSalesforceIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bank_account_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSalesforceIdRequest.ProtoReflect.Descriptor instead.
func (*SetSalesforceIdRequest) Descriptor() ([]byte, []int) {
	return file_bank_account_proto_rawDescGZIP(), []int{5}
}

func (x *SetSalesforceIdRequest) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

func (x *SetSalesforceIdRequest) GetSalesforceId() string {
	if x != nil {
		return x.SalesforceId
	}
	return ""
}

type UpdateBankAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	BankAccountName           string `protobuf:"bytes,2,opt,name=bank_account_name,json=bankAccountName,proto3" json:"bank_account_name,omitempty"`
	BicCode                   string `protobuf:"bytes,3,opt,name=bic_code,json=bicCode,proto3" json:"bic_code,omitempty"`
	IbanCode                  string `protobuf:"bytes,4,opt,name=iban_code,json=ibanCode,proto3" json:"iban_code,omitempty"`
	SwiftCode                 string `protobuf:"bytes,5,opt,name=swift_code,json=swiftCode,proto3" json:"swift_code,omitempty"`
	Currency                  int64  `protobuf:"varint,6,opt,name=currency,proto3" json:"currency,omitempty"`
	Region                    string `protobuf:"bytes,7,opt,name=region,proto3" json:"region,omitempty"`
	BankAddress               string `protobuf:"bytes,8,opt,name=bank_address,json=bankAddress,proto3" json:"bank_address,omitempty"`
	PhoneNumber               string `protobuf:"bytes,9,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	PaymentReference          string `protobuf:"bytes,10,opt,name=payment_reference,json=paymentReference,proto3" json:"payment_reference,omitempty"`
	RegistrationNumber        int64  `protobuf:"varint,11,opt,name=registration_number,json=registrationNumber,proto3" json:"registration_number,omitempty"`
	SalesforceId              string `protobuf:"bytes,12,opt,name=salesforce_id,json=salesforceId,proto3" json:"salesforce_id,omitempty"`
	OwnerName                 string `protobuf:"bytes,13,opt,name=owner_name,json=ownerName,proto3" json:"owner_name,omitempty"`
	TransactionsReference     string `protobuf:"bytes,14,opt,name=transactions_reference,json=transactionsReference,proto3" json:"transactions_reference,omitempty"`
	ReceivingPartyBankDetails string `protobuf:"bytes,15,opt,name=receiving_party_bank_details,json=receivingPartyBankDetails,proto3" json:"receiving_party_bank_details,omitempty"`
}

func (x *UpdateBankAccountRequest) Reset() {
	*x = UpdateBankAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bank_account_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBankAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBankAccountRequest) ProtoMessage() {}

func (x *UpdateBankAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bank_account_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBankAccountRequest.ProtoReflect.Descriptor instead.
func (*UpdateBankAccountRequest) Descriptor() ([]byte, []int) {
	return file_bank_account_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateBankAccountRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateBankAccountRequest) GetBankAccountName() string {
	if x != nil {
		return x.BankAccountName
	}
	return ""
}

func (x *UpdateBankAccountRequest) GetBicCode() string {
	if x != nil {
		return x.BicCode
	}
	return ""
}

func (x *UpdateBankAccountRequest) GetIbanCode() string {
	if x != nil {
		return x.IbanCode
	}
	return ""
}

func (x *UpdateBankAccountRequest) GetSwiftCode() string {
	if x != nil {
		return x.SwiftCode
	}
	return ""
}

func (x *UpdateBankAccountRequest) GetCurrency() int64 {
	if x != nil {
		return x.Currency
	}
	return 0
}

func (x *UpdateBankAccountRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *UpdateBankAccountRequest) GetBankAddress() string {
	if x != nil {
		return x.BankAddress
	}
	return ""
}

func (x *UpdateBankAccountRequest) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *UpdateBankAccountRequest) GetPaymentReference() string {
	if x != nil {
		return x.PaymentReference
	}
	return ""
}

func (x *UpdateBankAccountRequest) GetRegistrationNumber() int64 {
	if x != nil {
		return x.RegistrationNumber
	}
	return 0
}

func (x *UpdateBankAccountRequest) GetSalesforceId() string {
	if x != nil {
		return x.SalesforceId
	}
	return ""
}

func (x *UpdateBankAccountRequest) GetOwnerName() string {
	if x != nil {
		return x.OwnerName
	}
	return ""
}

func (x *UpdateBankAccountRequest) GetTransactionsReference() string {
	if x != nil {
		return x.TransactionsReference
	}
	return ""
}

func (x *UpdateBankAccountRequest) GetReceivingPartyBankDetails() string {
	if x != nil {
		return x.ReceivingPartyBankDetails
	}
	return ""
}

type SetSalesforceIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SalesforceId string `protobuf:"bytes,1,opt,name=salesforce_id,json=salesforceId,proto3" json:"salesforce_id,omitempty"`
}

func (x *SetSalesforceIdResponse) Reset() {
	*x = SetSalesforceIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bank_account_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetSalesforceIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSalesforceIdResponse) ProtoMessage() {}

func (x *SetSalesforceIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bank_account_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSalesforceIdResponse.ProtoReflect.Descriptor instead.
func (*SetSalesforceIdResponse) Descriptor() ([]byte, []int) {
	return file_bank_account_proto_rawDescGZIP(), []int{7}
}

func (x *SetSalesforceIdResponse) GetSalesforceId() string {
	if x != nil {
		return x.SalesforceId
	}
	return ""
}

type UpdateBankAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateBankAccountResponse) Reset() {
	*x = UpdateBankAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bank_account_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBankAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBankAccountResponse) ProtoMessage() {}

func (x *UpdateBankAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bank_account_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBankAccountResponse.ProtoReflect.Descriptor instead.
func (*UpdateBankAccountResponse) Descriptor() ([]byte, []int) {
	return file_bank_account_proto_rawDescGZIP(), []int{8}
}

type UpsertBankAccountCurrencyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpsertBankAccountCurrencyResponse) Reset() {
	*x = UpsertBankAccountCurrencyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bank_account_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertBankAccountCurrencyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertBankAccountCurrencyResponse) ProtoMessage() {}

func (x *UpsertBankAccountCurrencyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bank_account_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertBankAccountCurrencyResponse.ProtoReflect.Descriptor instead.
func (*UpsertBankAccountCurrencyResponse) Descriptor() ([]byte, []int) {
	return file_bank_account_proto_rawDescGZIP(), []int{9}
}

var File_bank_account_proto protoreflect.FileDescriptor

var file_bank_account_proto_rawDesc = []byte{
	0x0a, 0x12, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x76, 0x32, 0x22, 0x7b, 0x0a, 0x20, 0x55, 0x70, 0x73, 0x65,
	0x72, 0x74, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0f,
	0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x49, 0x64, 0x22, 0xb1, 0x04, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x62,
	0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x62, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x62, 0x69, 0x63, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x62, 0x61,
	0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x62,
	0x61, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x77, 0x69, 0x66, 0x74, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x77, 0x69, 0x66,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x61, 0x6e,
	0x6b, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x62, 0x61, 0x6e, 0x6b, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x21, 0x0a, 0x0c,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x2b, 0x0a, 0x11, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x2f, 0x0a, 0x13,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x23, 0x0a,
	0x0d, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x66, 0x6f, 0x72, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x35, 0x0a, 0x16, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x15, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x3f, 0x0a, 0x1c, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x62, 0x61, 0x6e, 0x6b,
	0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72, 0x74, 0x79, 0x42, 0x61,
	0x6e, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x9d, 0x04, 0x0a, 0x19, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x62, 0x61, 0x6e, 0x6b, 0x5f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x62, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x69, 0x63, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x69, 0x62, 0x61, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x69, 0x62, 0x61, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x77, 0x69, 0x66, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x77, 0x69, 0x66, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x21,
	0x0a, 0x0c, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x61, 0x6e, 0x6b, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x11, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x12, 0x2f, 0x0a, 0x13, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x35, 0x0a, 0x16, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x15, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x3f, 0x0a, 0x1c, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x62, 0x61, 0x6e, 0x6b,
	0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72, 0x74, 0x79, 0x42, 0x61,
	0x6e, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x5b, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xfb, 0x03, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x42, 0x61,
	0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2a, 0x0a, 0x11, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x62, 0x61,
	0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x62, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x62, 0x69, 0x63, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x62, 0x61, 0x6e,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x62, 0x61,
	0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x77, 0x69, 0x66, 0x74, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x77, 0x69, 0x66, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x61, 0x6e, 0x6b,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x11, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x2f, 0x0a, 0x13, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x61, 0x6c, 0x65,
	0x73, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x16,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x12, 0x3f, 0x0a, 0x1c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x69, 0x6e, 0x67,
	0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72, 0x74, 0x79, 0x42, 0x61, 0x6e, 0x6b, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x22, 0x60, 0x0a, 0x16, 0x53, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73,
	0x66, 0x6f, 0x72, 0x63, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21,
	0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x66,
	0x6f, 0x72, 0x63, 0x65, 0x49, 0x64, 0x22, 0xc1, 0x04, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x62, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x62, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x62, 0x69, 0x63, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x62,
	0x61, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69,
	0x62, 0x61, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x77, 0x69, 0x66, 0x74,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x77, 0x69,
	0x66, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x61,
	0x6e, 0x6b, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x62, 0x61, 0x6e, 0x6b, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x21, 0x0a,
	0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x2b, 0x0a, 0x11, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x2f, 0x0a,
	0x13, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x23,
	0x0a, 0x0d, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x66, 0x6f, 0x72, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x35, 0x0a, 0x16, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x15, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x3f, 0x0a, 0x1c, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x62, 0x61, 0x6e,
	0x6b, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x19, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72, 0x74, 0x79, 0x42,
	0x61, 0x6e, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x3e, 0x0a, 0x17, 0x53, 0x65,
	0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x66, 0x6f,
	0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x61,
	0x6c, 0x65, 0x73, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x49, 0x64, 0x22, 0x1b, 0x0a, 0x19, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x0a, 0x21, 0x55, 0x70, 0x73, 0x65, 0x72,
	0x74, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xdb, 0x04, 0x0a,
	0x0b, 0x42, 0x61, 0x6e, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x72, 0x0a, 0x11,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x2c, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e,
	0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2d, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x6b, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x69, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6e, 0x6b, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e,
	0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6c, 0x0a, 0x0f, 0x53,
	0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2a,
	0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x66, 0x6f, 0x72, 0x63,
	0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x62, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x76, 0x32, 0x2e,
	0x53, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x49, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x72, 0x0a, 0x11, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c,
	0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x62,
	0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x76,
	0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8a, 0x01,
	0x0a, 0x19, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x34, 0x2e, 0x62, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x76, 0x32,
	0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x35, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x42, 0x61, 0x6e,
	0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x1d, 0x5a, 0x1b, 0x67, 0x65,
	0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x76, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_bank_account_proto_rawDescOnce sync.Once
	file_bank_account_proto_rawDescData = file_bank_account_proto_rawDesc
)

func file_bank_account_proto_rawDescGZIP() []byte {
	file_bank_account_proto_rawDescOnce.Do(func() {
		file_bank_account_proto_rawDescData = protoimpl.X.CompressGZIP(file_bank_account_proto_rawDescData)
	})
	return file_bank_account_proto_rawDescData
}

var file_bank_account_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_bank_account_proto_goTypes = []interface{}{
	(*UpsertBankAccountCurrencyRequest)(nil),  // 0: billing_service_v2.UpsertBankAccountCurrencyRequest
	(*CreateBankAccountRequest)(nil),          // 1: billing_service_v2.CreateBankAccountRequest
	(*CreateBankAccountResponse)(nil),         // 2: billing_service_v2.CreateBankAccountResponse
	(*GetBankAccountRequest)(nil),             // 3: billing_service_v2.GetBankAccountRequest
	(*GetBankAccountResponse)(nil),            // 4: billing_service_v2.GetBankAccountResponse
	(*SetSalesforceIdRequest)(nil),            // 5: billing_service_v2.SetSalesforceIdRequest
	(*UpdateBankAccountRequest)(nil),          // 6: billing_service_v2.UpdateBankAccountRequest
	(*SetSalesforceIdResponse)(nil),           // 7: billing_service_v2.SetSalesforceIdResponse
	(*UpdateBankAccountResponse)(nil),         // 8: billing_service_v2.UpdateBankAccountResponse
	(*UpsertBankAccountCurrencyResponse)(nil), // 9: billing_service_v2.UpsertBankAccountCurrencyResponse
}
var file_bank_account_proto_depIdxs = []int32{
	1, // 0: billing_service_v2.BankService.CreateBankAccount:input_type -> billing_service_v2.CreateBankAccountRequest
	3, // 1: billing_service_v2.BankService.GetBankAccount:input_type -> billing_service_v2.GetBankAccountRequest
	5, // 2: billing_service_v2.BankService.SetSalesforceId:input_type -> billing_service_v2.SetSalesforceIdRequest
	6, // 3: billing_service_v2.BankService.UpdateBankAccount:input_type -> billing_service_v2.UpdateBankAccountRequest
	0, // 4: billing_service_v2.BankService.UpsertBankAccountCurrency:input_type -> billing_service_v2.UpsertBankAccountCurrencyRequest
	2, // 5: billing_service_v2.BankService.CreateBankAccount:output_type -> billing_service_v2.CreateBankAccountResponse
	4, // 6: billing_service_v2.BankService.GetBankAccount:output_type -> billing_service_v2.GetBankAccountResponse
	7, // 7: billing_service_v2.BankService.SetSalesforceId:output_type -> billing_service_v2.SetSalesforceIdResponse
	8, // 8: billing_service_v2.BankService.UpdateBankAccount:output_type -> billing_service_v2.UpdateBankAccountResponse
	9, // 9: billing_service_v2.BankService.UpsertBankAccountCurrency:output_type -> billing_service_v2.UpsertBankAccountCurrencyResponse
	5, // [5:10] is the sub-list for method output_type
	0, // [0:5] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_bank_account_proto_init() }
func file_bank_account_proto_init() {
	if File_bank_account_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bank_account_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertBankAccountCurrencyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bank_account_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBankAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bank_account_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBankAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bank_account_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBankAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bank_account_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBankAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bank_account_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetSalesforceIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bank_account_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBankAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bank_account_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetSalesforceIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bank_account_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBankAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bank_account_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertBankAccountCurrencyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bank_account_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bank_account_proto_goTypes,
		DependencyIndexes: file_bank_account_proto_depIdxs,
		MessageInfos:      file_bank_account_proto_msgTypes,
	}.Build()
	File_bank_account_proto = out.File
	file_bank_account_proto_rawDesc = nil
	file_bank_account_proto_goTypes = nil
	file_bank_account_proto_depIdxs = nil
}

// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.2
// source: pocket_type.sql

package sqlc

import (
	"context"
)

const getAllPocketTypes = `-- name: GetAllPocketTypes :many
SELECT id, name, icon_id, required
FROM pocket_type
WHERE TRUE
    AND CASE
        WHEN $1 = FALSE THEN TRUE
        ELSE required = $1
    END OFFSET $2
LIMIT $3
`

type GetAllPocketTypesParams struct {
	Required interface{} `json:"required"`
	Offset   int32       `json:"offset"`
	Limit    int32       `json:"limit"`
}

func (q *Queries) GetAllPocketTypes(ctx context.Context, arg GetAllPocketTypesParams) ([]PocketType, error) {
	rows, err := q.db.Query(ctx, getAllPocketTypes, arg.Required, arg.Offset, arg.Limit)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []PocketType
	for rows.Next() {
		var i PocketType
		if err := rows.Scan(
			&i.ID,
			&i.Name,
			&i.IconID,
			&i.Required,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
